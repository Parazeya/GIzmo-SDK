{
  "openapi": "3.0.1",
  "info": {
    "description": "Gizmo web api.",
    "contact": {
      "name": "GizmoPowered",
      "url": "https://www.gizmopowered.net",
      "email": "support@gizmopowered.net"
    },
    "version": "v3.0"
  },
  "paths": {
    "/api/v3.0/agerestrictions": {
      "get": {
        "tags": [
          "AgeRestrictions"
        ],
        "summary": "Gets filtered entries.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1
              ],
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgeRestrictionModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AgeRestrictionModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/agerestrictions/{id}": {
      "get": {
        "tags": [
          "AgeRestrictions"
        ],
        "summary": "Gets entry by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgeRestrictionModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AgeRestrictionModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AgeRestrictions"
        ],
        "summary": "Deletes entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/agerestrictions/login": {
      "post": {
        "tags": [
          "AgeRestrictions"
        ],
        "summary": "Creates entry.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgeRestrictionLoginModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AgeRestrictionLoginModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AgeRestrictionLoginModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/AgeRestrictionLoginModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/AgeRestrictionLoginModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/agerestrictions/product": {
      "post": {
        "tags": [
          "AgeRestrictions"
        ],
        "summary": "Creates entry.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgeRestrictionProductModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AgeRestrictionProductModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AgeRestrictionProductModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/AgeRestrictionProductModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/AgeRestrictionProductModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/apikeys": {
      "get": {
        "tags": [
          "ApiKeys"
        ],
        "summary": "Gets filtered entries.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsDisabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApiKeys"
        ],
        "summary": "Creates entry.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKeyCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKeyCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKeyCreateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApiKeyCreateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApiKeyCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyCreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyCreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/apikeys/{id}": {
      "get": {
        "tags": [
          "ApiKeys"
        ],
        "summary": "Gets entry by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiKeys"
        ],
        "summary": "Deletes entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/apikeys/{id}/undelete": {
      "put": {
        "tags": [
          "ApiKeys"
        ],
        "summary": "Undeletes entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/apikeys/{id}/enable": {
      "put": {
        "tags": [
          "ApiKeys"
        ],
        "summary": "Enables entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/apikeys/{id}/disable": {
      "put": {
        "tags": [
          "ApiKeys"
        ],
        "summary": "Disables entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationcategories": {
      "get": {
        "tags": [
          "ApplicationCategories"
        ],
        "summary": "Get all application categories.",
        "description": "<b>Returns a list of application categories.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "CategoryName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ParentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationCategoryModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationCategoryModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationCategories"
        ],
        "summary": "Create an application category.",
        "requestBody": {
          "description": "Application category.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationCategoryModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationCategoryModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationCategoryModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationCategoryModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationCategoryModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationCategories"
        ],
        "summary": "Update an application category.",
        "requestBody": {
          "description": "Application category.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationCategoryModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationCategoryModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationCategoryModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationCategoryModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationCategoryModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationcategories/{id}": {
      "get": {
        "tags": [
          "ApplicationCategories"
        ],
        "summary": "Get an application category by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application category id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationCategoryModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationCategoryModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationCategories"
        ],
        "summary": "Delete an application category.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application category id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MoveToApplicationCategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationCategoryDeleteResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationCategoryDeleteResultModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/applicationdeployments": {
      "get": {
        "tags": [
          "ApplicationDeployments"
        ],
        "summary": "Get all application deployments.",
        "description": "<b>Returns a list of application deployments.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "DeploymentName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationDeploymentModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationDeploymentModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationDeployments"
        ],
        "summary": "Create an application deployment.",
        "requestBody": {
          "description": "Application deployment.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationDeploymentModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationDeploymentModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationDeploymentModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationDeploymentModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationDeploymentModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationDeployments"
        ],
        "summary": "Update an application deployment.",
        "requestBody": {
          "description": "Application deployment.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationDeploymentModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationDeploymentModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationDeploymentModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationDeploymentModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationDeploymentModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationdeployments/{id}": {
      "get": {
        "tags": [
          "ApplicationDeployments"
        ],
        "summary": "Get an application deployment by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application deployment id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationDeploymentModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationDeploymentModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationDeployments"
        ],
        "summary": "Delete an application deployments.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application deployment id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/applicationdeployments/{id}/usages": {
      "get": {
        "tags": [
          "ApplicationDeployments"
        ],
        "summary": "Returns the list of applications and executables that have the specified deployment assigned.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application deployment id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationDeploymentUsageModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationDeploymentUsageModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/applicationdeployments/{id}/unassign": {
      "put": {
        "tags": [
          "ApplicationDeployments"
        ],
        "summary": "Unassign the specified deployment from every executable.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application deployment id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/applicationenterprises": {
      "get": {
        "tags": [
          "ApplicationEnterprises"
        ],
        "summary": "Get all application enterprises.",
        "description": "<b>Returns a list of application enterprises.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationEnterpriseModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationEnterpriseModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationEnterprises"
        ],
        "summary": "Create an application enterprise.",
        "requestBody": {
          "description": "Application enterprise.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationEnterpriseModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationEnterpriseModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationEnterpriseModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationEnterpriseModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationEnterpriseModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationEnterprises"
        ],
        "summary": "Update an application enterprise.",
        "requestBody": {
          "description": "Application enterprise.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationEnterpriseModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationEnterpriseModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationEnterpriseModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationEnterpriseModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationEnterpriseModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationenterprises/{id}": {
      "get": {
        "tags": [
          "ApplicationEnterprises"
        ],
        "summary": "Get an application enterprise by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application enterprise id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationEnterpriseModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationEnterpriseModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationEnterprises"
        ],
        "summary": "Delete an application enterprise.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application enterprise id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/applicationexecutables": {
      "get": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Get all application executables.",
        "description": "<b>Returns a list of application executables.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "ExecutableCaption",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApplicationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationExecutableModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationExecutableModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Create an application executable.",
        "requestBody": {
          "description": "Application executables.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Update an application executable.",
        "requestBody": {
          "description": "Application executables.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationexecutables/agerating": {
      "get": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Get all application executables age rating.",
        "parameters": [
          {
            "name": "Pagination.PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationExecutableAgeRatingModelPagedListClassic"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationExecutableAgeRatingModelPagedListClassic"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationexecutables/{id}": {
      "get": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Get an application executable by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executables id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationExecutableModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationExecutableModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Delete an application executable.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executables id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/applicationexecutables/{id}/personalfiles": {
      "get": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Get the personal files of the specified application executable.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationExecutablePersonalFileModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationExecutablePersonalFileModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Create an application executable personal file.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Application executable personal file.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutablePersonalFileModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutablePersonalFileModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutablePersonalFileModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutablePersonalFileModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutablePersonalFileModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationexecutables/personalfiles": {
      "put": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Update an application executable personal file.",
        "description": "<b></b>",
        "requestBody": {
          "description": "Application executable personal file.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutablePersonalFileModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutablePersonalFileModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutablePersonalFileModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutablePersonalFileModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutablePersonalFileModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationexecutables/{id}/personalfiles/{personalFileId}": {
      "delete": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Delete an application executable personal file.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "personalFileId",
            "in": "path",
            "description": "Personal file id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationexecutables/{id}/deployments": {
      "get": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Get the deployments of the specified application executable.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationExecutableDeploymentModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationExecutableDeploymentModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Create an application executable deployment.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Application executable deployment.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableDeploymentModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableDeploymentModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableDeploymentModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableDeploymentModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableDeploymentModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationexecutables/deployments": {
      "put": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Update an application executable deployment.",
        "description": "<b></b>",
        "requestBody": {
          "description": "Application executable deployment.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableDeploymentModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableDeploymentModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableDeploymentModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableDeploymentModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableDeploymentModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationexecutables/{id}/deployments/{deploymentId}": {
      "delete": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Delete an application executable deployment.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "deploymentId",
            "in": "path",
            "description": "Deployment id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationexecutables/{id}/tasks": {
      "get": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Get the tasks of the specified application executable.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/V3ApplicationExecutableTaskModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/V3ApplicationExecutableTaskModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Create an application executable task.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Application executable task.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V3ApplicationExecutableTaskModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/V3ApplicationExecutableTaskModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/V3ApplicationExecutableTaskModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/V3ApplicationExecutableTaskModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/V3ApplicationExecutableTaskModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationexecutables/tasks": {
      "put": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Update an application executable task.",
        "description": "<b></b>",
        "requestBody": {
          "description": "Application executable task.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V3ApplicationExecutableTaskModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/V3ApplicationExecutableTaskModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/V3ApplicationExecutableTaskModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/V3ApplicationExecutableTaskModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/V3ApplicationExecutableTaskModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationexecutables/{id}/tasks/{taskId}": {
      "delete": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Delete an application executable task.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "Task id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationexecutables/{id}/licenses": {
      "get": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Get the licenses of the specified application executable.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationExecutableLicenseModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationExecutableLicenseModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Create an application executable license.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Application executable license.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableLicenseModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableLicenseModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableLicenseModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableLicenseModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableLicenseModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationexecutables/licenses": {
      "put": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Update an application executable license.",
        "description": "<b></b>",
        "requestBody": {
          "description": "Application executable license.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableLicenseModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableLicenseModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableLicenseModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableLicenseModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableLicenseModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationexecutables/{id}/licenses/{licenseId}": {
      "delete": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Delete an application executable license.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "licenseId",
            "in": "path",
            "description": "License id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationexecutables/{id}/cdimages": {
      "get": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Get the cd images of the specified application executable.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationExecutableCdImageModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationExecutableCdImageModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Create an application executable cd image.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Application executable cd image.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableCdImageModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableCdImageModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableCdImageModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableCdImageModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableCdImageModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationexecutables/cdimages": {
      "put": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Update an application executable cd image.",
        "description": "<b></b>",
        "requestBody": {
          "description": "Application executable cd image.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableCdImageModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableCdImageModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableCdImageModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableCdImageModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableCdImageModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationexecutables/{id}/cdimages/{cdimageId}": {
      "delete": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Delete an application executable cd image.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cdimageId",
            "in": "path",
            "description": "Cd image id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationexecutables/{id}/image": {
      "get": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Get the image of the specified application executable.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationExecutableModelImage"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationExecutableModelImage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Update the image of the specified application executable.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Application executable image.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelImage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelImage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelImage"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelImage"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelImage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationexecutables/{id}/duplicate": {
      "post": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Duplicate the specified application executable.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Application executable duplicate.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelDuplicate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelDuplicate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelDuplicate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelDuplicate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelDuplicate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationexecutables/{id}/branches": {
      "get": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Gets branch configuration entries.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BranchReferenceModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BranchReferenceModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Sets branch configuration entries.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Branch configuration entries.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BranchReferenceModelUpdate"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BranchReferenceModelUpdate"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BranchReferenceModelUpdate"
                }
              }
            },
            "application/x-msgpack": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BranchReferenceModelUpdate"
                }
              }
            },
            "application/octet-stream": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BranchReferenceModelUpdate"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationgroups": {
      "get": {
        "tags": [
          "ApplicationGroups"
        ],
        "summary": "Get all application groups.",
        "description": "<b>Returns a list of application groups.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "GroupName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationGroupModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationGroupModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationGroups"
        ],
        "summary": "Create an application group.",
        "requestBody": {
          "description": "Application group.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationGroups"
        ],
        "summary": "Update an application group.",
        "requestBody": {
          "description": "Application group.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationgroups/{id}": {
      "get": {
        "tags": [
          "ApplicationGroups"
        ],
        "summary": "Get an application group by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationGroupModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationGroupModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationGroups"
        ],
        "summary": "Delete an application group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/applicationgroups/{id}/applications": {
      "get": {
        "tags": [
          "ApplicationGroups"
        ],
        "summary": "Get the applications of the specified application group.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationGroupApplicationModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationGroupApplicationModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationGroups"
        ],
        "summary": "Add an application to the specified application group.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Application group application.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupApplicationModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupApplicationModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupApplicationModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupApplicationModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupApplicationModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationgroups/application/{id}": {
      "get": {
        "tags": [
          "ApplicationGroups"
        ],
        "summary": "Get the application groups of the specified application.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationGroupApplicationModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationGroupApplicationModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationgroups/{id}/applications/{applicationId}": {
      "delete": {
        "tags": [
          "ApplicationGroups"
        ],
        "summary": "Remove an application from the specified application group.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "Application id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationgroups/applications/create": {
      "post": {
        "tags": [
          "ApplicationGroups"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupApplicationsModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupApplicationsModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupApplicationsModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupApplicationsModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupApplicationsModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationgroups/applications/update": {
      "put": {
        "tags": [
          "ApplicationGroups"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupApplicationsModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupApplicationsModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupApplicationsModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupApplicationsModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupApplicationsModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationgroups/application/{id}/update": {
      "put": {
        "tags": [
          "ApplicationGroups"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationApplicationGroupsModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationApplicationGroupsModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationApplicationGroupsModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationApplicationGroupsModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationApplicationGroupsModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationlicenses": {
      "get": {
        "tags": [
          "ApplicationLicenses"
        ],
        "summary": "Get all application licenses.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "LicenseName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationLicenseModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationLicenseModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationLicenses"
        ],
        "summary": "Create an application executable license.",
        "requestBody": {
          "description": "Application executable license.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationLicenseModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationLicenseModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationLicenseModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationLicenseModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationLicenseModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationLicenses"
        ],
        "summary": "Update an application executable license.",
        "requestBody": {
          "description": "Application executable license.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationLicenseModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationLicenseModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationLicenseModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationLicenseModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationLicenseModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationlicenses/{id}": {
      "get": {
        "tags": [
          "ApplicationLicenses"
        ],
        "summary": "Get an application executable license by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable license id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationLicenseModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationLicenseModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationLicenses"
        ],
        "summary": "Delete an application executable licenses.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable license id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationlinks": {
      "get": {
        "tags": [
          "ApplicationLinks"
        ],
        "summary": "Get all application links.",
        "description": "<b>Returns a list of application links.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ApplicationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationLinkModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationLinkModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationLinks"
        ],
        "summary": "Create an application link.",
        "requestBody": {
          "description": "Application links.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationLinkModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationLinkModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationLinkModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationLinkModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationLinkModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationLinks"
        ],
        "summary": "Update an application link.",
        "requestBody": {
          "description": "Application links.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationLinkModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationLinkModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationLinkModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationLinkModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationLinkModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationlinks/{id}": {
      "get": {
        "tags": [
          "ApplicationLinks"
        ],
        "summary": "Get an application link by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application links id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationLinkModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationLinkModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationLinks"
        ],
        "summary": "Delete an application link.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application links id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/applicationpersonalfiles": {
      "get": {
        "tags": [
          "ApplicationPersonalFiles"
        ],
        "summary": "Get all application personal files.",
        "description": "<b>Returns a list of application personal files.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "PersonalFileName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PersonalFileCaption",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationPersonalFileModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationPersonalFileModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationPersonalFiles"
        ],
        "summary": "Create an application personal file.",
        "requestBody": {
          "description": "Application personal file.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationPersonalFileModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationPersonalFileModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationPersonalFileModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationPersonalFileModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationPersonalFileModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationPersonalFiles"
        ],
        "summary": "Update an application personal file.",
        "requestBody": {
          "description": "Application personal file.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationPersonalFileModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationPersonalFileModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationPersonalFileModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationPersonalFileModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationPersonalFileModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationpersonalfiles/{id}": {
      "get": {
        "tags": [
          "ApplicationPersonalFiles"
        ],
        "summary": "Get an application personal file by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application personal file id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationPersonalFileModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationPersonalFileModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationPersonalFiles"
        ],
        "summary": "Delete an application personal file.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application personal file id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/applicationpersonalfiles/{id}/usages": {
      "get": {
        "tags": [
          "ApplicationPersonalFiles"
        ],
        "summary": "Returns the list of applications and executables that have the specified personal file assigned.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application personal file id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationPersonalFileUsageModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationPersonalFileUsageModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/applicationpersonalfiles/{id}/unassign": {
      "put": {
        "tags": [
          "ApplicationPersonalFiles"
        ],
        "summary": "Unassign the specified personal file from every executable.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application personal file id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/applications": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Get all applications.",
        "description": "<b>Returns a list of applications.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "ApplicationTitle",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "Create an application.",
        "requestBody": {
          "description": "Application.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Applications"
        ],
        "summary": "Update an application.",
        "requestBody": {
          "description": "Application.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applications/{id}": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Get an application by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "Applications"
        ],
        "summary": "Delete an application.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "options",
            "in": "query",
            "description": "Application group delete options.",
            "schema": {
              "$ref": "#/components/schemas/ApplicationDeleteOptionsModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationDeleteResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationDeleteResultModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/applications/{id}/image": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Get the image of the specified application.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationModelImage"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationModelImage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Applications"
        ],
        "summary": "Update the image of the specified application.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Application image.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelImage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelImage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelImage"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelImage"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelImage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applications/{id}/duplicate": {
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "Duplicate the specified application.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Application duplicate.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelDuplicate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelDuplicate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelDuplicate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelDuplicate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelDuplicate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationstats": {
      "get": {
        "tags": [
          "ApplicationStats"
        ],
        "summary": "Gets application stats.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "AppId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AppExeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "HostId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStatModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AppStatModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationstats/appexe/{appExeId}": {
      "post": {
        "tags": [
          "ApplicationStats"
        ],
        "summary": "Creates application stat.",
        "parameters": [
          {
            "name": "appExeId",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppStatCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppStatCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppStatCreateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/AppStatCreateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/AppStatCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationtasks": {
      "get": {
        "tags": [
          "ApplicationTasks"
        ],
        "summary": "Get all application executable tasks.",
        "description": "<b>Returns a list of application executable tasks.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "TaskName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTaskModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTaskModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationTasks"
        ],
        "summary": "Create an application executable task.",
        "requestBody": {
          "description": "Application executable task.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTaskModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTaskModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTaskModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTaskModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTaskModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationTasks"
        ],
        "summary": "Update an application executable task.",
        "requestBody": {
          "description": "Application executable task.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTaskModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTaskModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTaskModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTaskModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTaskModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/applicationtasks/{id}": {
      "get": {
        "tags": [
          "ApplicationTasks"
        ],
        "summary": "Get an application executable task by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable task id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTaskModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTaskModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationTasks"
        ],
        "summary": "Delete an application executable tasks.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable task id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/applicationtasks/{id}/usages": {
      "get": {
        "tags": [
          "ApplicationTasks"
        ],
        "summary": "Returns the list of applications and executables that have the specified task assigned.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application task id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationTaskUsageModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationTaskUsageModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/applicationtasks/{id}/unassign": {
      "put": {
        "tags": [
          "ApplicationTasks"
        ],
        "summary": "Unassign the specified task from every executable.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application task id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/assets": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Get all assets.",
        "description": "<b>Returns a list of assets.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AssetTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AssetModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Create an asset.",
        "requestBody": {
          "description": "Asset.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssetModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/AssetModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/AssetModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update an asset.",
        "requestBody": {
          "description": "Asset.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssetModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/AssetModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/AssetModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/assets/{id}": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Get an asset by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Asset id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AssetModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Assets"
        ],
        "summary": "Delete an asset.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Asset id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/assets/rfid/{rfid}/exist": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Checks if entry exists with specified rfid.",
        "parameters": [
          {
            "name": "rfid",
            "in": "path",
            "description": "Entry rfid.",
            "required": true,
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/assettransactions": {
      "get": {
        "tags": [
          "AssetTransactions"
        ],
        "summary": "Get all asset transactions.",
        "description": "<b>Returns a list of asset transactions.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetTransactionModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AssetTransactionModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/assettransactions/{id}": {
      "get": {
        "tags": [
          "AssetTransactions"
        ],
        "summary": "Get a asset transaction by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Asset transaction id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetTransactionModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AssetTransactionModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/assettypes": {
      "get": {
        "tags": [
          "AssetTypes"
        ],
        "summary": "Get all asset types.",
        "description": "<b>Returns a list of asset types.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "AssetTypeName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetTypeModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AssetTypeModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssetTypes"
        ],
        "summary": "Create an asset type.",
        "requestBody": {
          "description": "Asset type.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetTypeModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetTypeModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssetTypeModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/AssetTypeModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/AssetTypeModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AssetTypes"
        ],
        "summary": "Update an asset type.",
        "requestBody": {
          "description": "Asset type.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetTypeModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetTypeModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssetTypeModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/AssetTypeModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/AssetTypeModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/assettypes/{id}": {
      "get": {
        "tags": [
          "AssetTypes"
        ],
        "summary": "Get an asset type by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Asset type id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetTypeModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AssetTypeModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "AssetTypes"
        ],
        "summary": "Delete an asset type.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Asset type id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/user/v3.0/assistancerequests/pending/any": {
      "get": {
        "tags": [
          "AssistanceRequests"
        ],
        "summary": "Gets if any assistance requests are pending for current user.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/v3.0/assistancerequests": {
      "post": {
        "tags": [
          "AssistanceRequests"
        ],
        "summary": "Creates assistance request for current user.",
        "requestBody": {
          "description": "Creation parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestModelUserCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestModelUserCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestModelUserCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestModelUserCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestModelUserCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AssistanceRequests"
        ],
        "summary": "Cancels pending assistance request for current user.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/assistancerequests": {
      "get": {
        "tags": [
          "AssistanceRequests"
        ],
        "summary": "Gets assistance requests.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1,
                2,
                3
              ],
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssistanceRequestModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AssistanceRequestModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssistanceRequests"
        ],
        "summary": "Create assistance request.",
        "requestBody": {
          "description": "Creation parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/assistancerequests/{id}": {
      "get": {
        "tags": [
          "AssistanceRequests"
        ],
        "summary": "Gets assistance request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Assistance request id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssistanceRequestModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AssistanceRequestModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/assistancerequests/{id}/reject": {
      "put": {
        "tags": [
          "AssistanceRequests"
        ],
        "summary": "Rejects assistance request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Request id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/assistancerequests/{id}/accept": {
      "put": {
        "tags": [
          "AssistanceRequests"
        ],
        "summary": "Accepts assistance request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Request id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/assistancerequesttypes": {
      "get": {
        "tags": [
          "AssistanceRequestTypes"
        ],
        "summary": "Assistance request types.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssistanceRequestTypeModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AssistanceRequestTypeModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssistanceRequestTypes"
        ],
        "summary": "Creates assistance request type.",
        "requestBody": {
          "description": "Creation parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestTypeModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestTypeModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestTypeModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestTypeModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestTypeModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AssistanceRequestTypes"
        ],
        "summary": "Updates assistance request type.",
        "requestBody": {
          "description": "Update parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestTypeModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestTypeModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestTypeModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestTypeModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestTypeModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/assistancerequesttypes/{id}": {
      "get": {
        "tags": [
          "AssistanceRequestTypes"
        ],
        "summary": "Gets assistance request type.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Assistance request type id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssistanceRequestTypeModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AssistanceRequestTypeModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AssistanceRequestTypes"
        ],
        "summary": "Soft deletes assistance request type.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Assistance request type id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/assistancerequesttypes/{id}/undelete": {
      "post": {
        "tags": [
          "AssistanceRequestTypes"
        ],
        "summary": "Undeletes assistance request type.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Assistance request type id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/attributes": {
      "get": {
        "tags": [
          "Attributes"
        ],
        "summary": "Get all attributes.",
        "description": "<b>Returns a list of attributes.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "AttributeName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Attributes"
        ],
        "summary": "Create an attribute.",
        "requestBody": {
          "description": "Attribute.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/AttributeModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/AttributeModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Attributes"
        ],
        "summary": "Update an attribute.",
        "requestBody": {
          "description": "Attribute.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/AttributeModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/AttributeModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/attributes/{id}": {
      "get": {
        "tags": [
          "Attributes"
        ],
        "summary": "Get an attribute by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Attribute id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "Attributes"
        ],
        "summary": "Delete an attribute.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Attribute id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/user/v3.0/auth/accesstoken": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Requests user access token.",
        "parameters": [
          {
            "name": "Username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenResultModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/v3.0/auth/accesstoken/refresh": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Refreshes user access token.",
        "parameters": [
          {
            "name": "Token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RefreshToken",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenResultModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/auth/accesstoken": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Requests operator access token.",
        "parameters": [
          {
            "name": "Username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RegisterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenResultModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/auth/accesstoken/refresh": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Refreshes operator access token.",
        "parameters": [
          {
            "name": "Token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RefreshToken",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RegisterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenResultModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/billingprofiles": {
      "get": {
        "tags": [
          "BillingProfiles"
        ],
        "summary": "Get all billing profiles.",
        "description": "<b>Returns a list of billing profiles.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "BillingProfileName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BillingProfiles"
        ],
        "summary": "Create a billing profile.",
        "requestBody": {
          "description": "Billing profile.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BillingProfiles"
        ],
        "summary": "Update a billing profile.",
        "requestBody": {
          "description": "Billing profile.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/billingprofiles/{id}": {
      "get": {
        "tags": [
          "BillingProfiles"
        ],
        "summary": "Get a billing profile by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Billing profile id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "BillingProfiles"
        ],
        "summary": "Delete a billing profile.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Billing profile id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/billingprofiles/{id}/rates": {
      "get": {
        "tags": [
          "BillingProfiles"
        ],
        "summary": "Get the rates of the specified billing profile.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Billing profile id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BillingProfileRateModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BillingProfileRateModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "post": {
        "tags": [
          "BillingProfiles"
        ],
        "summary": "Create a billing profile rate.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Billing profile id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Billing profile rate.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileRateModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileRateModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileRateModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileRateModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileRateModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/billingprofiles/rates": {
      "put": {
        "tags": [
          "BillingProfiles"
        ],
        "summary": "Update a billing profile rate.",
        "requestBody": {
          "description": "Billing profile rate.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileRateModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileRateModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileRateModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileRateModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileRateModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/billingprofiles/{id}/rates/{billingProfileRateId}": {
      "delete": {
        "tags": [
          "BillingProfiles"
        ],
        "summary": "Delete a billing profile rate.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Billing profile id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "billingProfileRateId",
            "in": "path",
            "description": "Billing profile rate id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/branches": {
      "get": {
        "tags": [
          "Branches"
        ],
        "summary": "Gets branches.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/BranchModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Branches"
        ],
        "summary": "Creates branch.",
        "requestBody": {
          "description": "Branch model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BranchModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/BranchModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/BranchModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Branches"
        ],
        "summary": "Updates branch.",
        "requestBody": {
          "description": "Branch.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BranchModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/BranchModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/BranchModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/branches/{id}": {
      "get": {
        "tags": [
          "Branches"
        ],
        "summary": "Gets branch.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Branch id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/BranchModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Branches"
        ],
        "summary": "Deletes branch.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Branch id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/branches/{id}/undelete": {
      "put": {
        "tags": [
          "Branches"
        ],
        "summary": "Deletes branch.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Branch id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/branches/name/{name}/exist": {
      "get": {
        "tags": [
          "Branches"
        ],
        "summary": "Checks if entry exists with specified name.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Entry name.",
            "required": true,
            "schema": {
              "maxLength": 45,
              "minLength": 0,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/branches/{branchId}/timezone": {
      "get": {
        "tags": [
          "Branches"
        ],
        "summary": "Gets branch time zone.",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "Branch id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeZoneInfoModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/TimeZoneInfoModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/branches/{id}/enable": {
      "put": {
        "tags": [
          "Branches"
        ],
        "summary": "Enables entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/branches/{id}/disable": {
      "put": {
        "tags": [
          "Branches"
        ],
        "summary": "Disables entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/branches/{id}/counters": {
      "get": {
        "tags": [
          "Branches"
        ],
        "summary": "Gets entry counters.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchCountersModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/BranchCountersModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/clientoptions": {
      "get": {
        "tags": [
          "ClientOptions"
        ],
        "summary": "Get all client options.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientOptionModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ClientOptionModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ClientOptions"
        ],
        "summary": "Create a client option.",
        "requestBody": {
          "description": "Client option.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientOptionModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientOptionModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClientOptionModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ClientOptionModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ClientOptionModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ClientOptions"
        ],
        "summary": "Update a client option.",
        "requestBody": {
          "description": "Client option.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientOptionModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientOptionModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClientOptionModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ClientOptionModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ClientOptionModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/clientoptions/{id}": {
      "get": {
        "tags": [
          "ClientOptions"
        ],
        "summary": "Get a client option by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client option id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientOptionModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ClientOptionModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "ClientOptions"
        ],
        "summary": "Delete a client option.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client option id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/clientoptions/{id}/setasdefault": {
      "put": {
        "tags": [
          "ClientOptions"
        ],
        "summary": "Set client option as default.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/clientoptions/{id}/image/{skinImageType}": {
      "get": {
        "tags": [
          "ClientOptions"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "skinImageType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientOptionSkinImageModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ClientOptionSkinImageModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/clientoptions/{id}/image": {
      "put": {
        "tags": [
          "ClientOptions"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientOptionSkinImageModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientOptionSkinImageModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClientOptionSkinImageModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ClientOptionSkinImageModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ClientOptionSkinImageModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/clienttasks": {
      "get": {
        "tags": [
          "ClientTasks"
        ],
        "summary": "Gets filtered entries.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Activation",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsEnabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientTaskModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ClientTaskModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ClientTasks"
        ],
        "summary": "Creates new entry.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientTaskCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientTaskCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClientTaskCreateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ClientTaskCreateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ClientTaskCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ClientTasks"
        ],
        "summary": "Updates entry.",
        "requestBody": {
          "description": "Update model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientTaskUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientTaskUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClientTaskUpdateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ClientTaskUpdateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ClientTaskUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/clienttasks/{id}": {
      "get": {
        "tags": [
          "ClientTasks"
        ],
        "summary": "Gets entry by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientTaskModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ClientTaskModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ClientTasks"
        ],
        "summary": "Deletes entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/clienttasks/{id}/enable": {
      "put": {
        "tags": [
          "ClientTasks"
        ],
        "summary": "Enables entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/clienttasks/{id}/disable": {
      "put": {
        "tags": [
          "ClientTasks"
        ],
        "summary": "Disables entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/companions": {
      "get": {
        "tags": [
          "Companions"
        ],
        "summary": "Gets filtered entries.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "RegisterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanionModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CompanionModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Companions"
        ],
        "summary": "Creates entry.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanionModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanionModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanionModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/CompanionModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/CompanionModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Companions"
        ],
        "summary": "Updates entry.",
        "requestBody": {
          "description": "Update model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanionModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanionModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanionModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/CompanionModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/CompanionModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/companions/{id}": {
      "get": {
        "tags": [
          "Companions"
        ],
        "summary": "Gets entry by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanionModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CompanionModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Companions"
        ],
        "summary": "Deletes entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/companions/connections": {
      "get": {
        "tags": [
          "Companions"
        ],
        "summary": "Gets active companion connections.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanionConnectionInfoModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanionConnectionInfoModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/companions/{guid}/cashdrawer/open": {
      "post": {
        "tags": [
          "Companions"
        ],
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/deposittransactions": {
      "get": {
        "tags": [
          "DepositTransactions"
        ],
        "summary": "Get all deposit transactions.",
        "description": "<b>Returns a list of deposit transactions.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1,
                2,
                3
              ],
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepositTransactionModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DepositTransactionModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DepositTransactions"
        ],
        "summary": "Create a deposit transaction.",
        "requestBody": {
          "description": "Deposit transaction.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepositTransactionModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DepositTransactionModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DepositTransactionModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/DepositTransactionModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/DepositTransactionModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/deposittransactions/{id}": {
      "get": {
        "tags": [
          "DepositTransactions"
        ],
        "summary": "Get a deposit transaction by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Deposit transaction id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepositTransactionModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DepositTransactionModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/deposittransactions/{id}/void": {
      "put": {
        "tags": [
          "DepositTransactions"
        ],
        "summary": "Void the specified deposit payment.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Deposit payment id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Refund options.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepositRefundOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DepositRefundOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DepositRefundOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/DepositRefundOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/DepositRefundOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/devices": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Get all devices.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "DeviceType",
            "in": "query",
            "schema": {
              "enum": [
                0
              ],
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Create an device.",
        "requestBody": {
          "description": "Device.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Devices"
        ],
        "summary": "Updates an device.",
        "requestBody": {
          "description": "Device.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/devices/{id}": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Get a device by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Device id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "Devices"
        ],
        "summary": "Deletes specified device.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Device id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/devices/{id}/enable": {
      "put": {
        "tags": [
          "Devices"
        ],
        "summary": "Enables specified device.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Device id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/devices/{id}/disable": {
      "put": {
        "tags": [
          "Devices"
        ],
        "summary": "Disables specified device.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Device id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/devices/hosts": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Gets devices and host associations.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "HostId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DeviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceHostModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceHostModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/devices/{deviceId}/host/{hostId}": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Assigns device specified by deviceId to the host specified by hostId.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "Device id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "hostId",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Devices"
        ],
        "summary": "Unassigns device specified by deviceId to the host specified by hostId.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "Device id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "hostId",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/discountgroups": {
      "get": {
        "tags": [
          "DiscountGroups"
        ],
        "summary": "Gets filtered results.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountGroupModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountGroupModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DiscountGroups"
        ],
        "summary": "Creates entry.",
        "requestBody": {
          "description": "Model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountGroupModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountGroupModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountGroupModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/DiscountGroupModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/DiscountGroupModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DiscountGroups"
        ],
        "summary": "Updates entry.",
        "requestBody": {
          "description": "Model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountGroupModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountGroupModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountGroupModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/DiscountGroupModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/DiscountGroupModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/discountgroups/{id}": {
      "get": {
        "tags": [
          "DiscountGroups"
        ],
        "summary": "Gets entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountGroupModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountGroupModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DiscountGroups"
        ],
        "summary": "Deletes entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/discounts": {
      "get": {
        "tags": [
          "Discounts"
        ],
        "summary": "Gets filtered entries.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IsDisabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "RewardType",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1
              ],
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Discounts"
        ],
        "summary": "Creates entry.",
        "requestBody": {
          "description": "Model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/DiscountModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/DiscountModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Discounts"
        ],
        "summary": "Updates entry.",
        "requestBody": {
          "description": "Model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/DiscountModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/DiscountModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/discounts/{id}": {
      "get": {
        "tags": [
          "Discounts"
        ],
        "summary": "Gets entry by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Discounts"
        ],
        "summary": "Soft deletes discount.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Discount id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/discounts/{id}/name": {
      "put": {
        "tags": [
          "Discounts"
        ],
        "summary": "Sets entry name.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Entry name.",
          "content": {
            "application/json": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            },
            "application/octet-stream": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/discounts/name/{name}/exist": {
      "get": {
        "tags": [
          "Discounts"
        ],
        "summary": "Checks if entry exists with specified name.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Entry name.",
            "required": true,
            "schema": {
              "maxLength": 45,
              "minLength": 0,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/discounts/{id}/description": {
      "put": {
        "tags": [
          "Discounts"
        ],
        "summary": "Sets entry description.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Entry description.",
          "content": {
            "application/json": {
              "schema": {
                "maxLength": 255,
                "minLength": 0,
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "maxLength": 255,
                "minLength": 0,
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "maxLength": 255,
                "minLength": 0,
                "type": "string"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "maxLength": 255,
                "minLength": 0,
                "type": "string"
              }
            },
            "application/octet-stream": {
              "schema": {
                "maxLength": 255,
                "minLength": 0,
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/discounts/{id}/branches": {
      "get": {
        "tags": [
          "Discounts"
        ],
        "summary": "Gets branch configuration entries.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Discount id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BranchReferenceModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BranchReferenceModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Discounts"
        ],
        "summary": "Sets branch configuration entries.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Discount id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Branch configuration entries.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BranchReferenceModelUpdate"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BranchReferenceModelUpdate"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BranchReferenceModelUpdate"
                }
              }
            },
            "application/x-msgpack": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BranchReferenceModelUpdate"
                }
              }
            },
            "application/octet-stream": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BranchReferenceModelUpdate"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/discounts/{id}/undelete": {
      "put": {
        "tags": [
          "Discounts"
        ],
        "summary": "Undeletes discount.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Discount id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/discounts/{id}/enable": {
      "put": {
        "tags": [
          "Discounts"
        ],
        "summary": "Enables discount.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Discount id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/discounts/{id}/disable": {
      "put": {
        "tags": [
          "Discounts"
        ],
        "summary": "Disables discount.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Discount id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/documents": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Gets filtered entries.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "DocumentTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Documents"
        ],
        "parameters": [
          {
            "name": "DocumentTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FileName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileCreateResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/FileCreateResultModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Documents"
        ],
        "summary": "Updates entry.",
        "requestBody": {
          "description": "Update model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentUpdateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/DocumentUpdateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/DocumentUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/documents/{id}": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Gets entry by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Documents"
        ],
        "summary": "Deletes entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/documents/{id}/undelete": {
      "put": {
        "tags": [
          "Documents"
        ],
        "summary": "Undeletes entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/documents/file/{fileName}/exists": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Checks if document with specified file name exists.",
        "parameters": [
          {
            "name": "fileName",
            "in": "path",
            "description": "File name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/documents/{id}/description": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Gets description.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Documents"
        ],
        "summary": "Sets description.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Description.",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "type": "string"
              }
            },
            "application/octet-stream": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/documenttypes": {
      "get": {
        "tags": [
          "DocumentTypes"
        ],
        "summary": "Gets filtered entries.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentTypeModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentTypeModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DocumentTypes"
        ],
        "summary": "Creates entry.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentTypeCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentTypeCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentTypeCreateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/DocumentTypeCreateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/DocumentTypeCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DocumentTypes"
        ],
        "summary": "Updates entry.",
        "requestBody": {
          "description": "Update model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentTypeUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentTypeUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentTypeUpdateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/DocumentTypeUpdateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/DocumentTypeUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/documenttypes/{id}": {
      "get": {
        "tags": [
          "DocumentTypes"
        ],
        "summary": "Gets entry by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentTypeModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentTypeModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DocumentTypes"
        ],
        "summary": "Deletes entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/documenttypes/{id}/undelete": {
      "put": {
        "tags": [
          "DocumentTypes"
        ],
        "summary": "Undeletes entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/events/channel/{uniqueChannelName}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Gets or creates event channel and returns next read event.",
        "parameters": [
          {
            "name": "uniqueChannelName",
            "in": "path",
            "description": "Unique channel name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Optional event id filter.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Events"
        ],
        "summary": "Releases existing event message channel.",
        "parameters": [
          {
            "name": "uniqueChannelName",
            "in": "path",
            "description": "Unique channel name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/events/entity": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Gets or creates entity event channel and returns next read event.",
        "parameters": [
          {
            "name": "connectionId",
            "in": "query",
            "description": "Unique connection id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "List of filtered entity types.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Events"
        ],
        "summary": "Releases existing entity message channel.",
        "parameters": [
          {
            "name": "connectionId",
            "in": "query",
            "description": "Unique connection id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/events/metadata": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Gets event messages metdata.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventGroupMetadata"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventGroupMetadata"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/feeds": {
      "get": {
        "tags": [
          "Feeds"
        ],
        "summary": "Get all feeds.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/FeedModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Feeds"
        ],
        "summary": "Create feed.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FeedCreateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/FeedCreateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/FeedCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Feeds"
        ],
        "summary": "Update feed.",
        "requestBody": {
          "description": "Update model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FeedUpdateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/FeedUpdateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/FeedUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/feeds/{id}": {
      "get": {
        "tags": [
          "Feeds"
        ],
        "summary": "Get feed by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Feed id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/FeedModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Feeds"
        ],
        "summary": "Delete feed.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/feeds/{id}/branches": {
      "get": {
        "tags": [
          "Feeds"
        ],
        "summary": "Gets branch configuration entries.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Feed id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BranchReferenceModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BranchReferenceModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Feeds"
        ],
        "summary": "Sets branch configuration entries.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Feed id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Branch configuration entries.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BranchReferenceModelUpdate"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BranchReferenceModelUpdate"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BranchReferenceModelUpdate"
                }
              }
            },
            "application/x-msgpack": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BranchReferenceModelUpdate"
                }
              }
            },
            "application/octet-stream": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BranchReferenceModelUpdate"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/files/{id}": {
      "delete": {
        "tags": [
          "Files"
        ],
        "summary": "Soft deletes a file.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/files/{id}/hard": {
      "delete": {
        "tags": [
          "Files"
        ],
        "summary": "Hard deletes a file.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/files/deleted/size": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "Gets soft deleted files total size.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/files/deleted/count": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "Gets soft deleted files count.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/files": {
      "delete": {
        "tags": [
          "Files"
        ],
        "summary": "Purges soft deleted files.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hostcomputers/{hostId}/screen": {
      "get": {
        "tags": [
          "HostComputers"
        ],
        "summary": "Captures system screen.",
        "parameters": [
          {
            "name": "hostId",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Width",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Height",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ImageQuality",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScreenCaptureModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ScreenCaptureModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hostcomputers/{hostId}/screen/last": {
      "get": {
        "tags": [
          "HostComputers"
        ],
        "summary": "Obtain last system screen captured.",
        "parameters": [
          {
            "name": "hostId",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScreenCaptureModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ScreenCaptureModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hostcomputers/{hostId}/reboot": {
      "post": {
        "tags": [
          "HostComputers"
        ],
        "summary": "Reboots host system.",
        "parameters": [
          {
            "name": "hostId",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hostcomputers/{hostId}/shutdown": {
      "post": {
        "tags": [
          "HostComputers"
        ],
        "summary": "Shuts down host system.",
        "parameters": [
          {
            "name": "hostId",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hostcomputers/{hostId}/input/lock/{value}": {
      "post": {
        "tags": [
          "HostComputers"
        ],
        "summary": "Locks/Unlocks system input.",
        "parameters": [
          {
            "name": "hostId",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "value",
            "in": "path",
            "description": "State.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hostcomputers/{hostId}/input/lock": {
      "get": {
        "tags": [
          "HostComputers"
        ],
        "summary": "Gets input lock state.",
        "parameters": [
          {
            "name": "hostId",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hostcomputers/{hostId}/maintenance/{value}": {
      "post": {
        "tags": [
          "HostComputers"
        ],
        "summary": "Enables/Disables maintenance mode.",
        "parameters": [
          {
            "name": "hostId",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "value",
            "in": "path",
            "description": "State.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hostcomputers/{hostId}/maintenance": {
      "get": {
        "tags": [
          "HostComputers"
        ],
        "summary": "Gets maintenance mode state.",
        "parameters": [
          {
            "name": "hostId",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hostcomputers/{hostId}/security/{value}": {
      "post": {
        "tags": [
          "HostComputers"
        ],
        "summary": "Enables/Disables client security.",
        "parameters": [
          {
            "name": "hostId",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "value",
            "in": "path",
            "description": "State.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hostcomputers/{hostId}/security": {
      "get": {
        "tags": [
          "HostComputers"
        ],
        "summary": "Gets security state.",
        "parameters": [
          {
            "name": "hostId",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hostcomputers/{hostId}/outoforder/{value}": {
      "post": {
        "tags": [
          "HostComputers"
        ],
        "summary": "Enables/Disables out of order state.",
        "parameters": [
          {
            "name": "hostId",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "value",
            "in": "path",
            "description": "State.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hostcomputers/{hostId}/outoforder": {
      "post": {
        "tags": [
          "HostComputers"
        ],
        "summary": "Gets out of order state.",
        "parameters": [
          {
            "name": "hostId",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hostcomputers/{hostId}/client/restart": {
      "post": {
        "tags": [
          "HostComputers"
        ],
        "summary": "Restarts client module.",
        "parameters": [
          {
            "name": "hostId",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hostcomputers/client/connections": {
      "get": {
        "tags": [
          "HostComputers"
        ],
        "summary": "Gets client connections.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "HostId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostComputerConnectionStateModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/HostComputerConnectionStateModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hostcomputers/{hostId}/client/connection": {
      "get": {
        "tags": [
          "HostComputers"
        ],
        "summary": "Gets client connection.",
        "parameters": [
          {
            "name": "hostId",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostComputerConnectionStateModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/HostComputerConnectionStateModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hostgroups": {
      "get": {
        "tags": [
          "HostGroups"
        ],
        "summary": "Get all host groups.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "GroupName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostGroupModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/HostGroupModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "HostGroups"
        ],
        "summary": "Create a host group.",
        "requestBody": {
          "description": "Host group.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostGroupModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HostGroupModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HostGroupModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/HostGroupModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/HostGroupModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "HostGroups"
        ],
        "summary": "Update a host group.",
        "requestBody": {
          "description": "Host group.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostGroupModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HostGroupModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HostGroupModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/HostGroupModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/HostGroupModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hostgroups/{id}": {
      "get": {
        "tags": [
          "HostGroups"
        ],
        "summary": "Get a host group by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostGroupModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/HostGroupModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "HostGroups"
        ],
        "summary": "Delete a host group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MoveToHostGroupId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostGroupDeleteResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/HostGroupDeleteResultModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hostgroups/{id}/billingprofile/{billingProfileId}": {
      "put": {
        "tags": [
          "HostGroups"
        ],
        "summary": "Assign the specified billing profile to the specified host group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "billingProfileId",
            "in": "path",
            "description": "The billing profile id to assign to the specified host group.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hostgroups/{id}/billingprofile": {
      "delete": {
        "tags": [
          "HostGroups"
        ],
        "summary": "Remove the billing profile from the specified host group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hosticons": {
      "get": {
        "tags": [
          "HostIcons"
        ],
        "summary": "Get all host icons.",
        "description": "<b>Returns a list of host icons.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostIconModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/HostIconModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "HostIcons"
        ],
        "summary": "Create a host icon.",
        "requestBody": {
          "description": "Host icon.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostIconModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HostIconModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HostIconModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/HostIconModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/HostIconModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "HostIcons"
        ],
        "summary": "Update a host icon.",
        "requestBody": {
          "description": "Host icon.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostIconModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HostIconModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HostIconModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/HostIconModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/HostIconModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hosticons/{id}": {
      "get": {
        "tags": [
          "HostIcons"
        ],
        "summary": "Get a host icon by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "HostIcon id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostIconModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/HostIconModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "HostIcons"
        ],
        "summary": "Delete a host icon.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host icon id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/hostlayoutgroups": {
      "get": {
        "tags": [
          "HostLayoutGroups"
        ],
        "summary": "Get all host layout groups.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "LayoutGroupName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostLayoutGroupModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/HostLayoutGroupModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "HostLayoutGroups"
        ],
        "summary": "Create a host layout group.",
        "requestBody": {
          "description": "Host layout group.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutGroupModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutGroupModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutGroupModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutGroupModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutGroupModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "HostLayoutGroups"
        ],
        "summary": "Update a host layout group.",
        "requestBody": {
          "description": "Host layout group.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutGroupModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutGroupModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutGroupModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutGroupModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutGroupModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hostlayoutgroups/{id}": {
      "get": {
        "tags": [
          "HostLayoutGroups"
        ],
        "summary": "Get a host layout group by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host layout group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostLayoutGroupModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/HostLayoutGroupModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "HostLayoutGroups"
        ],
        "summary": "Delete a host layout group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host layout group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hostlayoutgroups/{id}/layouts": {
      "get": {
        "tags": [
          "HostLayoutGroups"
        ],
        "summary": "Gets layouts in layout group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host layout group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HostLayoutModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HostLayoutModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hostlayoutgroups/{id}/host/{hostId}/layout": {
      "get": {
        "tags": [
          "HostLayoutGroups"
        ],
        "summary": "Gets host layout in layout group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host layout group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "hostId",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostLayoutModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/HostLayoutModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "HostLayoutGroups"
        ],
        "summary": "Sets host layout parameters in layout group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host layout group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "hostId",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutCreateUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutCreateUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutCreateUpdateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutCreateUpdateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutCreateUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "HostLayoutGroups"
        ],
        "summary": "Deletes host layout form layout group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host layout group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "hostId",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hostlayoutgroups/{id}/host/{hostId}/layout/grid/position": {
      "post": {
        "tags": [
          "HostLayoutGroups"
        ],
        "summary": "Sets host layout grid position in layout group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host layout group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "hostId",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutGridPositionCreateUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutGridPositionCreateUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutGridPositionCreateUpdateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutGridPositionCreateUpdateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutGridPositionCreateUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hostlayoutgroups/{id}/host/{hostId}/layout/hide/{hide}": {
      "post": {
        "tags": [
          "HostLayoutGroups"
        ],
        "summary": "Hides host in layout group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host layout group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "hostId",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "hide",
            "in": "path",
            "description": "Hide option.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hostlayoutgroups/{id}/host/layout/grid/position": {
      "put": {
        "tags": [
          "HostLayoutGroups"
        ],
        "summary": "Sets hosts layout grid position in layout group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host layout group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostsLayoutGridPositionModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HostsLayoutGridPositionModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HostsLayoutGridPositionModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/HostsLayoutGridPositionModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/HostsLayoutGridPositionModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hosts": {
      "get": {
        "tags": [
          "Hosts"
        ],
        "summary": "Get all hosts.",
        "description": "<b>Returns a list of hosts.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "HostName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "HostType",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1
              ],
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/HostModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Hosts"
        ],
        "summary": "Create a host.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HostModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HostModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/HostModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/HostModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Hosts"
        ],
        "summary": "Update a host.",
        "requestBody": {
          "description": "Update model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HostModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HostModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/HostModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/HostModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hosts/{id}": {
      "get": {
        "tags": [
          "Hosts"
        ],
        "summary": "Get a host by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/HostModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Hosts"
        ],
        "summary": "Delete a host.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "options",
            "in": "query",
            "description": "Host delete options.",
            "schema": {
              "$ref": "#/components/schemas/HostDeleteOptionsModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostDeleteResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/HostDeleteResultModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Hosts"
        ],
        "summary": "Undeletes a host.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hosts/{id}/devices/assignments": {
      "get": {
        "tags": [
          "Hosts"
        ],
        "summary": "Gets host devices assignments.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "DeviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceHostModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceHostModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hosts/{id}/devices": {
      "get": {
        "tags": [
          "Hosts"
        ],
        "summary": "Gets host devices.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "DeviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hosts/{id}/devices/{deviceId}": {
      "post": {
        "tags": [
          "Hosts"
        ],
        "summary": "Adds an device to host.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "Device id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Hosts"
        ],
        "summary": "Removes device from host.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "Device id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hosts/{id}/lock/{value}": {
      "post": {
        "tags": [
          "Hosts"
        ],
        "summary": "Sets lock state.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "value",
            "in": "path",
            "description": "State.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hosts/{id}/outoforder/{value}": {
      "post": {
        "tags": [
          "Hosts"
        ],
        "summary": "Sets out of order state.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "value",
            "in": "path",
            "description": "State.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hosts/{id}/on": {
      "post": {
        "tags": [
          "Hosts"
        ],
        "summary": "Turns on host.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hosts/{id}/off": {
      "post": {
        "tags": [
          "Hosts"
        ],
        "summary": "Turns off host.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/hosts/{id}/layoutgroups": {
      "get": {
        "tags": [
          "Hosts"
        ],
        "summary": "Get host layout groups.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HostHostLayoutGroupModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HostHostLayoutGroupModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/instance/authentication": {
      "get": {
        "tags": [
          "Instance"
        ],
        "summary": "Get authentication state.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationStateModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationStateModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Instance"
        ],
        "summary": "Authenticates instance.",
        "requestBody": {
          "description": "Authentication parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationParametersModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationParametersModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationParametersModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationParametersModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationParametersModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResultModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/instance/authorization": {
      "post": {
        "tags": [
          "Instance"
        ],
        "summary": "Authorizes instance.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationResultModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Instance"
        ],
        "summary": "Gets authorization state.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/instance/id": {
      "get": {
        "tags": [
          "Instance"
        ],
        "summary": "Gets instance id.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceIdModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceIdModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/inventories": {
      "get": {
        "tags": [
          "Inventories"
        ],
        "summary": "Gets filtered entries.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1,
                2
              ],
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StockId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/inventories/{id}/entries": {
      "get": {
        "tags": [
          "Inventories"
        ],
        "summary": "Gets filtered entries.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryEntryModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryEntryModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/inventories/inbound": {
      "post": {
        "tags": [
          "Inventories"
        ],
        "summary": "Creates a new inventory.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryInboundModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryInboundModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryInboundModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/InventoryInboundModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/InventoryInboundModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/inventories/adjustment": {
      "post": {
        "tags": [
          "Inventories"
        ],
        "summary": "Creates a new inventory.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryAdjustmentModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryAdjustmentModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryAdjustmentModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/InventoryAdjustmentModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/InventoryAdjustmentModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/inventories/transfer": {
      "post": {
        "tags": [
          "Inventories"
        ],
        "summary": "Creates a new inventory.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryTransferModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryTransferModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryTransferModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/InventoryTransferModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/InventoryTransferModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/inventories/transfer/{id}/inbound": {
      "post": {
        "tags": [
          "Inventories"
        ],
        "summary": "Creates a new inventory.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Transfer inventory id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryTransferInboundModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryTransferInboundModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryTransferInboundModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/InventoryTransferInboundModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/InventoryTransferInboundModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/inventoryadjustmentreasons": {
      "get": {
        "tags": [
          "InventoryAdjustmentReasons"
        ],
        "summary": "Gets filtered entries.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAdjustmentReasonModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAdjustmentReasonModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "InventoryAdjustmentReasons"
        ],
        "summary": "Creates entry.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryAdjustmentReasonModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryAdjustmentReasonModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryAdjustmentReasonModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/InventoryAdjustmentReasonModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/InventoryAdjustmentReasonModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "InventoryAdjustmentReasons"
        ],
        "summary": "Updates entry.",
        "requestBody": {
          "description": "Update model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryAdjustmentReasonModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryAdjustmentReasonModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryAdjustmentReasonModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/InventoryAdjustmentReasonModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/InventoryAdjustmentReasonModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/inventoryadjustmentreasons/{id}": {
      "get": {
        "tags": [
          "InventoryAdjustmentReasons"
        ],
        "summary": "Gets entry by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAdjustmentReasonModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAdjustmentReasonModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InventoryAdjustmentReasons"
        ],
        "summary": "Deletes entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/inventoryadjustmentreasons/{id}/undelete": {
      "put": {
        "tags": [
          "InventoryAdjustmentReasons"
        ],
        "summary": "Undeletes entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/inventoryadjustmentreasons/name/{name}/exists": {
      "get": {
        "tags": [
          "InventoryAdjustmentReasons"
        ],
        "summary": "Checks if entry with specified name exists.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/invoicepayments": {
      "get": {
        "tags": [
          "InvoicePayments"
        ],
        "summary": "Get all invoice payments.",
        "description": "<b>Returns a list of invoice payments.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "InvoiceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicePaymentModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicePaymentModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "InvoicePayments"
        ],
        "summary": "Create an invoice payment.",
        "requestBody": {
          "description": "Invoice payment.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoicePaymentModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoicePaymentModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoicePaymentModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/InvoicePaymentModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/InvoicePaymentModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/invoicepayments/{id}": {
      "get": {
        "tags": [
          "InvoicePayments"
        ],
        "summary": "Get an invoice payment by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice payment id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicePaymentModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicePaymentModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/invoices": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get all invoices.",
        "description": "<b>Returns a list of invoices.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IsVoided",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1,
                2
              ],
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/invoices/{id}": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get an invoice by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/invoices/{id}/void": {
      "put": {
        "tags": [
          "Invoices"
        ],
        "summary": "Void the specified invoice.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Refund options.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RefundOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/RefundOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/RefundOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/invoices/lines/{invoiceLineId}/quantity": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Gets invoice line quantity.",
        "parameters": [
          {
            "name": "invoiceLineId",
            "in": "path",
            "description": "Invoice line id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/invoices/user/{userId}/usagesession/active/invoice": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "Invoices active usage session.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageSessionActiveInvoiceResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UsageSessionActiveInvoiceResultModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/invoices/user/{userId}/balance/close": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "Closes user balance.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseBalanceModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseBalanceModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CloseBalanceModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/CloseBalanceModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/CloseBalanceModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/logs": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "Gets log entries.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "DateCompareOption",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1,
                2,
                4,
                8
              ],
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "MessageType",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1,
                2,
                4,
                8
              ],
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ModuleType",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1,
                2,
                4,
                8
              ],
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MessageCompareOption",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1,
                2,
                4,
                8,
                16,
                32
              ],
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Message",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/LogModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/logs/{id}": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "Gets log entry by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/LogModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/logs/{id}/exception": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "Gets log exception.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Log id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogExceptionModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/LogExceptionModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/logs/clear": {
      "post": {
        "tags": [
          "Logs"
        ],
        "summary": "Clears log.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/mappings": {
      "get": {
        "tags": [
          "Mappings"
        ],
        "summary": "Gets filtered entries.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1,
                2
              ],
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MappingModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/MappingModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/mappings/{id}": {
      "get": {
        "tags": [
          "Mappings"
        ],
        "summary": "Gets entry by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MappingModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/MappingModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Mappings"
        ],
        "summary": "Deletes entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/mappings/virtualdrive": {
      "post": {
        "tags": [
          "Mappings"
        ],
        "summary": "Creates entry.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualDriveMappingCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualDriveMappingCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualDriveMappingCreateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/VirtualDriveMappingCreateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/VirtualDriveMappingCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Mappings"
        ],
        "summary": "Updates entry.",
        "requestBody": {
          "description": "Update model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualDriveMappingUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualDriveMappingUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualDriveMappingUpdateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/VirtualDriveMappingUpdateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/VirtualDriveMappingUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/mappings/virtualfolder": {
      "post": {
        "tags": [
          "Mappings"
        ],
        "summary": "Creates entry.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualFolderMappingCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualFolderMappingCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualFolderMappingCreateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/VirtualFolderMappingCreateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/VirtualFolderMappingCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Mappings"
        ],
        "summary": "Updates entry.",
        "requestBody": {
          "description": "Update model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualFolderMappingUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualFolderMappingUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualFolderMappingUpdateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/VirtualFolderMappingUpdateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/VirtualFolderMappingUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/mappings/networkdrive": {
      "post": {
        "tags": [
          "Mappings"
        ],
        "summary": "Creates entry.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkDriveMappingCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkDriveMappingCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkDriveMappingCreateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/NetworkDriveMappingCreateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/NetworkDriveMappingCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Mappings"
        ],
        "summary": "Updates entry.",
        "requestBody": {
          "description": "Update model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkDriveMappingUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkDriveMappingUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkDriveMappingUpdateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/NetworkDriveMappingUpdateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/NetworkDriveMappingUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/mappings/mountpoint/{mountPoint}/exist": {
      "get": {
        "tags": [
          "Mappings"
        ],
        "summary": "Checks if entry exists with specified mount point.",
        "parameters": [
          {
            "name": "mountPoint",
            "in": "path",
            "description": "Mount point.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/monetaryunits": {
      "get": {
        "tags": [
          "MonetaryUnits"
        ],
        "summary": "Get all monetary units.",
        "description": "<b>Returns a list of monetary units.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonetaryUnitModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/MonetaryUnitModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MonetaryUnits"
        ],
        "summary": "Create a monetary unit.",
        "requestBody": {
          "description": "Monetary unit.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MonetaryUnitModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MonetaryUnitModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MonetaryUnitModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/MonetaryUnitModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/MonetaryUnitModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MonetaryUnits"
        ],
        "summary": "Update a monetary unit.",
        "requestBody": {
          "description": "Monetary unit.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MonetaryUnitModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MonetaryUnitModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MonetaryUnitModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/MonetaryUnitModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/MonetaryUnitModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/monetaryunits/{id}": {
      "get": {
        "tags": [
          "MonetaryUnits"
        ],
        "summary": "Get a monetary unit by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Monetary unit id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonetaryUnitModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/MonetaryUnitModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "MonetaryUnits"
        ],
        "summary": "Delete a monetary unit.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Monetary unit id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/news": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get all news.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/NewsModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "News"
        ],
        "summary": "Create news.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewsCreateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/NewsCreateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/NewsCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "News"
        ],
        "summary": "Update news.",
        "requestBody": {
          "description": "Update model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewsUpdateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/NewsUpdateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/NewsUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/news/{id}": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get news by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "News id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/NewsModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "News"
        ],
        "summary": "Delete news.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/news/{id}/branches": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Gets branch configuration entries.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "News id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BranchReferenceModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BranchReferenceModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "News"
        ],
        "summary": "Sets branch configuration entries.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "News id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Branch configuration entries.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BranchReferenceModelUpdate"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BranchReferenceModelUpdate"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BranchReferenceModelUpdate"
                }
              }
            },
            "application/x-msgpack": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BranchReferenceModelUpdate"
                }
              }
            },
            "application/octet-stream": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BranchReferenceModelUpdate"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/notifications": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Gets filtered entries.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1
              ],
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsDisabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/notifications/{id}": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Gets entry by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Notifications"
        ],
        "summary": "Deletes entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/notifications/timed/remaining": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Creates entry.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTimedRemainingModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTimedRemainingModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTimedRemainingModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTimedRemainingModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTimedRemainingModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Notifications"
        ],
        "summary": "Updates entry.",
        "requestBody": {
          "description": "Update model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTimedRemainingModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTimedRemainingModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTimedRemainingModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTimedRemainingModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTimedRemainingModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/notifications/timed/reservation": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Creates entry.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTimedReservationModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTimedReservationModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTimedReservationModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTimedReservationModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTimedReservationModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Notifications"
        ],
        "summary": "Updates entry.",
        "requestBody": {
          "description": "Update model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTimedReservationModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTimedReservationModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTimedReservationModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTimedReservationModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTimedReservationModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/notifications/{id}/enable": {
      "put": {
        "tags": [
          "Notifications"
        ],
        "summary": "Enables entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/notifications/{id}/disable": {
      "put": {
        "tags": [
          "Notifications"
        ],
        "summary": "Disables entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/operators": {
      "get": {
        "tags": [
          "Operators"
        ],
        "summary": "Get all operators.",
        "description": "<b>Returns a list of operators.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Username",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsDisabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperatorModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/OperatorModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Operators"
        ],
        "summary": "Create an operator.",
        "requestBody": {
          "description": "Operator.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OperatorModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OperatorModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OperatorModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/OperatorModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/OperatorModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Operators"
        ],
        "summary": "Update an operator.",
        "requestBody": {
          "description": "Operator.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OperatorModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OperatorModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OperatorModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/OperatorModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/OperatorModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/operators/{id}": {
      "get": {
        "tags": [
          "Operators"
        ],
        "summary": "Get an operator by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Operator id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperatorModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/OperatorModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "Operators"
        ],
        "summary": "Delete an operator.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Operator id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/operators/current": {
      "get": {
        "tags": [
          "Operators"
        ],
        "summary": "Get current operator.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperatorModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/OperatorModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/operators/current/shift/options": {
      "get": {
        "tags": [
          "Operators"
        ],
        "summary": "Gets current operator shift options.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftOptionsModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftOptionsModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/operators/current/branches": {
      "get": {
        "tags": [
          "Operators"
        ],
        "summary": "Gets accessible branches for current operator.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/BranchModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/operators/{operatorId}/branches": {
      "get": {
        "tags": [
          "Operators"
        ],
        "summary": "Gets accessible branches for specified operator.",
        "parameters": [
          {
            "name": "operatorId",
            "in": "path",
            "description": "Operator id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/BranchModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/operators/current/branches/current": {
      "get": {
        "tags": [
          "Operators"
        ],
        "summary": "Gets operator current branch.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/BranchModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/operators/current/branches/{branchId}/registers": {
      "get": {
        "tags": [
          "Operators"
        ],
        "summary": "Get operator registers for the specified branch.",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "Branch id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/operators/current/registers": {
      "get": {
        "tags": [
          "Operators"
        ],
        "summary": "Get operator registers for the current branch.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/operators/current/registers/current": {
      "get": {
        "tags": [
          "Operators"
        ],
        "summary": "Get operator current register.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/operators/current/shift/start": {
      "post": {
        "tags": [
          "Operators"
        ],
        "summary": "Starts shift for current operator.",
        "requestBody": {
          "description": "Start shift model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftStartModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftStartModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftStartModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ShiftStartModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ShiftStartModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/operators/{operatorId}/shift/start": {
      "post": {
        "tags": [
          "Operators"
        ],
        "summary": "Starts shift.",
        "parameters": [
          {
            "name": "operatorId",
            "in": "path",
            "description": "Operator id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Start shift model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftStartModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftStartModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftStartModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ShiftStartModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ShiftStartModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/operators/current/shift/active/lock": {
      "put": {
        "tags": [
          "Operators"
        ],
        "summary": "Locks active shift for current operator.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/operators/current/shift/active/unlock": {
      "put": {
        "tags": [
          "Operators"
        ],
        "summary": "Unlocks active shift for current operator.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/operators/current/shift/active": {
      "get": {
        "tags": [
          "Operators"
        ],
        "summary": "Returns active shift information for current operator.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActiveShiftModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ActiveShiftModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/operators/current/shift/active/end": {
      "post": {
        "tags": [
          "Operators"
        ],
        "summary": "Ends active shift for current operator.",
        "requestBody": {
          "description": "End model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftEndModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftEndModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftEndModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ShiftEndModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ShiftEndModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/operators/current/shift/active/expected": {
      "get": {
        "tags": [
          "Operators"
        ],
        "summary": "Returns active shift expected payments information.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftExpectedModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftExpectedModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/operators/current/password": {
      "post": {
        "tags": [
          "Operators"
        ],
        "summary": "Sets or updates current operator password.",
        "requestBody": {
          "description": "Password model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OperatorPasswordUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OperatorPasswordUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OperatorPasswordUpdateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/OperatorPasswordUpdateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/OperatorPasswordUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/operators/{operatorId}/branch/{branchId}": {
      "post": {
        "tags": [
          "Operators"
        ],
        "summary": "Adds operator to the branch.",
        "parameters": [
          {
            "name": "operatorId",
            "in": "path",
            "description": "Operator id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "Branch id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Operators"
        ],
        "summary": "Removes operator from the branch.",
        "parameters": [
          {
            "name": "operatorId",
            "in": "path",
            "description": "Operator id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "Branch id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/operators/{operatorId}/branch/{branchId}/default/{isDefault}": {
      "post": {
        "tags": [
          "Operators"
        ],
        "summary": "Sets operator default branch.",
        "parameters": [
          {
            "name": "operatorId",
            "in": "path",
            "description": "Operator id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "Branch id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "isDefault",
            "in": "path",
            "description": "Default value.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/operators/{operatorId}/branch/default": {
      "get": {
        "tags": [
          "Operators"
        ],
        "summary": "Gets operator default branch.",
        "parameters": [
          {
            "name": "operatorId",
            "in": "path",
            "description": "Operator id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/operators/{operatorId}/permissionset/{permissionSetId}": {
      "put": {
        "tags": [
          "Operators"
        ],
        "summary": "Applies specified permission set.",
        "parameters": [
          {
            "name": "operatorId",
            "in": "path",
            "description": "Operator id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permissionSetId",
            "in": "path",
            "description": "Permission set id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/operators/{operatorId}/permissions": {
      "get": {
        "tags": [
          "Operators"
        ],
        "summary": "Gets current permissions.",
        "parameters": [
          {
            "name": "operatorId",
            "in": "path",
            "description": "Operator id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPermissionModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPermissionModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/operators/{id}/enable": {
      "put": {
        "tags": [
          "Operators"
        ],
        "summary": "Enables entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/operators/{id}/disable": {
      "put": {
        "tags": [
          "Operators"
        ],
        "summary": "Disables entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Reads options from the store.",
        "parameters": [
          {
            "name": "optionsType",
            "in": "query",
            "description": "Options type.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Options"
        ],
        "summary": "Writes specified options to the store.",
        "requestBody": {
          "description": "Options pack.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreOptionsWritePack"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreOptionsWritePack"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StoreOptionsWritePack"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/StoreOptionsWritePack"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/StoreOptionsWritePack"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/skin": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkinOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/SkinOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/skin/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/currency": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/currency/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/business": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/BusinessOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/BusinessOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/business/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/general": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GeneralOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GeneralOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GeneralOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/GeneralOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/GeneralOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/general/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/managerfeatures": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagerFeaturesOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ManagerFeaturesOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagerFeaturesOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagerFeaturesOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ManagerFeaturesOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ManagerFeaturesOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ManagerFeaturesOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/managerfeatures/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/regional": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegionalOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/RegionalOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegionalOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegionalOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegionalOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/RegionalOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/RegionalOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/regional/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/fiscalization": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FiscalizationOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/FiscalizationOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FiscalizationOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FiscalizationOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FiscalizationOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/FiscalizationOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/FiscalizationOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/fiscalization/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/tax": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/TaxOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaxOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/TaxOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/TaxOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/tax/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/reservations": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationsOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationsOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationsOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationsOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationsOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ReservationsOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ReservationsOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/reservations/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/agerestrictions": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgeRestrictionsOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AgeRestrictionsOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgeRestrictionsOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AgeRestrictionsOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AgeRestrictionsOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/AgeRestrictionsOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/AgeRestrictionsOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/agerestrictions/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/waitinglines": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaitingLinesOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WaitingLinesOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaitingLinesOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WaitingLinesOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WaitingLinesOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/WaitingLinesOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/WaitingLinesOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/waitinglines/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/topup": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopUpOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/TopUpOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TopUpOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TopUpOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TopUpOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/TopUpOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/TopUpOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/topup/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/paymentprocessing": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentProcessingOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentProcessingOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentProcessingOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentProcessingOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentProcessingOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/PaymentProcessingOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/PaymentProcessingOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/paymentprocessing/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/smtp": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SMTPOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/SMTPOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SMTPOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SMTPOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SMTPOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/SMTPOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/SMTPOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/smtp/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/smsgateway": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SMSGatewayOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/SMSGatewayOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SMSGatewayOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SMSGatewayOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SMSGatewayOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/SMSGatewayOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/SMSGatewayOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/smsgateway/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/network": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/NetworkOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/NetworkOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/network/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/client/network/connection": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientNetworkConnectionOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ClientNetworkConnectionOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientNetworkConnectionOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientNetworkConnectionOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClientNetworkConnectionOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ClientNetworkConnectionOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ClientNetworkConnectionOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/client/network/connection/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/https/certificate": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpsCertificateOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/HttpsCertificateOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HttpsCertificateOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HttpsCertificateOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HttpsCertificateOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/HttpsCertificateOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/HttpsCertificateOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/https/certificate/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/user/sessions": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSessionsOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserSessionsOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSessionsOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSessionsOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserSessionsOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserSessionsOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserSessionsOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/user/sessions/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/user/login": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/user/login/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/misc": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MiscOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/MiscOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MiscOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MiscOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MiscOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/MiscOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/MiscOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/misc/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/client/update": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientUpdateOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ClientUpdateOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientUpdateOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientUpdateOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClientUpdateOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ClientUpdateOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ClientUpdateOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/client/update/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/client": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientGeneralOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ClientGeneralOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientGeneralOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientGeneralOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClientGeneralOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ClientGeneralOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ClientGeneralOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/client/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/confirmation/code": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmationCodeOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmationCodeOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmationCodeOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmationCodeOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmationCodeOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmationCodeOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmationCodeOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/confirmation/code/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/user/password/policy": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPasswordPolicyOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserPasswordPolicyOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordPolicyOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordPolicyOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordPolicyOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordPolicyOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordPolicyOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/user/password/policy/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/user/password/recovery": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPasswordRecoveryOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserPasswordRecoveryOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordRecoveryOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordRecoveryOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordRecoveryOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordRecoveryOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordRecoveryOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/user/password/recovery/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/user/registration": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistrationOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistrationOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/user/registration/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/user/logout/grace": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLogoutGraceOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserLogoutGraceOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogoutGraceOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogoutGraceOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogoutGraceOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserLogoutGraceOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserLogoutGraceOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/user/logout/grace/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/user/files": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserFilesOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserFilesOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserFilesOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserFilesOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserFilesOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserFilesOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserFilesOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/user/files/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/user/storage": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserStorageOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserStorageOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserStorageOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserStorageOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserStorageOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserStorageOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserStorageOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/user/storage/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/user/balance": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBalanceOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserBalanceOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBalanceOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBalanceOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserBalanceOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserBalanceOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserBalanceOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/user/balance/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/deployment": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/deployment/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/client/notifications": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientNotificationOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ClientNotificationOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientNotificationOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientNotificationOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClientNotificationOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ClientNotificationOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ClientNotificationOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/client/notifications/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/invoicing": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicingOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicingOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoicingOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoicingOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoicingOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/InvoicingOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/InvoicingOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/invoicing/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/pos/automation": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/POSAutomationOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/POSAutomationOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSAutomationOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSAutomationOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSAutomationOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/POSAutomationOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/POSAutomationOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/options/pos/automation/pack": {
      "get": {
        "tags": [
          "Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/paymentintents/deposit": {
      "post": {
        "tags": [
          "PaymentIntents"
        ],
        "summary": "Creates new deposit intent.",
        "requestBody": {
          "description": "Parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentIntentCreateParametersDepositModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentIntentCreateParametersDepositModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentIntentCreateParametersDepositModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/PaymentIntentCreateParametersDepositModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/PaymentIntentCreateParametersDepositModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntentCreateResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntentCreateResultModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/paymentintents": {
      "get": {
        "tags": [
          "PaymentIntents"
        ],
        "summary": "Get all Payment intents.",
        "description": "<b>Returns a list of Payment intents.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "State",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1,
                2
              ],
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntentModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntentModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/paymentintents/{id}": {
      "get": {
        "tags": [
          "PaymentIntents"
        ],
        "summary": "Get a payment intent by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payment intent id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntentModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntentModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/paymentintents/{guid}": {
      "get": {
        "tags": [
          "PaymentIntents"
        ],
        "summary": "Get a payment intent by guid.",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "Payment intent guid.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntentModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntentModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid guid specified."
          }
        }
      }
    },
    "/api/v3.0/paymentmethods": {
      "get": {
        "tags": [
          "PaymentMethods"
        ],
        "summary": "Get all payment methods.",
        "description": "<b>Returns a list of payment methods.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PaymentMethods"
        ],
        "summary": "Create a payment method.",
        "requestBody": {
          "description": "Payment method.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PaymentMethods"
        ],
        "summary": "Update a payment method.",
        "requestBody": {
          "description": "Payment method.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/paymentmethods/{id}": {
      "get": {
        "tags": [
          "PaymentMethods"
        ],
        "summary": "Get a payment method by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payment method id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "PaymentMethods"
        ],
        "summary": "Delete a payment method.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payment method id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/paymentmethods/name/{name}/exist": {
      "get": {
        "tags": [
          "PaymentMethods"
        ],
        "summary": "Checks if entry exists with specified name.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Entry name.",
            "required": true,
            "schema": {
              "maxLength": 45,
              "minLength": 0,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/paymentproviders": {
      "get": {
        "tags": [
          "PaymentProviders"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentProviderMetadataModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentProviderMetadataModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/paymentproviders/{providerGuid}": {
      "get": {
        "tags": [
          "PaymentProviders"
        ],
        "parameters": [
          {
            "name": "providerGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentProviderMetadataModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentProviderMetadataModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/paymentproviders/{providerGuid}/options": {
      "get": {
        "tags": [
          "PaymentProviders"
        ],
        "parameters": [
          {
            "name": "providerGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PaymentProviders"
        ],
        "parameters": [
          {
            "name": "providerGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "application/x-msgpack": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "application/octet-stream": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/payments/transactions": {
      "get": {
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "name": "Pagination.PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ShiftId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RegisterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OperatorId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PaymentMethodId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PaymentDirection",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1
              ],
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IncludeInvoicePayments",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeDepositPayments",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeDepositRefunds",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeInvoiceRefunds",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludePayIns",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludePayOuts",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentTransactionModelPagedListClassic"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentTransactionModelPagedListClassic"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/pluginlibrary": {
      "get": {
        "tags": [
          "PluginLibrary"
        ],
        "summary": "Gets filtered entries.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IsEnabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PluginLibraryModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PluginLibraryModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PluginLibrary"
        ],
        "summary": "Updates entry.",
        "requestBody": {
          "description": "Update model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PluginLibraryModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PluginLibraryModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PluginLibraryModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/PluginLibraryModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/PluginLibraryModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/pointstransactions": {
      "get": {
        "tags": [
          "PointsTransactions"
        ],
        "summary": "Gets list of points transactions.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1,
                2,
                3,
                4
              ],
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PointTransactionModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PointTransactionModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PointsTransactions"
        ],
        "summary": "Create a points transaction.",
        "requestBody": {
          "description": "Points transaction.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PointTransactionModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PointTransactionModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PointTransactionModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/PointTransactionModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/PointTransactionModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/pointstransactions/{id}": {
      "get": {
        "tags": [
          "PointsTransactions"
        ],
        "summary": "Gets points transaction by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PointTransactionModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PointTransactionModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/presetreservationtime": {
      "get": {
        "tags": [
          "PresetReservationTime"
        ],
        "summary": "Gets filtered entries.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PresetReservationTimeModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PresetReservationTimeModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PresetReservationTime"
        ],
        "summary": "Creates entry.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PresetReservationTimeModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PresetReservationTimeModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PresetReservationTimeModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/PresetReservationTimeModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/PresetReservationTimeModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/presetreservationtime/{id}": {
      "get": {
        "tags": [
          "PresetReservationTime"
        ],
        "summary": "Gets entry by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PresetReservationTimeModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PresetReservationTimeModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PresetReservationTime"
        ],
        "summary": "Deletes entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/presettimesale": {
      "get": {
        "tags": [
          "PresetTimeSale"
        ],
        "summary": "Gets filtered entries.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PresetTimeSaleModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PresetTimeSaleModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PresetTimeSale"
        ],
        "summary": "Creates entry.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PresetTimeSaleModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PresetTimeSaleModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PresetTimeSaleModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/PresetTimeSaleModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/PresetTimeSaleModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/presettimesale/{id}": {
      "get": {
        "tags": [
          "PresetTimeSale"
        ],
        "summary": "Gets entry by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PresetTimeSaleModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PresetTimeSaleModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PresetTimeSale"
        ],
        "summary": "Deletes entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/presettimesalemoney": {
      "get": {
        "tags": [
          "PresetTimeSaleMoney"
        ],
        "summary": "Gets filtered entries.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PresetTimeSaleMoneyModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PresetTimeSaleMoneyModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PresetTimeSaleMoney"
        ],
        "summary": "Creates entry.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PresetTimeSaleMoneyModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PresetTimeSaleMoneyModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PresetTimeSaleMoneyModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/PresetTimeSaleMoneyModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/PresetTimeSaleMoneyModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/presettimesalemoney/{id}": {
      "get": {
        "tags": [
          "PresetTimeSaleMoney"
        ],
        "summary": "Gets entry by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PresetTimeSaleMoneyModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PresetTimeSaleMoneyModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PresetTimeSaleMoney"
        ],
        "summary": "Deletes entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/presettopup": {
      "get": {
        "tags": [
          "PresetTopUp"
        ],
        "summary": "Gets filtered entries.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PresetTopUpModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PresetTopUpModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PresetTopUp"
        ],
        "summary": "Creates entry.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PresetTopUpModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PresetTopUpModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PresetTopUpModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/PresetTopUpModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/PresetTopUpModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/presettopup/{id}": {
      "get": {
        "tags": [
          "PresetTopUp"
        ],
        "summary": "Gets entry by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PresetTopUpModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PresetTopUpModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PresetTopUp"
        ],
        "summary": "Deletes entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productgroups": {
      "get": {
        "tags": [
          "ProductGroups"
        ],
        "summary": "Get all product groups.",
        "description": "<b>Returns a list of product groups.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "GroupName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGroupModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGroupModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProductGroups"
        ],
        "summary": "Create a product group.",
        "requestBody": {
          "description": "Product group.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductGroups"
        ],
        "summary": "Update a product group.",
        "requestBody": {
          "description": "Product group.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productgroups/{id}": {
      "get": {
        "tags": [
          "ProductGroups"
        ],
        "summary": "Get a product group by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGroupModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGroupModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "ProductGroups"
        ],
        "summary": "Delete a product group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MoveToProductGroupId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGroupDeleteResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGroupDeleteResultModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/productgroups/name/{name}/exist": {
      "get": {
        "tags": [
          "ProductGroups"
        ],
        "summary": "Checks if entry exists with specified name.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Entry name.",
            "required": true,
            "schema": {
              "maxLength": 45,
              "minLength": 0,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productorders": {
      "get": {
        "tags": [
          "ProductOrders"
        ],
        "summary": "Gets product orders.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1,
                2,
                3,
                4
              ],
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/OrderModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProductOrders"
        ],
        "summary": "Creates an order.",
        "requestBody": {
          "description": "Order model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderInvoiceCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderInvoiceCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderInvoiceCreateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/OrderInvoiceCreateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/OrderInvoiceCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderInvoiceCreateResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/OrderInvoiceCreateResultModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productorders/{id}": {
      "get": {
        "tags": [
          "ProductOrders"
        ],
        "summary": "Get an order by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/OrderModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productorders/active": {
      "get": {
        "tags": [
          "ProductOrders"
        ],
        "summary": "Gets active product orders.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActiveOrderModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ActiveOrderModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productorders/{id}/active": {
      "get": {
        "tags": [
          "ProductOrders"
        ],
        "summary": "Gets active product order.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActiveOrderModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ActiveOrderModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productorders/multi": {
      "post": {
        "tags": [
          "ProductOrders"
        ],
        "summary": "Creates an order.",
        "requestBody": {
          "description": "Order model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderInvoiceCreateMultiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderInvoiceCreateMultiModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderInvoiceCreateMultiModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/OrderInvoiceCreateMultiModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/OrderInvoiceCreateMultiModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderInvoiceCreateMultiResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/OrderInvoiceCreateMultiResultModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productorders/{id}/invoice": {
      "put": {
        "tags": [
          "ProductOrders"
        ],
        "summary": "Invoice existing order.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Invoicing parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderInvoiceModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderInvoiceModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderInvoiceModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/OrderInvoiceModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/OrderInvoiceModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderInvoiceResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/OrderInvoiceResultModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productorders/{id}/process": {
      "put": {
        "tags": [
          "ProductOrders"
        ],
        "summary": "Starts product order processing.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productorders/{id}/complete": {
      "put": {
        "tags": [
          "ProductOrders"
        ],
        "summary": "Complete the specified order.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productorders/{id}/cancel": {
      "put": {
        "tags": [
          "ProductOrders"
        ],
        "summary": "Cancel the specified order.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productorders/{id}/delivered": {
      "get": {
        "tags": [
          "ProductOrders"
        ],
        "summary": "Get specified order delivery status.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDeliveredStatusModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDeliveredStatusModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductOrders"
        ],
        "summary": "Delivers specified order.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productorders/orderlines/{orderLineId}/delivered": {
      "get": {
        "tags": [
          "ProductOrders"
        ],
        "summary": "Gets order line delivery status.",
        "parameters": [
          {
            "name": "orderLineId",
            "in": "path",
            "description": "Order line id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderLineDeliveredStatusModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/OrderLineDeliveredStatusModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productorders/{id}/orderlines/delivered": {
      "get": {
        "tags": [
          "ProductOrders"
        ],
        "summary": "Gets order lines delivery status.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderLineDeliveredStatusModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderLineDeliveredStatusModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productorders/orderlines/{orderLineId}/delivered/{quantity}": {
      "put": {
        "tags": [
          "ProductOrders"
        ],
        "summary": "Sets order line delivery status.",
        "parameters": [
          {
            "name": "orderLineId",
            "in": "path",
            "description": "Order line id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "quantity",
            "in": "path",
            "description": "Delivered quantity.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productorders/product/{productId}/user/{userId}/quantity/{quantity}/price": {
      "get": {
        "tags": [
          "ProductOrders"
        ],
        "summary": "Gets product user price.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "quantity",
            "in": "path",
            "description": "Product quantity.",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPriceRequestResponseModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPriceRequestResponseModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productorders/product/{productId}/quantity/{quantity}/price": {
      "get": {
        "tags": [
          "ProductOrders"
        ],
        "summary": "Gets product price.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "quantity",
            "in": "path",
            "description": "Product quantity.",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPriceRequestResponseModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPriceRequestResponseModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productorders/product/{productId}/usergroup/{userGroupId}/quantity/{quantity}/price": {
      "get": {
        "tags": [
          "ProductOrders"
        ],
        "summary": "Gets product price.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "quantity",
            "in": "path",
            "description": "Product quantity.",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "userGroupId",
            "in": "path",
            "description": "User group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPriceRequestResponseModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPriceRequestResponseModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productorders/{id}/payments": {
      "post": {
        "tags": [
          "ProductOrders"
        ],
        "summary": "Creates order payments.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order id/",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Payments.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderPaymentsCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderPaymentsCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderPaymentsCreateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/OrderPaymentsCreateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/OrderPaymentsCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderPaymentsCreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/OrderPaymentsCreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get all products.",
        "description": "<b>Returns a list of products.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "ProductType",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1,
                2
              ],
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProductGroupId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProductName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProductModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a product.",
        "requestBody": {
          "description": "Product.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update a product.",
        "requestBody": {
          "description": "Product.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get a product by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProductModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a product.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/products/{id}/purchaseavailability": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get product purchase availability.",
        "description": "<b>Returns purchase availability of the product.</b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPurchaseAvailabilityModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPurchaseAvailabilityModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update product purchase availability.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPurchaseAvailabilityModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPurchaseAvailabilityModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPurchaseAvailabilityModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductPurchaseAvailabilityModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductPurchaseAvailabilityModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/{id}/images": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get the images of the specified product.",
        "description": "<b>Returns a list of product images.</b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductImageModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductImageModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a product image.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductImageModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductImageModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductImageModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductImageModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductImageModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/images": {
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update a product image.",
        "description": "<b></b>",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductImageModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductImageModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductImageModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductImageModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductImageModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/{id}/images/{productImageId}": {
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a product image.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "productImageId",
            "in": "path",
            "description": "Product image id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/{id}/userprices": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get the user prices of the specified product.",
        "description": "<b>Returns a list of product user prices.</b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductUserPriceModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductUserPriceModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a product user price.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Product user price.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUserPriceModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUserPriceModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUserPriceModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductUserPriceModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductUserPriceModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/userprices": {
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update a product user price.",
        "description": "<b></b>",
        "requestBody": {
          "description": "Product user price.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUserPriceModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUserPriceModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUserPriceModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductUserPriceModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductUserPriceModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/{id}/userprices/{userPriceId}": {
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a product user price.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userPriceId",
            "in": "path",
            "description": "Product user price id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/{id}/disallowedusergroups": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get disallowed user groups of the specified product.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDisallowedUserGroupModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDisallowedUserGroupModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a disallowed user group.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDisallowedUserGroupModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDisallowedUserGroupModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDisallowedUserGroupModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductDisallowedUserGroupModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductDisallowedUserGroupModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/disallowedusergroups": {
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update a disallowed user group.",
        "description": "<b></b>",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDisallowedUserGroupModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDisallowedUserGroupModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDisallowedUserGroupModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductDisallowedUserGroupModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductDisallowedUserGroupModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/{id}/disallowedusergroups/{productDisallowedUserGroupId}": {
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a disallowed user group.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "productDisallowedUserGroupId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/bundle/{id}/bundledproducts": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get the bundled products of the specified bundle.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bundle id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductBundledModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductBundledModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a bundled product.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bundle id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Bundled product.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/bundle/bundledproducts": {
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update a bundled product.",
        "description": "<b></b>",
        "requestBody": {
          "description": "Bundled product",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/bundle/{id}/bundledproducts/{bundledProductId}": {
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a bundled product.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bundle id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "bundledProductId",
            "in": "path",
            "description": "Bundled product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/bundle/{id}/bundledproducts/{bundledProductId}/userprices": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get the user prices of the specified bundled product.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bundle id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "bundledProductId",
            "in": "path",
            "description": "Bundled product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductBundledUserPriceModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductBundledUserPriceModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a bundled product user price.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bundle id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "bundledProductId",
            "in": "path",
            "description": "Bundled product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Product bundle user price.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledUserPriceModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledUserPriceModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledUserPriceModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledUserPriceModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledUserPriceModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/bundle/bundledproducts/userprices": {
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update a bundled product user price.",
        "description": "<b></b>",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledUserPriceModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledUserPriceModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledUserPriceModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledUserPriceModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledUserPriceModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/bundle/{id}/bundledproducts/{bundledProductId}/userprices/{userPriceId}": {
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a bundled product user price.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "bundledProductId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userPriceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/time/{id}/usageavailability": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get time product usage availability.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Time product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductTimeUsageAvailabilityModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProductTimeUsageAvailabilityModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update time product usage availability.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Time product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Usage availability.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeUsageAvailabilityModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeUsageAvailabilityModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeUsageAvailabilityModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeUsageAvailabilityModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeUsageAvailabilityModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/time/{id}/disallowedhostgroups": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get disallowed host groups of the specified time product.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Time product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductTimeDisallowedHostGroupModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductTimeDisallowedHostGroupModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a disallowed host group.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Time product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Time product disallowed host group.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeDisallowedHostGroupModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeDisallowedHostGroupModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeDisallowedHostGroupModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeDisallowedHostGroupModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeDisallowedHostGroupModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/time/disallowedhostgroups": {
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update a disallowed host group.",
        "description": "<b></b>",
        "requestBody": {
          "description": "Time product disallowed host group.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeDisallowedHostGroupModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeDisallowedHostGroupModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeDisallowedHostGroupModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeDisallowedHostGroupModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeDisallowedHostGroupModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/time/{id}/disallowedhostgroups/{timeProductDisallowedHostGroupId}": {
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a disallowed host group.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Time product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "timeProductDisallowedHostGroupId",
            "in": "path",
            "description": "Time product disallowed host group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/{productId}/user/{userId}/quantity/{quantity}/price": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Gets product user price.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "quantity",
            "in": "path",
            "description": "Product quantity.",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPriceRequestResponseModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPriceRequestResponseModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/{productId}/quantity/{quantity}/price": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Gets product price.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "quantity",
            "in": "path",
            "description": "Product quantity.",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPriceRequestResponseModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPriceRequestResponseModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/{productId}/usergroup/{userGroupId}/quantity/{quantity}/price": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Gets product price.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "quantity",
            "in": "path",
            "description": "Product quantity.",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "userGroupId",
            "in": "path",
            "description": "User group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPriceRequestResponseModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPriceRequestResponseModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/{id}/branches": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Gets branch configuration entries.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BranchReferenceModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BranchReferenceModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Sets branch configuration entries.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Branch configuration entries.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BranchReferenceModelUpdate"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BranchReferenceModelUpdate"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BranchReferenceModelUpdate"
                }
              }
            },
            "application/x-msgpack": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BranchReferenceModelUpdate"
                }
              }
            },
            "application/octet-stream": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BranchReferenceModelUpdate"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/{id}/hiddenhostgroups": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get hidden host groups of the specified product.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductHiddenHostGroupModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductHiddenHostGroupModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a hidden host group.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Product hidden host group.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductHiddenHostGroupModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductHiddenHostGroupModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductHiddenHostGroupModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductHiddenHostGroupModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductHiddenHostGroupModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/hiddenhostgroups": {
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update a hidden host group.",
        "description": "<b></b>",
        "requestBody": {
          "description": "Product hidden host group.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductHiddenHostGroupModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductHiddenHostGroupModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductHiddenHostGroupModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductHiddenHostGroupModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductHiddenHostGroupModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/{id}/hiddenhostgroups/{productHiddenHostGroupId}": {
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a hidden host group.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "productHiddenHostGroupId",
            "in": "path",
            "description": "Product hidden host group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/products/name/{name}/exist": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Checks if entry exists with specified name.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Entry name.",
            "required": true,
            "schema": {
              "maxLength": 45,
              "minLength": 0,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productstock": {
      "get": {
        "tags": [
          "ProductStock"
        ],
        "summary": "Gets products stock levels.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "StockId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStockModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStockModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productstock/{productId}": {
      "get": {
        "tags": [
          "ProductStock"
        ],
        "summary": "Gets product stock level.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStockModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStockModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productstock/{productId}/stock/{stockId}": {
      "get": {
        "tags": [
          "ProductStock"
        ],
        "summary": "Gets product stock level.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "stockId",
            "in": "path",
            "description": "Branch id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStockModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStockModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productstock/{productId}/transaction": {
      "post": {
        "tags": [
          "ProductStock"
        ],
        "summary": "Creates product stock transaction.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Transaction model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductStockTransactionCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductStockTransactionCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductStockTransactionCreateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductStockTransactionCreateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductStockTransactionCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productstock/{productId}/stock/{stockId}/add/{amount}": {
      "post": {
        "tags": [
          "ProductStock"
        ],
        "summary": "Sets product stock level.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "stockId",
            "in": "path",
            "description": "Stock id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "amount",
            "in": "path",
            "description": "Stock level amount.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productstock/{productId}/stock/{stockId}/set/{amount}": {
      "post": {
        "tags": [
          "ProductStock"
        ],
        "summary": "Adds specified amount to product stock level.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "stockId",
            "in": "path",
            "description": "Stock id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "amount",
            "in": "path",
            "description": "Stock level amount.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productstock/{productId}/stock/{stockId}/remove/{amount}": {
      "post": {
        "tags": [
          "ProductStock"
        ],
        "summary": "Removes specified amount from product stock level.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "stockId",
            "in": "path",
            "description": "Stock id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "amount",
            "in": "path",
            "description": "Stock level amount.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productstock/{productId}/add/{amount}": {
      "post": {
        "tags": [
          "ProductStock"
        ],
        "summary": "Sets product stock level.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "amount",
            "in": "path",
            "description": "Stock level amount.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productstock/{productId}/set/{amount}": {
      "post": {
        "tags": [
          "ProductStock"
        ],
        "summary": "Adds specified amount to product stock level.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "amount",
            "in": "path",
            "description": "Stock level amount.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/productstock/{productId}/remove/{amount}": {
      "post": {
        "tags": [
          "ProductStock"
        ],
        "summary": "Removes specified amount from product stock level.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "amount",
            "in": "path",
            "description": "Stock level amount.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/publicoptions/general": {
      "get": {
        "tags": [
          "PublicOptions"
        ],
        "summary": "Returns general options.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralOptions"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralOptions"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/publicoptions/general/pack": {
      "get": {
        "tags": [
          "PublicOptions"
        ],
        "summary": "Returns general options pack.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/recoveries/password/{username}/phone": {
      "post": {
        "tags": [
          "Recoveries"
        ],
        "summary": "Initiates password recovery by mobile phone.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "User name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordRecoveryStartResultModelByMobile"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordRecoveryStartResultModelByMobile"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/recoveries/password/{username}/email": {
      "post": {
        "tags": [
          "Recoveries"
        ],
        "summary": "Initiates password recovery by email.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "User name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordRecoveryStartResultModelByEmail"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordRecoveryStartResultModelByEmail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/recoveries/password/{token}/{confirmationCode}/complete": {
      "post": {
        "tags": [
          "Recoveries"
        ],
        "summary": "Completes password recovery.",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confirmationCode",
            "in": "path",
            "description": "Confirmation code.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "newPassword",
            "in": "query",
            "description": "New password value.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "enum": [
                    "0 = Success",
                    "1 = Failure",
                    "101 = InvalidToken",
                    "102 = ExpiredToken",
                    "103 = RevokedToken",
                    "104 = UsedToken",
                    "105 = InvalidTokenInput",
                    "106 = InvalidTokenType"
                  ],
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "enum": [
                    "0 = Success",
                    "1 = Failure",
                    "101 = InvalidToken",
                    "102 = ExpiredToken",
                    "103 = RevokedToken",
                    "104 = UsedToken",
                    "105 = InvalidTokenInput",
                    "106 = InvalidTokenType"
                  ],
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/registers": {
      "get": {
        "tags": [
          "Registers"
        ],
        "summary": "Get all registers.",
        "description": "<b>Returns a list of registers.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Registers"
        ],
        "summary": "Create a register.",
        "requestBody": {
          "description": "Register.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Registers"
        ],
        "summary": "Update a register.",
        "requestBody": {
          "description": "Register.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/registers/{id}": {
      "get": {
        "tags": [
          "Registers"
        ],
        "summary": "Get a register by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Register id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "Registers"
        ],
        "summary": "Delete a register.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Register id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/registers/{id}/undelete": {
      "put": {
        "tags": [
          "Registers"
        ],
        "summary": "Undelete a register.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Register id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/registers/{id}/name": {
      "put": {
        "tags": [
          "Registers"
        ],
        "summary": "Sets entry name.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Entry name.",
          "content": {
            "application/json": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            },
            "application/octet-stream": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/registers/name/{name}/exist": {
      "get": {
        "tags": [
          "Registers"
        ],
        "summary": "Checks if entry exists with specified name.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Entry name.",
            "required": true,
            "schema": {
              "maxLength": 45,
              "minLength": 0,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/registers/name/{name}/branch/{branchId}/exist": {
      "get": {
        "tags": [
          "Registers"
        ],
        "summary": "Checks if entry exists with specified name.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Entry name.",
            "required": true,
            "schema": {
              "maxLength": 45,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "Branch id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/registertransactions": {
      "get": {
        "tags": [
          "RegisterTransactions"
        ],
        "summary": "Get all register transactions.",
        "description": "<b>Returns a list of register transactions.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterTransactionModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterTransactionModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/registertransactions/{id}": {
      "get": {
        "tags": [
          "RegisterTransactions"
        ],
        "summary": "Get a register transaction by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Register transaction id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterTransactionModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterTransactionModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/remotecontrol/hosts/{hostId}/session": {
      "get": {
        "tags": [
          "RemoteControl"
        ],
        "summary": "Creates remote control session.",
        "parameters": [
          {
            "name": "hostId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteControlSessionCreateResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteControlSessionCreateResultModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reportmodules/{reportId}/export": {
      "post": {
        "tags": [
          "ReportModules"
        ],
        "summary": "Exports report.",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "Report module unique id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Export format.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Report pack model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IReportPackModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IReportPackModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IReportPackModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/IReportPackModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/IReportPackModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reportmodules/{reportId}": {
      "get": {
        "tags": [
          "ReportModules"
        ],
        "summary": "Generates report.",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "Report module unique id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "reportFilter",
            "in": "query",
            "description": "Report module filters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IReportModuleResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/IReportModuleResultModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reportpresets": {
      "get": {
        "tags": [
          "ReportPresets"
        ],
        "summary": "Gets report presets.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportPresetModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ReportPresetModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ReportPresets"
        ],
        "summary": "Creates report preset.",
        "requestBody": {
          "description": "Report preset.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportPresetModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportPresetModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportPresetModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ReportPresetModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ReportPresetModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ReportPresets"
        ],
        "summary": "Updates report preset.",
        "requestBody": {
          "description": "Report preset.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportPresetModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportPresetModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportPresetModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ReportPresetModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ReportPresetModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reportpresets/{id}": {
      "get": {
        "tags": [
          "ReportPresets"
        ],
        "summary": "Gets report preset by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Report preset id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportPresetModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ReportPresetModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ReportPresets"
        ],
        "summary": "Deletes report preset.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Report preset id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/reportpresets/{id}/displayorder/{displayOrder}": {
      "put": {
        "tags": [
          "ReportPresets"
        ],
        "summary": "Updates report preset display order.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Report preset id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "displayOrder",
            "in": "path",
            "description": "New display order.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reportpresets/{id}/name/{name}": {
      "put": {
        "tags": [
          "ReportPresets"
        ],
        "summary": "Updates report preset name.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Report preset id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New name.",
          "content": {
            "application/json": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            },
            "application/octet-stream": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reportpresets/name/{name}/exist": {
      "get": {
        "tags": [
          "ReportPresets"
        ],
        "summary": "Checks if preset exists with specified name.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Preset name.",
            "required": true,
            "schema": {
              "maxLength": 45,
              "minLength": 0,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reports/overview": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Overview report.",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverviewReportModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/OverviewReportModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reports/financial": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Financial report.",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "OperatorId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RegisterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FinancialReportType",
            "in": "query",
            "required": true,
            "schema": {
              "enum": [
                "1 = Simple",
                "2 = GroupByUserGroup",
                "3 = Detailed"
              ],
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialReportModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialReportModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reports/hostusage": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Host usage report.",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "HostUsageReportType",
            "in": "query",
            "required": true,
            "schema": {
              "enum": [
                "1 = Simple",
                "2 = GroupByUserGroup",
                "3 = Detailed"
              ],
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "HostGroupId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostUsageReportModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/HostUsageReportModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reports/topusers": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Top users report.",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "TopUsersNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopUsersReportModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/TopUsersReportModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reports/user": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "User report.",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReportModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserReportModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reports/product": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Product report.",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ProductId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReportModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReportModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reports/products": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Products report.",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ProductId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "HideUnused",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsReportModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsReportModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reports/productslog": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Products log report.",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ProductId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OperatorId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProductTransactionType",
            "in": "query",
            "schema": {
              "enum": [
                1,
                2,
                3
              ],
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsLogReportModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsLogReportModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reports/stock": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Stock report.",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockReportModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StockReportModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reports/transactionslog": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Transactions log report.",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "OperatorId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RegisterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "VoidOperatorId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TransactionsLogActionType",
            "in": "query",
            "schema": {
              "enum": [
                1,
                2,
                3,
                4,
                5
              ],
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsLogReportModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsLogReportModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reports/shiftslog": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Shifts log report.",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "OperatorId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RegisterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ShiftsLogReportType",
            "in": "query",
            "required": true,
            "schema": {
              "enum": [
                "1 = Simple",
                "2 = Detailed"
              ],
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftsLogReportModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftsLogReportModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reports/assetslog": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Assets log report.",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "AssetTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AssetId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CheckOutOperatorId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CheckInOperatorId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetsLogReportModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AssetsLogReportModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reports/invoice": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Invoice report.",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "InvoiceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceReportModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceReportModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reports/invoiceslog": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Invoices log report.",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "OperatorId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RegisterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PaymentStatusType",
            "in": "query",
            "schema": {
              "enum": [
                1,
                2
              ],
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "VoidedStatusType",
            "in": "query",
            "schema": {
              "enum": [
                1,
                2
              ],
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicesLogReportModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicesLogReportModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reports/z": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Z report.",
        "parameters": [
          {
            "name": "Date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZReportModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ZReportModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reports/zlog": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Z log report.",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZLogReportModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ZLogReportModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reports/application": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Application report.",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ApplicationId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationReportModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationReportModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reports/applications": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Applications report.",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "HideUnused",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationsReportModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationsReportModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reports/sessionslog": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Sessions log report.",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "HostId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OperatorId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionsLogReportModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/SessionsLogReportModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reports/license": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "License report.",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "LicenseId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseReportModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseReportModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reports/licenses": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Licenses report.",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ApplicationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "HideUnused",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicensesReportModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/LicensesReportModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reports/orderslog": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Orders log report.",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "OrderSource",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1,
                2
              ],
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderStatus",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1,
                2,
                3,
                4
              ],
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OperatorId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdersLogReportModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/OrdersLogReportModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reports/ordersstatistics": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Orders statistics report.",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "OrderSource",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1,
                2
              ],
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderStatus",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1,
                2,
                3,
                4
              ],
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OperatorId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdersStatisticsReportModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/OrdersStatisticsReportModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reservations": {
      "get": {
        "tags": [
          "Reservations"
        ],
        "summary": "Get all reservations.",
        "description": "<b>Returns a list of reservations.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ],
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ContactPhone",
            "in": "query",
            "schema": {
              "maxLength": 20,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "ContactEmail",
            "in": "query",
            "schema": {
              "maxLength": 254,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Reservations"
        ],
        "summary": "Creates a reservation.",
        "requestBody": {
          "description": "Creation model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostReservationModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HostReservationModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HostReservationModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/HostReservationModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/HostReservationModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationCreateResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationCreateResultModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Reservations"
        ],
        "summary": "Update a reservation.",
        "requestBody": {
          "description": "Reservation.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ReservationModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ReservationModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reservations/{id}": {
      "get": {
        "tags": [
          "Reservations"
        ],
        "summary": "Get a reservation by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Reservation id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reservations/hosts/next": {
      "get": {
        "tags": [
          "Reservations"
        ],
        "summary": "Gets hosts next upcoming reservation.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostNextReservationModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/HostNextReservationModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reservations/hosts/{hostId}/next": {
      "get": {
        "tags": [
          "Reservations"
        ],
        "summary": "Gets hosts next upcoming reservation.",
        "parameters": [
          {
            "name": "hostId",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NextHostReservationModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/NextHostReservationModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reservations/{id}/cancel": {
      "put": {
        "tags": [
          "Reservations"
        ],
        "summary": "Cancels a reservation.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Reservation id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reservations/{id}/host": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "summary": "Adds a host to a reservation.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Reservation id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Add parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationHostModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationHostModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationHostModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ReservationHostModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ReservationHostModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reservations/{id}/complete": {
      "put": {
        "tags": [
          "Reservations"
        ],
        "summary": "Completes a reservation.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Reservation id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reservations/{id}/host/move": {
      "put": {
        "tags": [
          "Reservations"
        ],
        "summary": "Moves host reservation.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Reservation id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Move parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationHostMoveModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationHostMoveModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationHostMoveModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ReservationHostMoveModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ReservationHostMoveModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reservations/{id}/host/{hostId}/complete": {
      "put": {
        "tags": [
          "Reservations"
        ],
        "summary": "Cancels a reservation for host.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Reservation id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "hostId",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reservations/{id}/user": {
      "put": {
        "tags": [
          "Reservations"
        ],
        "summary": "Adds a user to a reservation.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Reservation id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Parameters model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationUserModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationUserModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationUserModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ReservationUserModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ReservationUserModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reservations/{id}/user/{userId}": {
      "delete": {
        "tags": [
          "Reservations"
        ],
        "summary": "Removes a user from reservation.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Reservation id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/reservations/{id}/note": {
      "get": {
        "tags": [
          "Reservations"
        ],
        "summary": "Gets reservation note.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Reservation id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Reservations"
        ],
        "summary": "Adds or updates reservation note.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Reservation id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Note.",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "type": "string"
              }
            },
            "application/octet-stream": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/salepresets/time": {
      "get": {
        "tags": [
          "SalePresets"
        ],
        "summary": "Get all time sale presets.",
        "description": "<b>Returns a list of time sale presets.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeSalePresetModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/TimeSalePresetModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SalePresets"
        ],
        "summary": "Create a time sale preset.",
        "requestBody": {
          "description": "Time sale preset.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeSalePresetModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeSalePresetModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TimeSalePresetModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/TimeSalePresetModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/TimeSalePresetModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SalePresets"
        ],
        "summary": "Update a time sale preset.",
        "requestBody": {
          "description": "Time sale preset.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeSalePresetModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeSalePresetModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TimeSalePresetModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/TimeSalePresetModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/TimeSalePresetModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/salepresets/time/{id}": {
      "get": {
        "tags": [
          "SalePresets"
        ],
        "summary": "Get a time sale preset by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Time sale preset id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeSalePresetModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/TimeSalePresetModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "SalePresets"
        ],
        "summary": "Delete a time sale preset.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Time sale preset id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/salepresets/money": {
      "get": {
        "tags": [
          "SalePresets"
        ],
        "summary": "Get all money sale presets.",
        "description": "<b>Returns a list of money sale presets.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoneySalePresetModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/MoneySalePresetModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SalePresets"
        ],
        "summary": "Create a money sale preset.",
        "requestBody": {
          "description": "Money sale preset.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoneySalePresetModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MoneySalePresetModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MoneySalePresetModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/MoneySalePresetModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/MoneySalePresetModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SalePresets"
        ],
        "summary": "Update a money sale preset.",
        "requestBody": {
          "description": "Money sale preset.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoneySalePresetModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MoneySalePresetModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MoneySalePresetModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/MoneySalePresetModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/MoneySalePresetModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/salepresets/money/{id}": {
      "get": {
        "tags": [
          "SalePresets"
        ],
        "summary": "Get a money sale preset by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Money sale preset id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoneySalePresetModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/MoneySalePresetModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "SalePresets"
        ],
        "summary": "Delete a money sale preset.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Money sale preset id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/schedules": {
      "get": {
        "tags": [
          "Schedules"
        ],
        "summary": "Gets filtered entries.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "enum": [
                0
              ],
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsDisabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/schedules/{id}": {
      "get": {
        "tags": [
          "Schedules"
        ],
        "summary": "Gets entry by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Schedules"
        ],
        "summary": "Deletes entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/schedules/{id}/enable": {
      "put": {
        "tags": [
          "Schedules"
        ],
        "summary": "Enables entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/schedules/{id}/disable": {
      "put": {
        "tags": [
          "Schedules"
        ],
        "summary": "Disables entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/schedules/{id}/name": {
      "put": {
        "tags": [
          "Schedules"
        ],
        "summary": "Sets entry name.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Entry name.",
          "content": {
            "application/json": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            },
            "application/octet-stream": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/schedules/name/{name}/exist": {
      "get": {
        "tags": [
          "Schedules"
        ],
        "summary": "Checks if entry exists with specified name.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Entry name.",
            "required": true,
            "schema": {
              "maxLength": 45,
              "minLength": 0,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/schedules/{id}/description": {
      "put": {
        "tags": [
          "Schedules"
        ],
        "summary": "Sets entry description.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Entry description.",
          "content": {
            "application/json": {
              "schema": {
                "maxLength": 255,
                "minLength": 0,
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "maxLength": 255,
                "minLength": 0,
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "maxLength": 255,
                "minLength": 0,
                "type": "string"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "maxLength": 255,
                "minLength": 0,
                "type": "string"
              }
            },
            "application/octet-stream": {
              "schema": {
                "maxLength": 255,
                "minLength": 0,
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/schedules/report": {
      "post": {
        "tags": [
          "Schedules"
        ],
        "summary": "Creates entry.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleReportCreateUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleReportCreateUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleReportCreateUpdateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleReportCreateUpdateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleReportCreateUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/schedules/report/{id}": {
      "put": {
        "tags": [
          "Schedules"
        ],
        "summary": "Updates entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Update model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleReportCreateUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleReportCreateUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleReportCreateUpdateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleReportCreateUpdateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleReportCreateUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/securityprofiles": {
      "get": {
        "tags": [
          "SecurityProfiles"
        ],
        "summary": "Gets filtered entries.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityProfileModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityProfileModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SecurityProfiles"
        ],
        "summary": "Creates entry.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityProfileModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityProfileModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityProfileModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/SecurityProfileModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/SecurityProfileModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SecurityProfiles"
        ],
        "summary": "Updates entry.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityProfileModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityProfileModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityProfileModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/SecurityProfileModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/SecurityProfileModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/securityprofiles/{id}": {
      "get": {
        "tags": [
          "SecurityProfiles"
        ],
        "summary": "Gets entry by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityProfileModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityProfileModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SecurityProfiles"
        ],
        "summary": "Deletes entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/securityprofiles/{id}/restrictions": {
      "get": {
        "tags": [
          "SecurityProfiles"
        ],
        "summary": "Gets security profile restrictions.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SecurityProfileRestrictionModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SecurityProfileRestrictionModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/securityprofiles/{id}/policies": {
      "get": {
        "tags": [
          "SecurityProfiles"
        ],
        "summary": "Gets security profile policies.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SecurityProfilePolicyModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SecurityProfilePolicyModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/securityprofiles/policies/metadata": {
      "get": {
        "tags": [
          "SecurityProfiles"
        ],
        "summary": "Gets supported group policies metadata.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityProfilePolicesMetadataModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityProfilePolicesMetadataModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/sessions": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "Get all sessions.",
        "description": "<b>Returns a list of sessions.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/shiftcounts": {
      "get": {
        "tags": [
          "ShiftCounts"
        ],
        "summary": "Gets shift counts.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ShiftId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftCountModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftCountModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/shiftcounts/{id}": {
      "get": {
        "tags": [
          "ShiftCounts"
        ],
        "summary": "Gets shift count.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Shift count id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftCountModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftCountModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/shifts": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Returns shifts.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "OperatorId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RegisterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/shifts/{id}": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Returns shifts.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Shift id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/shifts/{id}/end": {
      "put": {
        "tags": [
          "Shifts"
        ],
        "summary": "Ends shift.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Shift id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "End model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftEndModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftEndModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftEndModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ShiftEndModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ShiftEndModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/shifts/{id}/lock": {
      "put": {
        "tags": [
          "Shifts"
        ],
        "summary": "Locks shift.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Shift id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/shifts/{id}/unlock": {
      "put": {
        "tags": [
          "Shifts"
        ],
        "summary": "Unlocks shift.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Shift id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/shifts/{id}/expected": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Returns shift expected values.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Shift id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftExpectedModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftExpectedModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/skins": {
      "get": {
        "tags": [
          "Skins"
        ],
        "summary": "Get all skins.",
        "description": "<b>Returns a list of skins.</b>",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SkinModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SkinModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/smsproviders": {
      "get": {
        "tags": [
          "SmsProviders"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentProviderMetadataModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentProviderMetadataModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/smsproviders/{providerGuid}": {
      "get": {
        "tags": [
          "SmsProviders"
        ],
        "parameters": [
          {
            "name": "providerGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentProviderMetadataModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentProviderMetadataModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/smsproviders/{providerGuid}/options": {
      "get": {
        "tags": [
          "SmsProviders"
        ],
        "parameters": [
          {
            "name": "providerGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SmsProviders"
        ],
        "parameters": [
          {
            "name": "providerGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "application/x-msgpack": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "application/octet-stream": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/stock": {
      "get": {
        "tags": [
          "Stock"
        ],
        "summary": "Gets filtered entries.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1
              ],
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StockModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Stock"
        ],
        "summary": "Creates entry.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StockModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StockModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/StockModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/StockModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Stock"
        ],
        "summary": "Updates entry.",
        "requestBody": {
          "description": "Update model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StockModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StockModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/StockModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/StockModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/stock/{id}": {
      "get": {
        "tags": [
          "Stock"
        ],
        "summary": "Gets entry by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StockModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Stock"
        ],
        "summary": "Deletes entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/stock/{id}/undelete": {
      "put": {
        "tags": [
          "Stock"
        ],
        "summary": "Undeletes entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/stock/{id}/name": {
      "put": {
        "tags": [
          "Stock"
        ],
        "summary": "Sets entry name.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Entry name.",
          "content": {
            "application/json": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            },
            "application/octet-stream": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/stock/name/{name}/exist": {
      "get": {
        "tags": [
          "Stock"
        ],
        "summary": "Checks if entry exists with specified name.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Entry name.",
            "required": true,
            "schema": {
              "maxLength": 45,
              "minLength": 0,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/stock/name/{name}/branch/{branchId}/exist": {
      "get": {
        "tags": [
          "Stock"
        ],
        "summary": "Checks if entry exists with specified name.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Entry name.",
            "required": true,
            "schema": {
              "maxLength": 45,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "Branch id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/stockcount": {
      "get": {
        "tags": [
          "StockCount"
        ],
        "summary": "Gets filtered entries.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ShiftId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OperatorId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "HasUnexpected",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockCountModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StockCountModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "StockCount"
        ],
        "summary": "Creates entry.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockCountModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StockCountModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StockCountModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/StockCountModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/StockCountModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/stockcount/{id}": {
      "get": {
        "tags": [
          "StockCount"
        ],
        "summary": "Gets entry by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockCountModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StockCountModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/stockcount/{id}/entries": {
      "get": {
        "tags": [
          "StockCount"
        ],
        "summary": "Gets filtered entries.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockCountEntryModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StockCountEntryModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/stocktransactions": {
      "get": {
        "tags": [
          "StockTransactions"
        ],
        "summary": "Get all stock transactions.",
        "description": "<b>Returns a list of stock transactions.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "StockId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockTransactionModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StockTransactionModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "StockTransactions"
        ],
        "summary": "Creates stock transaction.",
        "requestBody": {
          "description": "Model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockTransactionModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StockTransactionModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StockTransactionModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/StockTransactionModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/StockTransactionModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/stocktransactions/{id}": {
      "get": {
        "tags": [
          "StockTransactions"
        ],
        "summary": "Get a stock transaction by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Stock transaction id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockTransactionModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StockTransactionModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/system/timezones": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Gets available time zones.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeZoneInfoModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeZoneInfoModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/system/timezones/local": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Gets local system time zone.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeZoneInfoModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/TimeZoneInfoModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Gets filtered entries.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1,
                4,
                5
              ],
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/TaskModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/tasks/{id}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Gets entry by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/TaskModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "summary": "Deletes entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/tasks/name/{name}/exist": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Checks if entry exists with specified name.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Entry name.",
            "required": true,
            "schema": {
              "maxLength": 45,
              "minLength": 0,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/tasks/{id}/{name}/name": {
      "put": {
        "tags": [
          "Tasks"
        ],
        "summary": "Sets entry name.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "Entry name.",
            "required": true,
            "schema": {
              "maxLength": 45,
              "minLength": 0,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/tasks/process": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Creates entry.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskProcessCreateUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskProcessCreateUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskProcessCreateUpdateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/TaskProcessCreateUpdateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/TaskProcessCreateUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/tasks/{id}/process": {
      "put": {
        "tags": [
          "Tasks"
        ],
        "summary": "Updates entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskProcessCreateUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskProcessCreateUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskProcessCreateUpdateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/TaskProcessCreateUpdateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/TaskProcessCreateUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/tasks/script": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Creates entry.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskScriptCreateUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskScriptCreateUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskScriptCreateUpdateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/TaskScriptCreateUpdateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/TaskScriptCreateUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/tasks/{id}/script": {
      "put": {
        "tags": [
          "Tasks"
        ],
        "summary": "Updates entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskScriptCreateUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskScriptCreateUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskScriptCreateUpdateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/TaskScriptCreateUpdateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/TaskScriptCreateUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/tasks/junction": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Creates entry.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskJunctionCreateUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskJunctionCreateUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskJunctionCreateUpdateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/TaskJunctionCreateUpdateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/TaskJunctionCreateUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/tasks/{id}/junction": {
      "put": {
        "tags": [
          "Tasks"
        ],
        "summary": "Updates entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskJunctionCreateUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskJunctionCreateUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskJunctionCreateUpdateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/TaskJunctionCreateUpdateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/TaskJunctionCreateUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/tasks/notification": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Creates entry.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskNotificationCreateUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskNotificationCreateUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskNotificationCreateUpdateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/TaskNotificationCreateUpdateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/TaskNotificationCreateUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/tasks/{id}/notification": {
      "put": {
        "tags": [
          "Tasks"
        ],
        "summary": "Updates entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskNotificationCreateUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskNotificationCreateUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskNotificationCreateUpdateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/TaskNotificationCreateUpdateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/TaskNotificationCreateUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/tasks/counters": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Gets filtered entries.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1,
                4,
                5
              ],
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskCountersModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/TaskCountersModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/taxes": {
      "get": {
        "tags": [
          "Taxes"
        ],
        "summary": "Get all taxes.",
        "description": "<b>Returns a list of taxes.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/TaxModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Taxes"
        ],
        "summary": "Create a tax.",
        "requestBody": {
          "description": "Tax.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaxModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/TaxModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/TaxModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Taxes"
        ],
        "summary": "Update a tax.",
        "requestBody": {
          "description": "Tax.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaxModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/TaxModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/TaxModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/taxes/{id}": {
      "get": {
        "tags": [
          "Taxes"
        ],
        "summary": "Get a tax by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tax id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/TaxModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "Taxes"
        ],
        "summary": "Delete a tax.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tax id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/timeproducts": {
      "get": {
        "tags": [
          "TimeProducts"
        ],
        "summary": "Get all time products.",
        "description": "<b>Returns a list of time products.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1,
                2,
                3,
                4
              ],
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeProductModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/TimeProductModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/timeproducts/{id}": {
      "delete": {
        "tags": [
          "TimeProducts"
        ],
        "summary": "Deletes time product purchase.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/tokens/{token}/{confirmationCode}/{tokenType}/valid": {
      "get": {
        "tags": [
          "Tokens"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confirmationCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tokenType",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                "0 = JWTRefresh",
                "1 = VerifyEmail",
                "2 = VerifyMobilePhone",
                "3 = CreateAccount",
                "4 = ResetPassword"
              ],
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/useragreements": {
      "get": {
        "tags": [
          "UserAgreements"
        ],
        "summary": "Get all user agreements.",
        "description": "<b>Returns a list of user agreements.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "IsEnabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAgreementModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserAgreementModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserAgreements"
        ],
        "summary": "Create a user agreement.",
        "requestBody": {
          "description": "User agreement.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAgreementModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAgreementModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserAgreementModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserAgreementModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserAgreementModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UserAgreements"
        ],
        "summary": "Update a user agreement.",
        "requestBody": {
          "description": "User agreement.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAgreementModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAgreementModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserAgreementModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserAgreementModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserAgreementModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/useragreements/{id}": {
      "get": {
        "tags": [
          "UserAgreements"
        ],
        "summary": "Get a user agreement by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User agreement id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAgreementModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserAgreementModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "UserAgreements"
        ],
        "summary": "Delete a user agreement.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User agreement id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/useragreements/{id}/resetstates": {
      "delete": {
        "tags": [
          "UserAgreements"
        ],
        "summary": "Reset the user states of a user agreement.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User agreement id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/usergroups": {
      "get": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Get all user groups.",
        "description": "<b>Returns a list of user groups.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "GroupName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Create a user group.",
        "requestBody": {
          "description": "User group.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Update a user group.",
        "requestBody": {
          "description": "User group.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/usergroups/{id}": {
      "get": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Get a user group by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Delete a user group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MoveToUserGroupId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupDeleteResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupDeleteResultModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/usergroups/{id}/disallowedhostgroups": {
      "get": {
        "tags": [
          "UserGroups"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGroupDisallowedHostGroupModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGroupDisallowedHostGroupModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserGroups"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupDisallowedHostGroupModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupDisallowedHostGroupModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupDisallowedHostGroupModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupDisallowedHostGroupModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupDisallowedHostGroupModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/usergroups/disallowedhostgroups": {
      "put": {
        "tags": [
          "UserGroups"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupDisallowedHostGroupModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupDisallowedHostGroupModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupDisallowedHostGroupModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupDisallowedHostGroupModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupDisallowedHostGroupModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/usergroups/{id}/disallowedhostgroups/{userGroupDisallowedHostGroupId}": {
      "delete": {
        "tags": [
          "UserGroups"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userGroupDisallowedHostGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/usergroups/{id}/setasdefault": {
      "put": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Set user group as default.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/userguests/virtual": {
      "get": {
        "tags": [
          "UserGuests"
        ],
        "summary": "Gets virtual guest users.",
        "parameters": [
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGuestVirtualResult"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGuestVirtualResult"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/userguests/reserve": {
      "post": {
        "tags": [
          "UserGuests"
        ],
        "summary": "Reserves an guest user.",
        "requestBody": {
          "description": "Reservation model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservedGuestModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservedGuestModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReservedGuestModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ReservedGuestModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ReservedGuestModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReserveGuestResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ReserveGuestResultModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/userguests/host/{hostId}/release": {
      "post": {
        "tags": [
          "UserGuests"
        ],
        "summary": "Attempts to release guest users on specified host.",
        "parameters": [
          {
            "name": "hostId",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReservedGuestReleaseModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReservedGuestReleaseModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/userguests/{userId}/release": {
      "post": {
        "tags": [
          "UserGuests"
        ],
        "summary": "Attempts to release guest users on specified host.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Guest user id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/userpermissionsets": {
      "get": {
        "tags": [
          "UserPermissionSets"
        ],
        "summary": "Gets filtered entries.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPermissionSetModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserPermissionSetModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserPermissionSets"
        ],
        "summary": "Creates entry.",
        "requestBody": {
          "description": "Create model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPermissionSetModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPermissionSetModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserPermissionSetModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserPermissionSetModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserPermissionSetModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UserPermissionSets"
        ],
        "summary": "Update entry.",
        "requestBody": {
          "description": "Update model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPermissionSetModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPermissionSetModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserPermissionSetModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserPermissionSetModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserPermissionSetModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/userpermissionsets/{id}": {
      "get": {
        "tags": [
          "UserPermissionSets"
        ],
        "summary": "Gets entry by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPermissionSetModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserPermissionSetModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UserPermissionSets"
        ],
        "summary": "Deletes entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/userpermissionsets/{id}/name": {
      "put": {
        "tags": [
          "UserPermissionSets"
        ],
        "summary": "Sets entry name.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Entry name.",
          "content": {
            "application/json": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            },
            "application/octet-stream": {
              "schema": {
                "maxLength": 45,
                "minLength": 0,
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/userpermissionsets/name/{name}/exist": {
      "get": {
        "tags": [
          "UserPermissionSets"
        ],
        "summary": "Checks if entry exists with specified name.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Entry name.",
            "required": true,
            "schema": {
              "maxLength": 45,
              "minLength": 0,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ExistResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/userpermissionsets/{id}/permissions": {
      "get": {
        "tags": [
          "UserPermissionSets"
        ],
        "summary": "Gets entry permissions.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPermissionModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPermissionModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UserPermissionSets"
        ],
        "summary": "Gets entry permissions.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Permission set.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserPermissionModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserPermissionModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserPermissionModel"
                }
              }
            },
            "application/x-msgpack": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserPermissionModel"
                }
              }
            },
            "application/octet-stream": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserPermissionModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/userpermissionsets/policies": {
      "get": {
        "tags": [
          "UserPermissionSets"
        ],
        "summary": "Gets policies metadata.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PoliciesMetadataModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PoliciesMetadataModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users.",
        "description": "<b>Returns a list of users.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "UserGroupId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Username",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmartCardUID",
            "in": "query",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "IsGuest",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsDisabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IsLoggedIn",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SearchValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a user.",
        "requestBody": {
          "description": "User.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update a user.",
        "requestBody": {
          "description": "User.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/search": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "User search.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "SearchValue",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSearchResultModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserSearchResultModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/users/{id}/undelete": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Undelete a user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v3.0/users/{id}/hard": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Hard delete a user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/hard": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Hard delete users by user ids.",
        "requestBody": {
          "description": "The model with UserIds to hard delete.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelHardDelete"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelHardDelete"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelHardDelete"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserModelHardDelete"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserModelHardDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelHardDelete"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelHardDelete"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{id}/attributes": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserAttributeModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserAttributeModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAttributeModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAttributeModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserAttributeModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserAttributeModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserAttributeModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/attributes": {
      "put": {
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAttributeModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAttributeModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserAttributeModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserAttributeModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserAttributeModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{id}/attributes/{userAttributeId}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userAttributeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{id}/notes/count": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserNoteCountModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserNoteCountModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{id}/notes": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserNoteModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserNoteModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserNoteModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserNoteModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserNoteModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserNoteModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserNoteModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{id}/notes/{userNoteId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userNoteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserNoteModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserNoteModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userNoteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/notes": {
      "put": {
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserNoteModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserNoteModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserNoteModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserNoteModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserNoteModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{id}/picture": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get the picture of the specified user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelPicture"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelPicture"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update the picture of the specified user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "User picture.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelPicture"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelPicture"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelPicture"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserModelPicture"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserModelPicture"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{id}/useragreements": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all user agreement that the specified user has accepted/rejected.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserAgreementModelState"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserAgreementModelState"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{id}/useragreements/{userAgreementId}/accept": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Specified user accepts the specified user agreement.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userAgreementId",
            "in": "path",
            "description": "User agreement id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{id}/useragreements/{userAgreementId}/reject": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Specified user rejects the specified user agreement.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userAgreementId",
            "in": "path",
            "description": "User agreement id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{id}/useragreements/pending": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all pending user agreements for the specified user.",
        "description": "<b>Returns a list of user agreements.</b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "IsEnabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAgreementModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserAgreementModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{username}/recoverymethods": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Gets user recovery methods.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Username.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRecoveryMethodGetResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserRecoveryMethodGetResultModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{id}/userusagetime": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "hostGroupId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserUsageTimeLevelModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserUsageTimeLevelModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{id}/usage/current": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Gets users active usage.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UsageModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/usage/current": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Gets users active usage.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCurrentUsageModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserCurrentUsageModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/balance": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Gets users balances.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/UserBalanceExtendedModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/UserBalanceExtendedModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{id}/balance": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Gets user balance.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "preferCache",
            "in": "query",
            "description": "Prefer cached balance value.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBalanceExtendedModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserBalanceExtendedModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{id}/hostgroup/{hostGroupId}/balance": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Gets user balance.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "hostGroupId",
            "in": "path",
            "description": "Host group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "preferCache",
            "in": "query",
            "description": "Prefer cached balance value.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBalanceExtendedModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserBalanceExtendedModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{userId}/login/{hostId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "hostId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginResultModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{userId}/login/{hostId}/slot/{slot}": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "hostId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginResultModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{userId}/logout": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLogoutResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserLogoutResultModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/counters": {
      "get": {
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersCountersModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UsersCountersModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{id}/counters": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCountersModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserCountersModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{id}/ban": {
      "put": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBanModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBanModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserBanModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserBanModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserBanModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{id}/address": {
      "put": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAddressModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAddressModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserAddressModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserAddressModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserAddressModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{id}/personalinformation": {
      "put": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPersonalInformationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPersonalInformationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserPersonalInformationModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserPersonalInformationModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserPersonalInformationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{id}/contactinformation": {
      "put": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserContactInformationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserContactInformationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserContactInformationModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserContactInformationModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserContactInformationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{id}/requestpersonalinfo": {
      "put": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{id}/resetpassword": {
      "put": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{id}/usergroup": {
      "put": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUserGroupModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUserGroupModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserUserGroupModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserUserGroupModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserUserGroupModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{userId}/asset/{assetId}/checkout": {
      "put": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/asset/{assetId}/checkin": {
      "put": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/users/{id}/stats": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get the stats of the specified user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserStatsModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserStatsModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/usersessions": {
      "get": {
        "tags": [
          "UserSessions"
        ],
        "summary": "Gets user sessions.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "HostId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "State",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1,
                2,
                5,
                9,
                17
              ],
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSessionModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserSessionModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/usersessions/{id}": {
      "get": {
        "tags": [
          "UserSessions"
        ],
        "summary": "Gets user sessions.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User session id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSessionModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserSessionModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/variables": {
      "get": {
        "tags": [
          "Variables"
        ],
        "summary": "Get all variables.",
        "description": "<b>Returns a list of variables.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VariableModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/VariableModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Variables"
        ],
        "summary": "Create a variable.",
        "requestBody": {
          "description": "Variable.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VariableModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VariableModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VariableModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/VariableModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/VariableModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Variables"
        ],
        "summary": "Update a variable.",
        "requestBody": {
          "description": "Variable.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VariableModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VariableModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VariableModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/VariableModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/VariableModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/variables/{id}": {
      "get": {
        "tags": [
          "Variables"
        ],
        "summary": "Get a variable by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Variable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VariableModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/VariableModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "Variables"
        ],
        "summary": "Delete a variable.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Variable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/user/v3.0/verifications/email/{emailAddress}": {
      "post": {
        "tags": [
          "Verifications"
        ],
        "summary": "Starts email verification for calling user.",
        "parameters": [
          {
            "name": "emailAddress",
            "in": "path",
            "description": "Email address.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationStartResultModelEmail"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationStartResultModelEmail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/v3.0/verifications/email/{token}/{confirmationCode}/complete": {
      "post": {
        "tags": [
          "Verifications"
        ],
        "summary": "Completes email verification.",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confirmationCode",
            "in": "path",
            "description": "Confirmation code.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "enum": [
                    "0 = Success",
                    "1 = Failure",
                    "101 = InvalidToken",
                    "102 = ExpiredToken",
                    "103 = RevokedToken",
                    "104 = UsedToken",
                    "105 = InvalidTokenInput",
                    "201 = InvalidVerification",
                    "202 = AlreadyVerified",
                    "301 = InvalidConfirmationCode",
                    "401 = PartialSuccess"
                  ],
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "enum": [
                    "0 = Success",
                    "1 = Failure",
                    "101 = InvalidToken",
                    "102 = ExpiredToken",
                    "103 = RevokedToken",
                    "104 = UsedToken",
                    "105 = InvalidTokenInput",
                    "201 = InvalidVerification",
                    "202 = AlreadyVerified",
                    "301 = InvalidConfirmationCode",
                    "401 = PartialSuccess"
                  ],
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/v3.0/verifications/mobilephone/{mobilePhoneNumber}": {
      "post": {
        "tags": [
          "Verifications"
        ],
        "summary": "Starts mobile phone verification for calling user.",
        "parameters": [
          {
            "name": "mobilePhoneNumber",
            "in": "path",
            "description": "Mobile phone.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationStartResultModelMobilePhone"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationStartResultModelMobilePhone"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/v3.0/verifications/mobilephone/{token}/{confirmationCode}/complete": {
      "post": {
        "tags": [
          "Verifications"
        ],
        "summary": "Completes mobile phone verification.",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confirmationCode",
            "in": "path",
            "description": "Confirmation code.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "enum": [
                    "0 = Success",
                    "1 = Failure",
                    "101 = InvalidToken",
                    "102 = ExpiredToken",
                    "103 = RevokedToken",
                    "104 = UsedToken",
                    "105 = InvalidTokenInput",
                    "201 = InvalidVerification",
                    "202 = AlreadyVerified",
                    "301 = InvalidConfirmationCode",
                    "401 = PartialSuccess"
                  ],
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "enum": [
                    "0 = Success",
                    "1 = Failure",
                    "101 = InvalidToken",
                    "102 = ExpiredToken",
                    "103 = RevokedToken",
                    "104 = UsedToken",
                    "105 = InvalidTokenInput",
                    "201 = InvalidVerification",
                    "202 = AlreadyVerified",
                    "301 = InvalidConfirmationCode",
                    "401 = PartialSuccess"
                  ],
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/verifications/email/{userId}/{emailAddress}": {
      "post": {
        "tags": [
          "Verifications"
        ],
        "summary": "Starts email verification.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "emailAddress",
            "in": "path",
            "description": "Email address.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationStartResultModelEmail"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationStartResultModelEmail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid userId specified."
          }
        }
      }
    },
    "/api/v3.0/verifications/email/{emailAddress}": {
      "post": {
        "tags": [
          "Verifications"
        ],
        "summary": "Starts email verification for calling user.",
        "parameters": [
          {
            "name": "emailAddress",
            "in": "path",
            "description": "Email address.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationStartResultModelEmail"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationStartResultModelEmail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/verifications/email/{token}/{confirmationCode}/complete": {
      "post": {
        "tags": [
          "Verifications"
        ],
        "summary": "Completes email verification.",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confirmationCode",
            "in": "path",
            "description": "Confirmation code.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "enum": [
                    "0 = Success",
                    "1 = Failure",
                    "101 = InvalidToken",
                    "102 = ExpiredToken",
                    "103 = RevokedToken",
                    "104 = UsedToken",
                    "105 = InvalidTokenInput",
                    "201 = InvalidVerification",
                    "202 = AlreadyVerified",
                    "301 = InvalidConfirmationCode",
                    "401 = PartialSuccess"
                  ],
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "enum": [
                    "0 = Success",
                    "1 = Failure",
                    "101 = InvalidToken",
                    "102 = ExpiredToken",
                    "103 = RevokedToken",
                    "104 = UsedToken",
                    "105 = InvalidTokenInput",
                    "201 = InvalidVerification",
                    "202 = AlreadyVerified",
                    "301 = InvalidConfirmationCode",
                    "401 = PartialSuccess"
                  ],
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/verifications/mobilephone/{userId}/{mobilePhoneNumber}": {
      "post": {
        "tags": [
          "Verifications"
        ],
        "summary": "Starts mobile phone verification.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "mobilePhoneNumber",
            "in": "path",
            "description": "Mobile phone.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationStartResultModelMobilePhone"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationStartResultModelMobilePhone"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid userId specified."
          }
        }
      }
    },
    "/api/v3.0/verifications/mobilephone/{mobilePhoneNumber}": {
      "post": {
        "tags": [
          "Verifications"
        ],
        "summary": "Starts mobile phone verification for calling user.",
        "parameters": [
          {
            "name": "mobilePhoneNumber",
            "in": "path",
            "description": "Mobile phone.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationStartResultModelMobilePhone"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationStartResultModelMobilePhone"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/verifications/mobilephone/{token}/{confirmationCode}/complete": {
      "post": {
        "tags": [
          "Verifications"
        ],
        "summary": "Completes mobile phone verification.",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confirmationCode",
            "in": "path",
            "description": "Confirmation code.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "enum": [
                    "0 = Success",
                    "1 = Failure",
                    "101 = InvalidToken",
                    "102 = ExpiredToken",
                    "103 = RevokedToken",
                    "104 = UsedToken",
                    "105 = InvalidTokenInput",
                    "201 = InvalidVerification",
                    "202 = AlreadyVerified",
                    "301 = InvalidConfirmationCode",
                    "401 = PartialSuccess"
                  ],
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "enum": [
                    "0 = Success",
                    "1 = Failure",
                    "101 = InvalidToken",
                    "102 = ExpiredToken",
                    "103 = RevokedToken",
                    "104 = UsedToken",
                    "105 = InvalidTokenInput",
                    "201 = InvalidVerification",
                    "202 = AlreadyVerified",
                    "301 = InvalidConfirmationCode",
                    "401 = PartialSuccess"
                  ],
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/waitinglines": {
      "get": {
        "tags": [
          "WaitingLines"
        ],
        "summary": "Gets waiting lines parameters.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaitingLineModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WaitingLineModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/waitinglines/hostgroups/{id}": {
      "get": {
        "tags": [
          "WaitingLines"
        ],
        "summary": "Gets waiting line parameters.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaitingLineModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WaitingLineModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WaitingLines"
        ],
        "summary": "Sets waiting line parameters.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaitingLineParametersModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WaitingLineParametersModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WaitingLineParametersModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/WaitingLineParametersModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/WaitingLineParametersModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/waitinglines/usergroups/priorities": {
      "get": {
        "tags": [
          "WaitingLines"
        ],
        "summary": "Gets user groups waiting line priorities.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WaitingLinePriorityModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WaitingLinePriorityModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WaitingLines"
        ],
        "summary": "Gets user groups waiting line priorities.",
        "requestBody": {
          "description": "User group priorities.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WaitingLinePriorityModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WaitingLinePriorityModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WaitingLinePriorityModel"
                }
              }
            },
            "application/x-msgpack": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WaitingLinePriorityModel"
                }
              }
            },
            "application/octet-stream": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WaitingLinePriorityModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/waitinglines/entries": {
      "get": {
        "tags": [
          "WaitingLines"
        ],
        "summary": "Gets waiting line entries.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "HostGroupId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "State",
            "in": "query",
            "schema": {
              "enum": [
                0,
                1,
                2
              ],
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaitingLineEntryModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WaitingLineEntryModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/waitinglines/entries/{entryId}": {
      "get": {
        "tags": [
          "WaitingLines"
        ],
        "summary": "Gets waiting line entry.",
        "parameters": [
          {
            "name": "entryId",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaitingLineEntryModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WaitingLineEntryModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/waitinglines/entries/active": {
      "get": {
        "tags": [
          "WaitingLines"
        ],
        "summary": "Gets waiting line entries.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "HostGroupId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaitingLineEntryActiveModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WaitingLineEntryActiveModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/waitinglines/entries/{entryId}/active": {
      "get": {
        "tags": [
          "WaitingLines"
        ],
        "summary": "Gets active waiting line entry.",
        "parameters": [
          {
            "name": "entryId",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaitingLineEntryActiveModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WaitingLineEntryActiveModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/waitinglines/entries/{entryId}/move": {
      "post": {
        "tags": [
          "WaitingLines"
        ],
        "summary": "Moves waiting line entry.",
        "parameters": [
          {
            "name": "entryId",
            "in": "path",
            "description": "Entry id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaitingLineMoveParametersModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WaitingLineMoveParametersModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WaitingLineMoveParametersModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/WaitingLineMoveParametersModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/WaitingLineMoveParametersModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/waitinglines/users/{userId}/hostgroups/{hostGroupId}": {
      "post": {
        "tags": [
          "WaitingLines"
        ],
        "summary": "Adds user to waiting line.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "hostGroupId",
            "in": "path",
            "description": "Waiting line host group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WaitingLines"
        ],
        "summary": "Removes user from waiting line.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "hostGroupId",
            "in": "path",
            "description": "Waiting line host group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.0/waitinglines/users/{userId}": {
      "post": {
        "tags": [
          "WaitingLines"
        ],
        "summary": "Adds user to all waiting lines.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WaitingLines"
        ],
        "summary": "Removes user from all waiting lines.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountTransactionDTOModel": {
        "type": "object",
        "properties": {
          "createdTime": {
            "type": "string",
            "format": "date-time"
          },
          "transactionType": {
            "enum": [
              "0 = Deposit",
              "1 = Withdraw",
              "2 = Charge",
              "3 = Credit"
            ],
            "type": "integer",
            "format": "int32"
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentMethodName": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isGuest": {
            "type": "boolean"
          },
          "isVoid": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ActiveOrderModel": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "hostId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "createdTime": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "enum": [
              "0 = OnHold",
              "1 = Processing",
              "2 = Invoiced"
            ],
            "type": "integer",
            "format": "int32"
          },
          "paymentStatus": {
            "enum": [
              "0 = Unpaid",
              "1 = PartiallyPaid",
              "2 = Paid"
            ],
            "type": "integer",
            "format": "int32"
          },
          "isDelivered": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ActiveOrderModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActiveOrderModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ActiveShiftModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "registerId": {
            "type": "integer",
            "format": "int32"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AgeRestrictionLoginModelCreate": {
        "required": [
          "ageFrom",
          "ageTo",
          "dayMinuteFrom",
          "dayMinuteTo"
        ],
        "type": "object",
        "properties": {
          "ageFrom": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "ageTo": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "dayMinuteFrom": {
            "maximum": 1440,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "dayMinuteTo": {
            "maximum": 1440,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AgeRestrictionModel": {
        "type": "object",
        "additionalProperties": false
      },
      "AgeRestrictionModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgeRestrictionModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AgeRestrictionProductModelCreate": {
        "required": [
          "ageFrom",
          "ageTo",
          "dayMinuteFrom",
          "dayMinuteTo"
        ],
        "type": "object",
        "properties": {
          "ageFrom": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "ageTo": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "dayMinuteFrom": {
            "maximum": 1440,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "dayMinuteTo": {
            "maximum": 1440,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AgeRestrictionsOptions": {
        "type": "object",
        "properties": {
          "requireAge": {
            "type": "boolean",
            "default": false
          },
          "isApplicationsEnabled": {
            "type": "boolean",
            "default": false
          },
          "isLoginEnabled": {
            "type": "boolean",
            "default": false
          },
          "isProductsEnabled": {
            "type": "boolean",
            "default": false
          }
        },
        "additionalProperties": false
      },
      "ApiKeyCreateModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "0 = Unrestricted",
              "1 = Restricted"
            ],
            "type": "integer",
            "format": "int32"
          },
          "expireTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiKeyCreateResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiKeyModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "0 = Unrestricted",
              "1 = Restricted"
            ],
            "type": "integer",
            "format": "int32"
          },
          "expireTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isDisabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApiKeyModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiKeyModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppStatCreateModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "hostId": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "span": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "AppStatModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "hostId": {
            "type": "integer",
            "format": "int32"
          },
          "appId": {
            "type": "integer",
            "format": "int32"
          },
          "appExeId": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "span": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "AppStatModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppStatModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationApplicationGroupModel": {
        "type": "object",
        "properties": {
          "applicationGroupId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationApplicationGroupsModelUpdate": {
        "type": "object",
        "properties": {
          "applicationGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationApplicationGroupModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationCategoryDeleteResultModel": {
        "type": "object",
        "properties": {
          "applicationCategoryDeleteResult": {
            "enum": [
              "0 = Success",
              "1 = Failed",
              "2 = NonEmpty"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationCategoryModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationCategoryModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationCategoryModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationCategoryModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationCategoryModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationDeleteOptionsModel": {
        "type": "object",
        "additionalProperties": false
      },
      "ApplicationDeleteResultModel": {
        "type": "object",
        "properties": {
          "applicationDeleteResult": {
            "enum": [
              "0 = Success"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationDeploymentModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "registryString": {
            "maxLength": 16777215,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "source": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "destination": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "comparisonMode": {
            "enum": [
              "0 = Fast",
              "1 = Standard",
              "2 = StandardNoAttributes",
              "3 = Thorough"
            ],
            "type": "integer",
            "format": "int32"
          },
          "deploymentOptions": {
            "$ref": "#/components/schemas/ApplicationDeploymentModelOptions"
          },
          "excludeFiles": {
            "type": "string",
            "nullable": true
          },
          "excludeDirectories": {
            "type": "string",
            "nullable": true
          },
          "includeFiles": {
            "type": "string",
            "nullable": true
          },
          "includeDirectories": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationDeploymentModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "registryString": {
            "maxLength": 16777215,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "source": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "destination": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "comparisonMode": {
            "enum": [
              "0 = Fast",
              "1 = Standard",
              "2 = StandardNoAttributes",
              "3 = Thorough"
            ],
            "type": "integer",
            "format": "int32"
          },
          "deploymentOptions": {
            "$ref": "#/components/schemas/ApplicationDeploymentModelOptions"
          },
          "excludeFiles": {
            "type": "string",
            "nullable": true
          },
          "excludeDirectories": {
            "type": "string",
            "nullable": true
          },
          "includeFiles": {
            "type": "string",
            "nullable": true
          },
          "includeDirectories": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationDeploymentModelOptions": {
        "type": "object",
        "properties": {
          "ignoreCleanup": {
            "type": "boolean"
          },
          "repairOnly": {
            "type": "boolean"
          },
          "directAccess": {
            "type": "boolean"
          },
          "mirror": {
            "type": "boolean"
          },
          "includeSubDirectories": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApplicationDeploymentModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationDeploymentModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationDeploymentModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "registryString": {
            "maxLength": 16777215,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "source": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "destination": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "comparisonMode": {
            "enum": [
              "0 = Fast",
              "1 = Standard",
              "2 = StandardNoAttributes",
              "3 = Thorough"
            ],
            "type": "integer",
            "format": "int32"
          },
          "deploymentOptions": {
            "$ref": "#/components/schemas/ApplicationDeploymentModelOptions"
          },
          "excludeFiles": {
            "type": "string",
            "nullable": true
          },
          "excludeDirectories": {
            "type": "string",
            "nullable": true
          },
          "includeFiles": {
            "type": "string",
            "nullable": true
          },
          "includeDirectories": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationDeploymentUsageModel": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "executableId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationEnterpriseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationEnterpriseModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationEnterpriseModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationEnterpriseModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationEnterpriseModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableAgeRatingModel": {
        "type": "object",
        "properties": {
          "executablePath": {
            "type": "string",
            "nullable": true
          },
          "ageRating": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableAgeRatingModelPagedListClassic": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationExecutableAgeRatingModel"
            },
            "nullable": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableCdImageModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "path": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mountOptions": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "deviceId": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "checkExitCode": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableCdImageModelCreate": {
        "type": "object",
        "properties": {
          "path": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mountOptions": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "deviceId": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "checkExitCode": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableCdImageModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "applicationExecutableId": {
            "type": "integer",
            "format": "int32"
          },
          "path": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mountOptions": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "deviceId": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "checkExitCode": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableDeploymentModel": {
        "type": "object",
        "properties": {
          "applicationExecutableId": {
            "type": "integer",
            "format": "int32"
          },
          "deploymentId": {
            "type": "integer",
            "format": "int32"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableDeploymentModelCreate": {
        "type": "object",
        "properties": {
          "deploymentId": {
            "type": "integer",
            "format": "int32"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableDeploymentModelUpdate": {
        "type": "object",
        "properties": {
          "applicationExecutableId": {
            "type": "integer",
            "format": "int32"
          },
          "deploymentId": {
            "type": "integer",
            "format": "int32"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableLicenseModel": {
        "type": "object",
        "properties": {
          "applicationExecutableId": {
            "type": "integer",
            "format": "int32"
          },
          "licenseId": {
            "type": "integer",
            "format": "int32"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableLicenseModelCreate": {
        "type": "object",
        "properties": {
          "licenseId": {
            "type": "integer",
            "format": "int32"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableLicenseModelUpdate": {
        "type": "object",
        "properties": {
          "applicationExecutableId": {
            "type": "integer",
            "format": "int32"
          },
          "licenseId": {
            "type": "integer",
            "format": "int32"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "accessible": {
            "type": "boolean"
          },
          "caption": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "applicationModes": {
            "$ref": "#/components/schemas/ApplicationModes"
          },
          "executablePath": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "workingDirectory": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "arguments": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "runMode": {
            "enum": [
              "0 = FullScreen",
              "1 = Minimized",
              "2 = Maximized",
              "3 = Hidden",
              "4 = Normal"
            ],
            "type": "integer",
            "format": "int32"
          },
          "reservationType": {
            "enum": [
              "0 = FirstAvailable",
              "1 = OneFromEach"
            ],
            "type": "integer",
            "format": "int32"
          },
          "executableOptions": {
            "$ref": "#/components/schemas/ApplicationExecutableModelOptions"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "defaultDeploymentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableModelCreate": {
        "type": "object",
        "properties": {
          "accessible": {
            "type": "boolean"
          },
          "caption": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "applicationModes": {
            "$ref": "#/components/schemas/ApplicationModes"
          },
          "executablePath": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "workingDirectory": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "arguments": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "runMode": {
            "enum": [
              "0 = FullScreen",
              "1 = Minimized",
              "2 = Maximized",
              "3 = Hidden",
              "4 = Normal"
            ],
            "type": "integer",
            "format": "int32"
          },
          "reservationType": {
            "enum": [
              "0 = FirstAvailable",
              "1 = OneFromEach"
            ],
            "type": "integer",
            "format": "int32"
          },
          "executableOptions": {
            "$ref": "#/components/schemas/ApplicationExecutableModelOptions"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "defaultDeploymentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableModelDuplicate": {
        "type": "object",
        "properties": {
          "newCaption": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableModelImage": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableModelOptions": {
        "type": "object",
        "properties": {
          "autoLaunch": {
            "type": "boolean"
          },
          "monitorChildren": {
            "type": "boolean"
          },
          "multiRun": {
            "type": "boolean"
          },
          "killChildren": {
            "type": "boolean"
          },
          "quickLaunch": {
            "type": "boolean"
          },
          "shellExecute": {
            "type": "boolean"
          },
          "ignoreConcurrentExecutionLimit": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationExecutableModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "accessible": {
            "type": "boolean"
          },
          "caption": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "applicationModes": {
            "$ref": "#/components/schemas/ApplicationModes"
          },
          "executablePath": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "workingDirectory": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "arguments": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "runMode": {
            "enum": [
              "0 = FullScreen",
              "1 = Minimized",
              "2 = Maximized",
              "3 = Hidden",
              "4 = Normal"
            ],
            "type": "integer",
            "format": "int32"
          },
          "reservationType": {
            "enum": [
              "0 = FirstAvailable",
              "1 = OneFromEach"
            ],
            "type": "integer",
            "format": "int32"
          },
          "executableOptions": {
            "$ref": "#/components/schemas/ApplicationExecutableModelOptions"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "defaultDeploymentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutablePersonalFileModel": {
        "type": "object",
        "properties": {
          "applicationExecutableId": {
            "type": "integer",
            "format": "int32"
          },
          "personalFileId": {
            "type": "integer",
            "format": "int32"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutablePersonalFileModelCreate": {
        "type": "object",
        "properties": {
          "personalFileId": {
            "type": "integer",
            "format": "int32"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutablePersonalFileModelUpdate": {
        "type": "object",
        "properties": {
          "applicationExecutableId": {
            "type": "integer",
            "format": "int32"
          },
          "personalFileId": {
            "type": "integer",
            "format": "int32"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationGroupApplicationModel": {
        "type": "object",
        "properties": {
          "applicationGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "applicationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationGroupApplicationModelCreate": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationGroupApplicationsModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationGroupApplicationModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationGroupApplicationsModelUpdate": {
        "type": "object",
        "properties": {
          "applicationGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationGroupApplicationModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationGroupModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationGroupModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationGroupModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationGroupModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationGroupModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationInfoDTOModel": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "uniqueUsers": {
            "type": "integer",
            "format": "int32"
          },
          "uniqueSessions": {
            "type": "integer",
            "format": "int32"
          },
          "totalExecutions": {
            "type": "integer",
            "format": "int32"
          },
          "totalSeconds": {
            "type": "number",
            "format": "double"
          },
          "totalTime": {
            "type": "string",
            "nullable": true
          },
          "totalExecutionsPercentage": {
            "type": "number",
            "format": "double"
          },
          "averageDailyExecutionTime": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationLicenseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "plugin": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "assembly": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationLicenseModelCreate": {
        "required": [
          "assembly",
          "name",
          "plugin"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "plugin": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "assembly": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ApplicationLicenseModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationLicenseModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationLicenseModelUpdate": {
        "required": [
          "assembly",
          "name",
          "plugin"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "plugin": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "assembly": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ApplicationLinkModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "caption": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "url": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationLinkModelCreate": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "caption": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "url": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationLinkModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationLinkModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationLinkModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "caption": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "url": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "applicationCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "developerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "publisherId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ageRating": {
            "type": "integer",
            "format": "int32"
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "defaultExecutableId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationModelCreate": {
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "applicationCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "developerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "publisherId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ageRating": {
            "type": "integer",
            "format": "int32"
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "defaultExecutableId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationModelDuplicate": {
        "type": "object",
        "properties": {
          "newTitle": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationModelImage": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "applicationCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "developerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "publisherId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ageRating": {
            "type": "integer",
            "format": "int32"
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "defaultExecutableId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationModes": {
        "type": "object",
        "properties": {
          "singlePlayer": {
            "type": "boolean"
          },
          "online": {
            "type": "boolean"
          },
          "multiplayer": {
            "type": "boolean"
          },
          "settings": {
            "type": "boolean"
          },
          "utility": {
            "type": "boolean"
          },
          "game": {
            "type": "boolean"
          },
          "application": {
            "type": "boolean"
          },
          "freeToPlay": {
            "type": "boolean"
          },
          "requiresSubscription": {
            "type": "boolean"
          },
          "freeTrial": {
            "type": "boolean"
          },
          "splitScreenMultiPlayer": {
            "type": "boolean"
          },
          "coOpLan": {
            "type": "boolean"
          },
          "coOpOnline": {
            "type": "boolean"
          },
          "oneTimePurchase": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApplicationPersonalFileModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "enum": [
              "0 = File",
              "1 = Registry"
            ],
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "caption": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "accessible": {
            "type": "boolean"
          },
          "source": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "activation": {
            "enum": [
              "0 = Launch",
              "1 = Login"
            ],
            "type": "integer",
            "format": "int32"
          },
          "maxQuota": {
            "type": "integer",
            "format": "int32"
          },
          "compressionLevel": {
            "type": "integer",
            "format": "int32"
          },
          "cleanUp": {
            "type": "boolean"
          },
          "store": {
            "type": "boolean"
          },
          "directoryOptions": {
            "$ref": "#/components/schemas/ApplicationPersonalFileModelDirectoryOptions"
          }
        },
        "additionalProperties": false
      },
      "ApplicationPersonalFileModelCreate": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "0 = File",
              "1 = Registry"
            ],
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "caption": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "accessible": {
            "type": "boolean"
          },
          "source": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "activation": {
            "enum": [
              "0 = Launch",
              "1 = Login"
            ],
            "type": "integer",
            "format": "int32"
          },
          "maxQuota": {
            "type": "integer",
            "format": "int32"
          },
          "compressionLevel": {
            "type": "integer",
            "format": "int32"
          },
          "cleanUp": {
            "type": "boolean"
          },
          "store": {
            "type": "boolean"
          },
          "directoryOptions": {
            "$ref": "#/components/schemas/ApplicationPersonalFileModelDirectoryOptions"
          }
        },
        "additionalProperties": false
      },
      "ApplicationPersonalFileModelDirectoryOptions": {
        "type": "object",
        "properties": {
          "includeSubDirectories": {
            "type": "boolean"
          },
          "excludeFiles": {
            "type": "string",
            "nullable": true
          },
          "excludeDirectories": {
            "type": "string",
            "nullable": true
          },
          "includeFiles": {
            "type": "string",
            "nullable": true
          },
          "includeDirectories": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationPersonalFileModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationPersonalFileModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationPersonalFileModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "enum": [
              "0 = File",
              "1 = Registry"
            ],
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "caption": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "accessible": {
            "type": "boolean"
          },
          "source": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "activation": {
            "enum": [
              "0 = Launch",
              "1 = Login"
            ],
            "type": "integer",
            "format": "int32"
          },
          "maxQuota": {
            "type": "integer",
            "format": "int32"
          },
          "compressionLevel": {
            "type": "integer",
            "format": "int32"
          },
          "cleanUp": {
            "type": "boolean"
          },
          "store": {
            "type": "boolean"
          },
          "directoryOptions": {
            "$ref": "#/components/schemas/ApplicationPersonalFileModelDirectoryOptions"
          }
        },
        "additionalProperties": false
      },
      "ApplicationPersonalFileUsageModel": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "executableId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationReportModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "application": {
            "$ref": "#/components/schemas/ApplicationInfoDTOModel"
          },
          "executables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExecutableExecutionSummaryDTOModel"
            },
            "nullable": true
          },
          "hoursPerUserGroupChart": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartGroupDTOModel"
            },
            "nullable": true
          },
          "hoursPerHostGroupChart": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartGroupDTOModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationTaskModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "taskType": {
            "enum": [
              "0 = Process",
              "1 = Script",
              "4 = Notification",
              "5 = Junction"
            ],
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "taskJunction": {
            "$ref": "#/components/schemas/ApplicationTaskModelJunction"
          },
          "taskNotification": {
            "$ref": "#/components/schemas/ApplicationTaskModelNotification"
          },
          "taskProcess": {
            "$ref": "#/components/schemas/ApplicationTaskModelProcess"
          },
          "taskScript": {
            "$ref": "#/components/schemas/ApplicationTaskModelScript"
          }
        },
        "additionalProperties": false
      },
      "ApplicationTaskModelCreate": {
        "type": "object",
        "properties": {
          "taskType": {
            "enum": [
              "0 = Process",
              "1 = Script",
              "4 = Notification",
              "5 = Junction"
            ],
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "taskJunction": {
            "$ref": "#/components/schemas/ApplicationTaskModelJunction"
          },
          "taskNotification": {
            "$ref": "#/components/schemas/ApplicationTaskModelNotification"
          },
          "taskProcess": {
            "$ref": "#/components/schemas/ApplicationTaskModelProcess"
          },
          "taskScript": {
            "$ref": "#/components/schemas/ApplicationTaskModelScript"
          }
        },
        "additionalProperties": false
      },
      "ApplicationTaskModelJunction": {
        "type": "object",
        "properties": {
          "sourceDirectory": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "destinationDirectory": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "deleteDestination": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApplicationTaskModelNotification": {
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "message": {
            "maxLength": 65536,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "wait": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApplicationTaskModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationTaskModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationTaskModelProcess": {
        "type": "object",
        "properties": {
          "fileName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "arguments": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "workingDirectory": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "username": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "password": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "wait": {
            "type": "boolean"
          },
          "noWindow": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApplicationTaskModelScript": {
        "type": "object",
        "properties": {
          "scriptType": {
            "enum": [
              "0 = Batch",
              "1 = VbScript",
              "2 = AutoItScript",
              "3 = RegistryScript"
            ],
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "maxLength": 65535,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "wait": {
            "type": "boolean"
          },
          "noWindow": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApplicationTaskModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "taskJunction": {
            "$ref": "#/components/schemas/ApplicationTaskModelJunction"
          },
          "taskNotification": {
            "$ref": "#/components/schemas/ApplicationTaskModelNotification"
          },
          "taskProcess": {
            "$ref": "#/components/schemas/ApplicationTaskModelProcess"
          },
          "taskScript": {
            "$ref": "#/components/schemas/ApplicationTaskModelScript"
          }
        },
        "additionalProperties": false
      },
      "ApplicationTaskUsageModel": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "executableId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationsReportModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationInfoDTOModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssetModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "assetTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "tag": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "smartCardUid": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "barcode": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "serialNumber": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AssetModelCreate": {
        "type": "object",
        "properties": {
          "assetTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "tag": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "smartCardUid": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "barcode": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "serialNumber": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AssetModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssetModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "assetTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "tag": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "smartCardUid": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "barcode": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "serialNumber": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AssetTransactionDTOModel": {
        "type": "object",
        "properties": {
          "assetType": {
            "type": "string",
            "nullable": true
          },
          "assetNumber": {
            "type": "integer",
            "format": "int32"
          },
          "assetName": {
            "type": "string",
            "nullable": true
          },
          "customer": {
            "type": "string",
            "nullable": true
          },
          "checkOutTime": {
            "type": "string",
            "format": "date-time"
          },
          "checkOutOperator": {
            "type": "string",
            "nullable": true
          },
          "checkInTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "checkInOperator": {
            "type": "string",
            "nullable": true
          },
          "leaseDuration": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssetTransactionModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "assetTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "assetId": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "checkInOperatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "checkInTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "checkOutOperatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assetTypeName": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AssetTransactionModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetTransactionModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssetTypeModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssetTypeModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssetTypeModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetTypeModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssetTypeModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssetsLogReportModel": {
        "type": "object",
        "properties": {
          "assetTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assetTypeName": {
            "type": "string",
            "nullable": true
          },
          "assetId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assetName": {
            "type": "string",
            "nullable": true
          },
          "checkOutOperatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "checkOutOperatorName": {
            "type": "string",
            "nullable": true
          },
          "checkInOperatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "checkInOperatorName": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "assetTransactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetTransactionDTOModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssistanceRequestModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "assistanceRequestTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hostId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "enum": [
              "0 = Pending",
              "1 = Accepted",
              "2 = Rejected",
              "3 = CanceledByUser"
            ],
            "type": "integer",
            "format": "int32"
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "createdTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AssistanceRequestModelCreate": {
        "required": [
          "assistanceRequestTypeId",
          "hostId"
        ],
        "type": "object",
        "properties": {
          "assistanceRequestTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hostId": {
            "type": "integer",
            "format": "int32"
          },
          "note": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssistanceRequestModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssistanceRequestModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssistanceRequestModelUserCreate": {
        "required": [
          "assistanceRequestTypeId"
        ],
        "type": "object",
        "properties": {
          "assistanceRequestTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "note": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssistanceRequestTypeModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AssistanceRequestTypeModelCreate": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AssistanceRequestTypeModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssistanceRequestTypeModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssistanceRequestTypeModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AttributeModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "friendlyName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttributeModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "friendlyName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttributeModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttributeModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "friendlyName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthTokenResultModel": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthenticationParametersModel": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AuthenticationResultModel": {
        "type": "object",
        "properties": {
          "result": {
            "enum": [
              "0 = Success",
              "1 = Unauthorized",
              "2 = NetworkError",
              "3 = Error"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AuthenticationStateModel": {
        "type": "object",
        "properties": {
          "state": {
            "enum": [
              "0 = Valid",
              "1 = NoToken",
              "2 = Invalid",
              "3 = Unauthorized",
              "4 = NetworkError",
              "5 = Error"
            ],
            "type": "integer",
            "format": "int32"
          },
          "claims": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClaimModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthorizationModel": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "0 = Undetermined",
              "1 = Trial",
              "2 = Normal"
            ],
            "type": "integer",
            "format": "int32"
          },
          "state": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "authorizedIdType": {
            "enum": [
              0,
              1
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "authorizedId": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "verificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isRecurring": {
            "type": "boolean",
            "nullable": true
          },
          "warnings": {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isLocal": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthorizationResultModel": {
        "type": "object",
        "properties": {
          "result": {
            "enum": [
              "0 = Success",
              "1 = Unauthorized",
              "2 = TokenExpired",
              "3 = InvalidId",
              "4 = NetworkError",
              "5 = Error"
            ],
            "type": "integer",
            "format": "int32"
          },
          "licenseState": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BillingProfileModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "defaultRate": {
            "$ref": "#/components/schemas/BillingProfileRateModel"
          },
          "rates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingProfileRateModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BillingProfileModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "defaultRate": {
            "$ref": "#/components/schemas/BillingProfileRateModel"
          }
        },
        "additionalProperties": false
      },
      "BillingProfileModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingProfileModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BillingProfileModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "defaultRate": {
            "$ref": "#/components/schemas/BillingProfileRateModel"
          }
        },
        "additionalProperties": false
      },
      "BillingProfileRateModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "startFee": {
            "type": "number",
            "format": "double"
          },
          "minimumFee": {
            "type": "number",
            "format": "double"
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "chargeEvery": {
            "type": "integer",
            "format": "int32"
          },
          "chargeAfter": {
            "type": "integer",
            "format": "int32"
          },
          "isStepBased": {
            "type": "boolean"
          },
          "rateSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingProfileRateModelStep"
            },
            "nullable": true
          },
          "days": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingProfileRateModelDay"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BillingProfileRateModelCreate": {
        "type": "object",
        "properties": {
          "startFee": {
            "type": "number",
            "format": "double"
          },
          "minimumFee": {
            "type": "number",
            "format": "double"
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "chargeEvery": {
            "type": "integer",
            "format": "int32"
          },
          "chargeAfter": {
            "type": "integer",
            "format": "int32"
          },
          "isStepBased": {
            "type": "boolean"
          },
          "rateSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingProfileRateModelStep"
            },
            "nullable": true
          },
          "days": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingProfileRateModelDay"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BillingProfileRateModelDay": {
        "type": "object",
        "properties": {
          "day": {
            "enum": [
              "0 = Sunday",
              "1 = Monday",
              "2 = Tuesday",
              "3 = Wednesday",
              "4 = Thursday",
              "5 = Friday",
              "6 = Saturday"
            ],
            "type": "integer",
            "format": "int32"
          },
          "dayTimesApplicable": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingProfileRateModelDayTime"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BillingProfileRateModelDayTime": {
        "type": "object",
        "properties": {
          "startSecond": {
            "type": "integer",
            "format": "int32"
          },
          "endSecond": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BillingProfileRateModelStep": {
        "type": "object",
        "properties": {
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "action": {
            "enum": [
              "0 = Charge",
              "1 = LoopTo"
            ],
            "type": "integer",
            "format": "int32"
          },
          "charge": {
            "type": "number",
            "format": "double"
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "targetMinute": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BillingProfileRateModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "startFee": {
            "type": "number",
            "format": "double"
          },
          "minimumFee": {
            "type": "number",
            "format": "double"
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "chargeEvery": {
            "type": "integer",
            "format": "int32"
          },
          "chargeAfter": {
            "type": "integer",
            "format": "int32"
          },
          "isStepBased": {
            "type": "boolean"
          },
          "rateSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingProfileRateModelStep"
            },
            "nullable": true
          },
          "days": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingProfileRateModelDay"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BranchCountersModel": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "endpoints": {
            "type": "integer",
            "format": "int32"
          },
          "computers": {
            "type": "integer",
            "format": "int32"
          },
          "controllers": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BranchModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "businessName": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "webSite": {
            "type": "string",
            "nullable": true
          },
          "info": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "hasBusinessSchedule": {
            "type": "boolean"
          },
          "businessStartWeekDay": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "businessEndWeekDay": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "businessDayStart": {
            "type": "string",
            "nullable": true
          },
          "businessDayEnd": {
            "type": "string",
            "nullable": true
          },
          "isFiscalizationEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "businessVATId": {
            "type": "string",
            "nullable": true
          },
          "taxSystem": {
            "enum": [
              0,
              1
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "goodsTaxSystem": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "servicesTaxSystem": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "treatDepositsAsService": {
            "type": "boolean",
            "nullable": true
          },
          "depositServiceDescription": {
            "type": "string",
            "nullable": true
          },
          "timeBasedServiceVATRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "depositVATRate": {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "depositAdvancePaymentType": {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "disableTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BranchModelCreate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 1,
            "type": "string"
          },
          "businessName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "address": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phone": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "region": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "webSite": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "info": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "hasBusinessSchedule": {
            "type": "boolean"
          },
          "businessStartWeekDay": {
            "maximum": 6,
            "minimum": 0,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "businessEndWeekDay": {
            "maximum": 6,
            "minimum": 0,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "businessDayStart": {
            "type": "string",
            "nullable": true
          },
          "businessDayEnd": {
            "type": "string",
            "nullable": true
          },
          "isFiscalizationEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "businessVATId": {
            "type": "string",
            "nullable": true
          },
          "taxSystem": {
            "enum": [
              0,
              1
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "goodsTaxSystem": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "servicesTaxSystem": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "treatDepositsAsService": {
            "type": "boolean",
            "nullable": true
          },
          "depositServiceDescription": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "timeBasedServiceVATRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "depositVATRate": {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "depositAdvancePaymentType": {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BranchModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BranchModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BranchModelUpdate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 1,
            "type": "string"
          },
          "businessName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "address": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phone": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "region": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "webSite": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "info": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "hasBusinessSchedule": {
            "type": "boolean"
          },
          "businessStartWeekDay": {
            "maximum": 6,
            "minimum": 0,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "businessEndWeekDay": {
            "maximum": 6,
            "minimum": 0,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "businessDayStart": {
            "type": "string",
            "nullable": true
          },
          "businessDayEnd": {
            "type": "string",
            "nullable": true
          },
          "isFiscalizationEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "businessVATId": {
            "type": "string",
            "nullable": true
          },
          "taxSystem": {
            "enum": [
              0,
              1
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "goodsTaxSystem": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "servicesTaxSystem": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "treatDepositsAsService": {
            "type": "boolean",
            "nullable": true
          },
          "depositServiceDescription": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "timeBasedServiceVATRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "depositVATRate": {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "depositAdvancePaymentType": {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BranchReferenceModel": {
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BranchReferenceModelUpdate": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Bundle": {
        "type": "object",
        "properties": {
          "selfStock": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BusinessOptions": {
        "type": "object",
        "properties": {
          "businessName": {
            "type": "string",
            "nullable": true
          },
          "businessDayStart": {
            "type": "string",
            "nullable": true
          },
          "businessDayEnd": {
            "type": "string",
            "nullable": true
          },
          "businessStartWeekDay": {
            "maximum": 6,
            "minimum": 0,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "businessEmail": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "businessWebSite": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "businessEndWeekDay": {
            "maximum": 6,
            "minimum": 0,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hasBusinessSchedule": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ChartGroupDTOModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "groupRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartRecordDTOModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChartRecordDTOModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ClaimModel": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClientGeneralOptions": {
        "type": "object",
        "properties": {
          "defaultCulture": {
            "type": "string",
            "default": "en-US",
            "nullable": true
          },
          "logoutAction": {
            "enum": [
              "0 = Reboot",
              "1 = ClosePrograms",
              "2 = TurnOff",
              "3 = LogOff",
              "4 = StandBy",
              "5 = AdminMode",
              "-1 = NoAction"
            ],
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "idlePowerSaving": {
            "enum": [
              "0 = Disabled",
              "1 = ShutDown",
              "2 = Sleep"
            ],
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "idlePowerSavingDelay": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "dataPath": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "managerPassword": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "isConcurrentExecutionLimitEnabled": {
            "type": "boolean",
            "default": false
          }
        },
        "additionalProperties": false
      },
      "ClientNetworkConnectionOptions": {
        "type": "object",
        "properties": {
          "registeredOnly": {
            "type": "boolean",
            "default": false
          },
          "autoDiscovery": {
            "type": "boolean",
            "default": false
          },
          "restoreHostName": {
            "type": "boolean",
            "default": false
          }
        },
        "additionalProperties": false
      },
      "ClientNotificationOptions": {
        "type": "object",
        "properties": {
          "remainingTimeNotificationMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClientOptionModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "clientOptionSkin": {
            "$ref": "#/components/schemas/ClientOptionSkinModel"
          },
          "customCSS": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ClientOptionModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "clientOptionSkin": {
            "$ref": "#/components/schemas/ClientOptionSkinModel"
          },
          "customCSS": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ClientOptionModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientOptionModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClientOptionModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "clientOptionSkin": {
            "$ref": "#/components/schemas/ClientOptionSkinModel"
          },
          "customCSS": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ClientOptionSkinImageModel": {
        "type": "object",
        "properties": {
          "imageType": {
            "enum": [
              "1 = Logo",
              "2 = LoginBackground",
              "3 = Background"
            ],
            "type": "integer",
            "format": "int32"
          },
          "imageName": {
            "type": "string",
            "nullable": true
          },
          "image": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClientOptionSkinModel": {
        "type": "object",
        "properties": {
          "loginBackground": {
            "type": "string",
            "nullable": true
          },
          "background": {
            "type": "string",
            "nullable": true
          },
          "logo": {
            "type": "string",
            "nullable": true
          },
          "disableAppDetails": {
            "type": "boolean"
          },
          "disableProductDetails": {
            "type": "boolean"
          },
          "homePageMaxItemsPerRow": {
            "type": "integer",
            "format": "int32"
          },
          "appsPageMaxItemsPerRow": {
            "type": "integer",
            "format": "int32"
          },
          "productsPageMaxItemsPerRow": {
            "type": "integer",
            "format": "int32"
          },
          "quickLaunchMaxItems": {
            "type": "integer",
            "format": "int32"
          },
          "disableUserLock": {
            "type": "boolean"
          },
          "disableUserPurchaseHistory": {
            "type": "boolean"
          },
          "styleSheet": {
            "type": "string",
            "nullable": true
          },
          "currencySymbol": {
            "type": "string",
            "nullable": true
          },
          "currencyDecimalDigits": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "currencyDecimalSeparator": {
            "type": "string",
            "nullable": true
          },
          "currencyGroupSeparator": {
            "type": "string",
            "nullable": true
          },
          "currencyGroupSizes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "currencyNegativePattern": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "currencyPositivePattern": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reservationsEnableLoginBlock": {
            "type": "boolean"
          },
          "reservationsLoginBlockTime": {
            "type": "integer",
            "format": "int32"
          },
          "reservationsEnableLoginUnblock": {
            "type": "boolean"
          },
          "reservationsLoginUnblockTime": {
            "type": "integer",
            "format": "int32"
          },
          "feedsDisabled": {
            "type": "boolean"
          },
          "feedsRotateEvery": {
            "type": "integer",
            "format": "int32"
          },
          "hostQRCodeEnabled": {
            "type": "boolean"
          },
          "hostQRCodeIsBase64": {
            "type": "boolean"
          },
          "loginRotatorEnabled": {
            "type": "boolean"
          },
          "loginRotatorPath": {
            "type": "string",
            "nullable": true
          },
          "loginRotatorRotateEvery": {
            "type": "integer",
            "format": "int32"
          },
          "maxPopularProducts": {
            "type": "integer",
            "format": "int32"
          },
          "maxPopularApplications": {
            "type": "integer",
            "format": "int32"
          },
          "userLoginDisabled": {
            "type": "boolean"
          },
          "userOnlineDepositDisabled": {
            "type": "boolean"
          },
          "userOnlineDepositMaximumAmount": {
            "type": "number",
            "format": "double"
          },
          "homeDisabled": {
            "type": "boolean"
          },
          "shopDisabled": {
            "type": "boolean"
          },
          "validationPasswordMinimumLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "validationPasswordMaximumLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "validationPasswordLowerCaseCharactersRequired": {
            "type": "boolean"
          },
          "validationPasswordUpperCaseCharactersRequired": {
            "type": "boolean"
          },
          "validationPasswordNumbersRequired": {
            "type": "boolean"
          },
          "integrationLocationId": {
            "type": "string",
            "nullable": true
          },
          "defaultSortingOption": {
            "enum": [
              "0 = Popularity",
              "1 = AddDate",
              "2 = Title",
              "3 = Use",
              "4 = Rating",
              "5 = ReleaseDate"
            ],
            "type": "integer",
            "format": "int32"
          },
          "assistanceRequestDisabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ClientTaskCreateModel": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "integer",
            "format": "int32"
          },
          "activation": {
            "enum": [
              "1 = Startup",
              "2 = Shutdown",
              "4 = Login",
              "8 = Logout"
            ],
            "type": "integer",
            "format": "int32"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ClientTaskModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "taskId": {
            "type": "integer",
            "format": "int32"
          },
          "activation": {
            "enum": [
              "1 = Startup",
              "2 = Shutdown",
              "4 = Login",
              "8 = Logout"
            ],
            "type": "integer",
            "format": "int32"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ClientTaskModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientTaskModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClientTaskUpdateModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "taskId": {
            "type": "integer",
            "format": "int32"
          },
          "activation": {
            "enum": [
              "1 = Startup",
              "2 = Shutdown",
              "4 = Login",
              "8 = Logout"
            ],
            "type": "integer",
            "format": "int32"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ClientUpdateOptions": {
        "type": "object",
        "properties": {
          "updateEnabled": {
            "type": "boolean",
            "default": true
          },
          "downGradeEnabled": {
            "type": "boolean",
            "default": false
          }
        },
        "additionalProperties": false
      },
      "CloseBalanceModel": {
        "type": "object",
        "properties": {
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentCreateModel"
            },
            "nullable": true
          },
          "invoices": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanionConnectionInfoModel": {
        "type": "object",
        "properties": {
          "connectionId": {
            "type": "string",
            "nullable": true
          },
          "remoteIpAddress": {
            "type": "string",
            "nullable": true
          },
          "localIpAddress": {
            "type": "string",
            "nullable": true
          },
          "remotePort": {
            "type": "integer",
            "format": "int32"
          },
          "localPort": {
            "type": "integer",
            "format": "int32"
          },
          "companionId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanionModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "CompanionModelCreate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CompanionModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanionModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanionModelUpdate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ConfirmationCodeOptions": {
        "type": "object",
        "properties": {
          "length": {
            "maximum": 12,
            "minimum": 6,
            "type": "integer",
            "format": "int32",
            "default": 6
          },
          "type": {
            "enum": [
              "1 = Numeric",
              "2 = UpperCaseCharacters",
              "3 = Alphanumeric"
            ],
            "type": "integer",
            "format": "int32",
            "default": 2
          }
        },
        "additionalProperties": false
      },
      "CreateResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CurrencyOptions": {
        "type": "object",
        "properties": {
          "currencyCode": {
            "maxLength": 3,
            "minLength": 3,
            "type": "string",
            "default": null,
            "nullable": true
          },
          "currencySymbol": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "currencyDecimalDigits": {
            "maximum": 4,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 2,
            "nullable": true
          },
          "currencyDecimalSeparator": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "currencyGroupSeparator": {
            "type": "string",
            "default": null,
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeleteResult": {
        "type": "object",
        "additionalProperties": false
      },
      "DeploymentOptions": {
        "type": "object",
        "properties": {
          "diskSpaceAllocation": {
            "enum": [
              "0 = Zero",
              "5 = Five",
              "10 = Ten",
              "15 = FifTeen",
              "20 = Twenty",
              "25 = TwentyFive",
              "30 = Thirty"
            ],
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        },
        "additionalProperties": false
      },
      "DepositRefundOptions": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "receiptOverride": {
            "type": "boolean"
          },
          "refundMethodId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DepositTransactionModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "balance": {
            "type": "number",
            "format": "double"
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "enum": [
              "0 = Deposit",
              "1 = Withdraw",
              "2 = Charge",
              "3 = Credit"
            ],
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isVoided": {
            "type": "boolean"
          },
          "voidDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isVoid": {
            "type": "boolean"
          },
          "depositPaymentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DepositTransactionModelCreate": {
        "type": "object",
        "properties": {
          "receiptOverride": {
            "type": "boolean"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "enum": [
              "0 = Deposit",
              "1 = Withdraw",
              "2 = Charge",
              "3 = Credit"
            ],
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DepositTransactionModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DepositTransactionModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeviceHostModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "hostId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DeviceHostModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceHostModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeviceModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "deviceType": {
            "enum": [
              "0 = HDMI"
            ],
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "hdmiDevice": {
            "$ref": "#/components/schemas/DeviceModelHdmi"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DeviceModelCreate": {
        "type": "object",
        "properties": {
          "deviceType": {
            "enum": [
              "0 = HDMI"
            ],
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "hdmiDevice": {
            "$ref": "#/components/schemas/DeviceModelHdmi"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DeviceModelHdmi": {
        "type": "object",
        "properties": {
          "uniqueId": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeviceModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeviceModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "hdmiDevice": {
            "$ref": "#/components/schemas/DeviceModelHdmi"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DiscountGroupDiscountModel": {
        "type": "object",
        "properties": {
          "discountId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DiscountGroupModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountGroupDiscountModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DiscountGroupModelCreate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountGroupDiscountModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DiscountGroupModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountGroupModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DiscountGroupModelUpdate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountGroupDiscountModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DiscountModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "applyType": {
            "enum": [
              "0 = OrderLine",
              "1 = Order"
            ],
            "type": "integer",
            "format": "int32"
          },
          "calculationType": {
            "enum": [
              "0 = Percentage",
              "1 = Fixed"
            ],
            "type": "integer",
            "format": "int32"
          },
          "rewardType": {
            "enum": [
              "0 = Discount",
              "1 = Bonus"
            ],
            "type": "integer",
            "format": "int32"
          },
          "requirement": {
            "enum": [
              "0 = All",
              "1 = Any"
            ],
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "period": {
            "$ref": "#/components/schemas/PeriodModel"
          }
        },
        "additionalProperties": false
      },
      "DiscountModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "applyType": {
            "enum": [
              "0 = OrderLine",
              "1 = Order"
            ],
            "type": "integer",
            "format": "int32"
          },
          "calculationType": {
            "enum": [
              "0 = Percentage",
              "1 = Fixed"
            ],
            "type": "integer",
            "format": "int32"
          },
          "rewardType": {
            "enum": [
              "0 = Discount",
              "1 = Bonus"
            ],
            "type": "integer",
            "format": "int32"
          },
          "requirement": {
            "enum": [
              "0 = All",
              "1 = Any"
            ],
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "period": {
            "$ref": "#/components/schemas/PeriodModel"
          }
        },
        "additionalProperties": false
      },
      "DiscountModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DiscountModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "applyType": {
            "enum": [
              "0 = OrderLine",
              "1 = Order"
            ],
            "type": "integer",
            "format": "int32"
          },
          "calculationType": {
            "enum": [
              "0 = Percentage",
              "1 = Fixed"
            ],
            "type": "integer",
            "format": "int32"
          },
          "rewardType": {
            "enum": [
              "0 = Discount",
              "1 = Bonus"
            ],
            "type": "integer",
            "format": "int32"
          },
          "requirement": {
            "enum": [
              "0 = All",
              "1 = Any"
            ],
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "period": {
            "$ref": "#/components/schemas/PeriodModel"
          }
        },
        "additionalProperties": false
      },
      "DocumentModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "documentTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "DocumentModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DocumentTypeCreateModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DocumentTypeModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DocumentTypeModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentTypeModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DocumentTypeUpdateModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DocumentUpdateModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "documentTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventGroupMetadata": {
        "type": "object",
        "properties": {
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventMetadata"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventMetadata": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "eventId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ExecutableExecutionSummaryDTOModel": {
        "type": "object",
        "properties": {
          "executableId": {
            "type": "integer",
            "format": "int32"
          },
          "executableName": {
            "type": "string",
            "nullable": true
          },
          "uniqueUsers": {
            "type": "integer",
            "format": "int32"
          },
          "totalExecutions": {
            "type": "integer",
            "format": "int32"
          },
          "totalSeconds": {
            "type": "number",
            "format": "double"
          },
          "totalTime": {
            "type": "string",
            "nullable": true
          },
          "averageDailyExecutionTime": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExecutableInfoDTOModel": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "executableId": {
            "type": "integer",
            "format": "int32"
          },
          "executableName": {
            "type": "string",
            "nullable": true
          },
          "totalSeconds": {
            "type": "number",
            "format": "double"
          },
          "totalTime": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExistResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FeedCreateModel": {
        "required": [
          "title",
          "url"
        ],
        "type": "object",
        "properties": {
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "maximum": {
            "type": "integer",
            "format": "int32"
          },
          "url": {
            "minLength": 1,
            "type": "string",
            "format": "uri"
          }
        },
        "additionalProperties": false
      },
      "FeedModel": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "maximum": {
            "type": "integer",
            "format": "int32"
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "FeedModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeedModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FeedUpdateModel": {
        "required": [
          "title",
          "url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "maximum": {
            "type": "integer",
            "format": "int32"
          },
          "url": {
            "minLength": 1,
            "type": "string",
            "format": "uri"
          }
        },
        "additionalProperties": false
      },
      "FileCreateResultModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "FinancialReportModel": {
        "type": "object",
        "properties": {
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "operatorName": {
            "type": "string",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerName": {
            "type": "string",
            "nullable": true
          },
          "financialReportType": {
            "enum": [
              "1 = Simple",
              "2 = GroupByUserGroup",
              "3 = Detailed"
            ],
            "type": "integer",
            "format": "int32"
          },
          "deposits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountTransactionDTOModel"
            },
            "nullable": true
          },
          "withdrawals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountTransactionDTOModel"
            },
            "nullable": true
          },
          "depositVoids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountTransactionDTOModel"
            },
            "nullable": true
          },
          "groupInvoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FinancialReportUserGroupInvoicesDTOModel"
            },
            "nullable": true
          },
          "groupVoidInvoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FinancialReportUserGroupInvoicesDTOModel"
            },
            "nullable": true
          },
          "depositsSummary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FinancialSummaryRecordDTOModel"
            },
            "nullable": true
          },
          "salesSummary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FinancialSummaryRecordDTOModel"
            },
            "nullable": true
          },
          "voidInvoicesPaidCash": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FinancialSummaryRecordDTOModel"
            },
            "nullable": true
          },
          "voidInvoicesNoRefundOrUnpaid": {
            "$ref": "#/components/schemas/FinancialSummaryRecordDTOModel"
          },
          "pastSalesPaymentsSummary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FinancialSummaryRecordDTOModel"
            },
            "nullable": true
          },
          "paymentMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListItemDTOModel"
            },
            "nullable": true
          },
          "registerTransactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegisterTransactionDTOModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FinancialReportUserGroupInvoicesDTOModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "fixedTimeProductsSold": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SoldProductDTOModel"
            },
            "nullable": true
          },
          "sessionTimeProductsSold": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SoldProductDTOModel"
            },
            "nullable": true
          },
          "timeOffersSold": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SoldProductDTOModel"
            },
            "nullable": true
          },
          "productsSold": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SoldProductDTOModel"
            },
            "nullable": true
          },
          "bundlesSold": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SoldProductDTOModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FinancialSummaryRecordDTOModel": {
        "type": "object",
        "properties": {
          "paymentMethodId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentMethodName": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "invoiceIsVoided": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FiscalizationOptions": {
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GeneralOptions": {
        "type": "object",
        "properties": {
          "defaultCulture": {
            "type": "string",
            "default": "en-US",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupProductSoldDTOModel": {
        "type": "object",
        "properties": {
          "sold": {
            "type": "number",
            "format": "double"
          },
          "returned": {
            "type": "number",
            "format": "double"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "pointsValue": {
            "type": "integer",
            "format": "int32"
          },
          "pointsAward": {
            "type": "integer",
            "format": "int32"
          },
          "tax": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "GroupSessionsEstimationModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "duration": {
            "type": "string",
            "nullable": true
          },
          "totalMinutes": {
            "type": "number",
            "format": "double"
          },
          "hoursPercentage": {
            "type": "number",
            "format": "double"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "estimatedRevenuePercentage": {
            "type": "number",
            "format": "double"
          },
          "subGroupSessionsEstimations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupSessionsEstimationModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupedProductSalesDTOModel": {
        "type": "object",
        "properties": {
          "sold": {
            "type": "number",
            "format": "double"
          },
          "returned": {
            "type": "number",
            "format": "double"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "pointsValue": {
            "type": "integer",
            "format": "int32"
          },
          "pointsAward": {
            "type": "integer",
            "format": "int32"
          },
          "tax": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostComputerConnectionStateModel": {
        "type": "object",
        "properties": {
          "hostId": {
            "type": "integer",
            "format": "int32"
          },
          "isConnected": {
            "type": "boolean"
          },
          "ipAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostComputerConnectionStateModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HostComputerConnectionStateModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostDeleteOptionsModel": {
        "type": "object",
        "additionalProperties": false
      },
      "HostDeleteResultModel": {
        "type": "object",
        "properties": {
          "hostDeleteResult": {
            "enum": [
              "0 = Success",
              "1 = HostInUse",
              "2 = HostHasReservedGuest",
              "3 = HostIsReserved"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HostGroupDeleteResultModel": {
        "type": "object",
        "properties": {
          "hostGroupDeleteResult": {
            "enum": [
              "0 = Success"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HostGroupModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "skinName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "applicationGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "securityProfileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "defaultGuestGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "billProfileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "clientOptionsId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostGroupModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "skinName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "applicationGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "securityProfileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "defaultGuestGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "billProfileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "clientOptionsId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostGroupModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HostGroupModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostGroupModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "skinName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "applicationGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "securityProfileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "defaultGuestGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "billProfileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "clientOptionsId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostGroupUsageInfoDTOModel": {
        "type": "object",
        "properties": {
          "hostGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "hostGroupName": {
            "type": "string",
            "nullable": true
          },
          "totalMinutesUsed": {
            "type": "integer",
            "format": "int64"
          },
          "totalHoursUsed": {
            "type": "string",
            "nullable": true
          },
          "totalMinutes": {
            "type": "integer",
            "format": "int64"
          },
          "totalEstimatedRevenue": {
            "type": "number",
            "format": "double"
          },
          "utilizationPercentage": {
            "type": "number",
            "format": "double"
          },
          "groupSessionsEstimations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupSessionsEstimationModel"
            },
            "nullable": true
          },
          "utilizationChart": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PeriodUtilizationChartRecordDTOModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostHostLayoutGroupModel": {
        "type": "object",
        "properties": {
          "hostLayoutGroupId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HostIconModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "image": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostIconModelCreate": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostIconModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HostIconModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostIconModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "image": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostLayoutCreateUpdateModel": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          },
          "row": {
            "type": "integer",
            "format": "int32"
          },
          "column": {
            "type": "integer",
            "format": "int32"
          },
          "isHidden": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "HostLayoutGridPositionCreateUpdateModel": {
        "type": "object",
        "properties": {
          "row": {
            "type": "integer",
            "format": "int32"
          },
          "column": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HostLayoutGridPositionModel": {
        "type": "object",
        "properties": {
          "hostId": {
            "type": "integer",
            "format": "int32"
          },
          "row": {
            "type": "integer",
            "format": "int32"
          },
          "column": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HostLayoutGroupModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "hostLayouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HostLayoutModel"
            },
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HostLayoutGroupModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HostLayoutGroupModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HostLayoutGroupModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostLayoutGroupModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HostLayoutModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "hostLayoutGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "hostId": {
            "type": "integer",
            "format": "int32"
          },
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "isHidden": {
            "type": "boolean"
          },
          "row": {
            "type": "integer",
            "format": "int32"
          },
          "column": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HostModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "hostType": {
            "enum": [
              "0 = Computer",
              "1 = Endpoint"
            ],
            "type": "integer",
            "format": "int32"
          },
          "hostGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isOutOfOrder": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "hostComputer": {
            "$ref": "#/components/schemas/HostModelComputer"
          },
          "hostEndpoint": {
            "$ref": "#/components/schemas/HostModelEndpoint"
          }
        },
        "additionalProperties": false
      },
      "HostModelComputer": {
        "type": "object",
        "properties": {
          "windowsName": {
            "type": "string",
            "nullable": true
          },
          "macAddress": {
            "type": "string",
            "nullable": true
          },
          "isSecure": {
            "type": "boolean"
          },
          "isInMaintenance": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "HostModelCreate": {
        "type": "object",
        "properties": {
          "hostType": {
            "enum": [
              "0 = Computer",
              "1 = Endpoint"
            ],
            "type": "integer",
            "format": "int32"
          },
          "hostGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isOutOfOrder": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "hostComputer": {
            "$ref": "#/components/schemas/HostModelComputer"
          },
          "hostEndpoint": {
            "$ref": "#/components/schemas/HostModelEndpoint"
          }
        },
        "additionalProperties": false
      },
      "HostModelEndpoint": {
        "type": "object",
        "properties": {
          "maximumUsers": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HostModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HostModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "hostGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isOutOfOrder": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "hostComputer": {
            "$ref": "#/components/schemas/HostModelComputer"
          },
          "hostEndpoint": {
            "$ref": "#/components/schemas/HostModelEndpoint"
          }
        },
        "additionalProperties": false
      },
      "HostNextReservationModel": {
        "type": "object",
        "properties": {
          "hostId": {
            "type": "integer",
            "format": "int32"
          },
          "nextReservationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "nextReservationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nextReservationDuration": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostNextReservationModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HostNextReservationModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostReservationModelCreate": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contactPhone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "format": "tel",
            "nullable": true
          },
          "contactEmail": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "hosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationHostModelCreate"
            },
            "nullable": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationUserModelCreate"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostUsageReportModel": {
        "type": "object",
        "properties": {
          "hostGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hostGroupName": {
            "type": "string",
            "nullable": true
          },
          "hostUsageReportType": {
            "enum": [
              "1 = Simple",
              "2 = GroupByUserGroup",
              "3 = Detailed"
            ],
            "type": "integer",
            "format": "int32"
          },
          "hostGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HostGroupUsageInfoDTOModel"
            },
            "nullable": true
          },
          "totalHoursUsed": {
            "type": "string",
            "nullable": true
          },
          "totalEstimatedRevenue": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "HostsLayoutGridPositionModel": {
        "type": "object",
        "properties": {
          "hosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HostLayoutGridPositionModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HttpsCertificateOptions": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              0,
              1
            ],
            "type": "integer",
            "format": "int32",
            "default": null,
            "nullable": true
          },
          "certificate": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "password": {
            "type": "string",
            "default": null,
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IOrderLineCreateModel": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "enum": [
              "0 = Product",
              "1 = FixedTime",
              "2 = Deposit"
            ],
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IReportModuleResultModel": {
        "type": "object",
        "properties": {
          "reportModel": {
            "nullable": true,
            "readOnly": true
          },
          "reportModelAdditional": {
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IReportPackModel": {
        "type": "object",
        "properties": {
          "reportModel": {
            "nullable": true,
            "readOnly": true
          },
          "reportModelAdditional": {
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "$ref": "#/components/schemas/ReportModuleExportMetadataModel"
          }
        },
        "additionalProperties": false
      },
      "InstanceIdModel": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "0 = HardwareId",
              "1 = InstanceId"
            ],
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InventoryAdjustmentEntryModelCreate": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "adjustmentReasonId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InventoryAdjustmentModelCreate": {
        "type": "object",
        "properties": {
          "stockId": {
            "type": "integer",
            "format": "int32"
          },
          "note": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "adjustmentType": {
            "enum": [
              "0 = WriteOff",
              "1 = SaleByPurchase",
              "2 = SaleByPrice"
            ],
            "type": "integer",
            "format": "int32"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryAdjustmentEntryModelCreate"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InventoryAdjustmentReasonModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "InventoryAdjustmentReasonModelCreate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InventoryAdjustmentReasonModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryAdjustmentReasonModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InventoryAdjustmentReasonModelUpdate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InventoryEntryModel": {
        "type": "object",
        "additionalProperties": false
      },
      "InventoryEntryModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryEntryModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InventoryInboundEntryModelCreate": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "unitCost": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "InventoryInboundModelCreate": {
        "type": "object",
        "properties": {
          "stockId": {
            "type": "integer",
            "format": "int32"
          },
          "note": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryInboundEntryModelCreate"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InventoryModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "stockId": {
            "type": "integer",
            "format": "int32"
          },
          "shiftId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InventoryModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InventoryTransferEntryModelCreate": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InventoryTransferInboundModelCreate": {
        "type": "object",
        "additionalProperties": false
      },
      "InventoryTransferModelCreate": {
        "type": "object",
        "properties": {
          "stockId": {
            "type": "integer",
            "format": "int32"
          },
          "transferStockId": {
            "type": "integer",
            "format": "int32"
          },
          "note": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryTransferEntryModelCreate"
            },
            "nullable": true
          },
          "autoTransfer": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "InvoiceDTOModel": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "createdTime": {
            "type": "string",
            "format": "date-time"
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "operatorName": {
            "type": "string",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerName": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderSource": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "tax": {
            "type": "number",
            "format": "double"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "pointsValue": {
            "type": "number",
            "format": "double"
          },
          "pointsAward": {
            "type": "integer",
            "format": "int32"
          },
          "outstanding": {
            "type": "number",
            "format": "double"
          },
          "isVoided": {
            "type": "boolean"
          },
          "refundedAmount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "InvoiceModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "orderId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "enum": [
              "0 = Unpaid",
              "1 = PartialyPaid",
              "2 = Paid"
            ],
            "type": "integer",
            "format": "int32"
          },
          "subTotal": {
            "type": "number",
            "format": "double"
          },
          "taxTotal": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "outstanding": {
            "type": "number",
            "format": "double"
          },
          "pointsTotal": {
            "type": "integer",
            "format": "int32"
          },
          "outstandingPoints": {
            "type": "integer",
            "format": "int32"
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isVoided": {
            "type": "boolean"
          },
          "invoiceLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceModelLine"
            },
            "nullable": true
          },
          "invoicePayments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoicePaymentModel"
            },
            "nullable": true
          },
          "invoiceRefunds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceModelRefund"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceModelLine": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "lineType": {
            "enum": [
              "0 = Product",
              "1 = TimeProduct",
              "2 = FixedTime",
              "3 = SessionTime",
              "4 = Deposit"
            ],
            "type": "integer",
            "format": "int32"
          },
          "payType": {
            "enum": [
              "0 = Cash",
              "1 = Points",
              "2 = Mixed"
            ],
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "taxRate": {
            "type": "number",
            "format": "double"
          },
          "preTaxTotal": {
            "type": "number",
            "format": "double"
          },
          "taxTotal": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "unitPointsPrice": {
            "type": "integer",
            "format": "int32"
          },
          "pointsTotal": {
            "type": "integer",
            "format": "int32"
          },
          "unitPointsAward": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pointsAwardTotal": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "cost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "product": {
            "$ref": "#/components/schemas/OrderLineProductModel"
          },
          "timeProduct": {
            "$ref": "#/components/schemas/OrderLineProductModel"
          },
          "bundleLineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceModelRefund": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "refundMethodId": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoicePaymentDTOModel": {
        "type": "object",
        "properties": {
          "createdTime": {
            "type": "string",
            "format": "date-time"
          },
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentMethodName": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "refundedAmount": {
            "type": "number",
            "format": "double"
          },
          "refundStatus": {
            "enum": [
              "0 = None",
              "1 = Partial",
              "2 = Full"
            ],
            "type": "integer",
            "format": "int32"
          },
          "refundMethodId": {
            "type": "integer",
            "format": "int32"
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "operatorName": {
            "type": "string",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerName": {
            "type": "string",
            "nullable": true
          },
          "shiftId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isGuest": {
            "type": "boolean"
          },
          "invoiceTotal": {
            "type": "number",
            "format": "double"
          },
          "invoiceOutstanding": {
            "type": "number",
            "format": "double"
          },
          "invoiceIsVoided": {
            "type": "boolean"
          },
          "voidCreatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "voidOperatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoicePaymentModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "amountReceived": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "InvoicePaymentModelCreate": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "amountReceived": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "InvoicePaymentModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoicePaymentModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceReportModel": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "invoice": {
            "$ref": "#/components/schemas/InvoiceDTOModel"
          },
          "soldProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SoldProductDTOModel"
            },
            "nullable": true
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoicePaymentDTOModel"
            },
            "nullable": true
          },
          "refunds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundDTOModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoicesLogReportModel": {
        "type": "object",
        "properties": {
          "paymentStatusType": {
            "enum": [
              1,
              2
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "voidedStatusType": {
            "enum": [
              1,
              2
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "operatorName": {
            "type": "string",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerName": {
            "type": "string",
            "nullable": true
          },
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceDTOModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoicingOptions": {
        "type": "object",
        "properties": {
          "autoInvoiceMember": {
            "type": "boolean",
            "default": false
          },
          "autoInvoiceMemberTime": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": false
          },
          "autoInvoicePaymentMember": {
            "type": "boolean",
            "default": false
          },
          "autoInvoiceGuest": {
            "type": "boolean",
            "default": false
          },
          "autoInvoiceGuestTime": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "autoInvoicePaymentGuest": {
            "type": "boolean",
            "default": false
          }
        },
        "additionalProperties": false
      },
      "LicenseInfoDTOModel": {
        "type": "object",
        "properties": {
          "licenseId": {
            "type": "integer",
            "format": "int32"
          },
          "licenseName": {
            "type": "string",
            "nullable": true
          },
          "numberOfActiveKeys": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfDisabledKeys": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfExecutables": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LicenseReportModel": {
        "type": "object",
        "properties": {
          "licenseId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "licenseName": {
            "type": "string",
            "nullable": true
          },
          "licenseUsage": {
            "$ref": "#/components/schemas/LicenseUsageInfoDTOModel"
          },
          "licenseTimeChart": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartRecordDTOModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LicenseUsageInfoDTOModel": {
        "type": "object",
        "properties": {
          "licenseInfo": {
            "$ref": "#/components/schemas/LicenseInfoDTOModel"
          },
          "totalRunTimeSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "totalRunTime": {
            "type": "string",
            "nullable": true
          },
          "lastUse": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "executables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExecutableInfoDTOModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LicensesReportModel": {
        "type": "object",
        "properties": {
          "licenseId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "licenseName": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "applicationName": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "licenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LicenseUsageInfoDTOModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListItemDTOModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LogExceptionModel": {
        "type": "object",
        "properties": {
          "exception": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LogModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "hostNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hostname": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "enum": [
              "0 = None",
              "1 = Generic",
              "2 = Network",
              "4 = Database",
              "8 = FileSystem",
              "16 = Task",
              "32 = Dispatcher",
              "64 = Command",
              "128 = Operation",
              "256 = UserInterface",
              "512 = Configuration",
              "1024 = Subscription",
              "2048 = Trace",
              "4096 = User"
            ],
            "type": "integer",
            "format": "int32"
          },
          "moduleType": {
            "enum": [
              "0 = Unknown",
              "1 = Manager",
              "2 = Client",
              "4 = Service",
              "8 = WebManager"
            ],
            "type": "integer",
            "format": "int32"
          },
          "moduleVersion": {
            "type": "string",
            "nullable": true
          },
          "messageType": {
            "enum": [
              "0 = None",
              "1 = Information",
              "2 = Warning",
              "4 = Error",
              "8 = Event"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LogModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ManagerFeaturesOptions": {
        "type": "object",
        "properties": {
          "salesModule": {
            "type": "boolean",
            "default": true
          },
          "reservationsModule": {
            "type": "boolean",
            "default": true
          },
          "usersModule": {
            "type": "boolean",
            "default": true
          }
        },
        "additionalProperties": false
      },
      "MappingModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "mountPoint": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MappingModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MappingModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MemberCountersDTOModel": {
        "type": "object",
        "properties": {
          "newMembers": {
            "type": "integer",
            "format": "int32"
          },
          "totalMembers": {
            "type": "integer",
            "format": "int32"
          },
          "bannedMembers": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MiscOptions": {
        "type": "object",
        "properties": {
          "executeBatchForComputers": {
            "type": "boolean",
            "default": false
          }
        },
        "additionalProperties": false
      },
      "MonetaryUnitModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MonetaryUnitModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MonetaryUnitModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MonetaryUnitModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MonetaryUnitModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MoneySalePresetModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "maximum": 1000000000000,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MoneySalePresetModelCreate": {
        "type": "object",
        "properties": {
          "value": {
            "maximum": 1000000000000,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MoneySalePresetModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MoneySalePresetModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MoneySalePresetModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "maximum": 1000000000000,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "NamedDecimalContainerDTOModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "NetworkDriveMappingCreateModel": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "nullable": true
          },
          "mountPoint": {
            "type": "string",
            "nullable": true
          },
          "useCredentials": {
            "type": "boolean"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NetworkDriveMappingUpdateModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "mountPoint": {
            "type": "string",
            "nullable": true
          },
          "useCredentials": {
            "type": "boolean"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NetworkOptions": {
        "required": [
          "hostName"
        ],
        "type": "object",
        "properties": {
          "httpProtocols": {
            "enum": [
              "0 = Http",
              "1 = Https",
              "2 = HttpHttps"
            ],
            "type": "integer",
            "format": "int32",
            "default": 2
          },
          "httpPort": {
            "maximum": 65535,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "httpsPort": {
            "maximum": 65535,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hostName": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "NewsCreateModel": {
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "url": {
            "maxLength": 255,
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "mediaUrl": {
            "maxLength": 255,
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "thumbnailUrl": {
            "maxLength": 255,
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "isCustomTemplate": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "NewsModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "isCustomTemplate": {
            "type": "boolean"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "mediaUrl": {
            "type": "string",
            "nullable": true
          },
          "thumbnailUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NewsModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewsModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NewsUpdateModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "url": {
            "maxLength": 255,
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "mediaUrl": {
            "maxLength": 255,
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "thumbnailUrl": {
            "maxLength": 255,
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "isCustomTemplate": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "NextHostReservationModel": {
        "type": "object",
        "properties": {
          "nextReservationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "nextReservationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nextReservationDuration": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationModel": {
        "type": "object",
        "additionalProperties": false
      },
      "NotificationModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationTimedRemainingModelCreate": {
        "type": "object",
        "properties": {
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "enum": [
              "0 = None",
              "1 = Visual",
              "2 = Audible",
              "3 = VisualAndAudible"
            ],
            "type": "integer",
            "format": "int32"
          },
          "focusType": {
            "enum": [
              "0 = None",
              "1 = MinimizeWindows"
            ],
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationTimedRemainingModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "enum": [
              "0 = None",
              "1 = Visual",
              "2 = Audible",
              "3 = VisualAndAudible"
            ],
            "type": "integer",
            "format": "int32"
          },
          "focusType": {
            "enum": [
              "0 = None",
              "1 = MinimizeWindows"
            ],
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationTimedReservationModelCreate": {
        "type": "object",
        "properties": {
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "enum": [
              "0 = None",
              "1 = Visual",
              "2 = Audible",
              "3 = VisualAndAudible"
            ],
            "type": "integer",
            "format": "int32"
          },
          "focusType": {
            "enum": [
              "0 = None",
              "1 = MinimizeWindows"
            ],
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationTimedReservationModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "enum": [
              "0 = None",
              "1 = Visual",
              "2 = Audible",
              "3 = VisualAndAudible"
            ],
            "type": "integer",
            "format": "int32"
          },
          "focusType": {
            "enum": [
              "0 = None",
              "1 = MinimizeWindows"
            ],
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OperatorModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "firstName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "address": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "country": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "sex": {
            "enum": [
              "0 = Unspecified",
              "1 = Male",
              "2 = Female"
            ],
            "type": "integer",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "smartCardUid": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "identification": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "shiftOptions": {
            "enum": [
              "0 = Disabled",
              "1 = Optional",
              "2 = Mandatory"
            ],
            "type": "integer",
            "format": "int32"
          },
          "permissionSetId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OperatorModelCreate": {
        "type": "object",
        "properties": {
          "password": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "username": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "firstName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "address": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "country": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "sex": {
            "enum": [
              "0 = Unspecified",
              "1 = Male",
              "2 = Female"
            ],
            "type": "integer",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "smartCardUid": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "identification": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "shiftOptions": {
            "enum": [
              "0 = Disabled",
              "1 = Optional",
              "2 = Mandatory"
            ],
            "type": "integer",
            "format": "int32"
          },
          "permissionSetId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OperatorModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OperatorModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OperatorModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "password": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "username": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "firstName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "address": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "country": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "sex": {
            "enum": [
              "0 = Unspecified",
              "1 = Male",
              "2 = Female"
            ],
            "type": "integer",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "smartCardUid": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "identification": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "shiftOptions": {
            "enum": [
              "0 = Disabled",
              "1 = Optional",
              "2 = Mandatory"
            ],
            "type": "integer",
            "format": "int32"
          },
          "permissionSetId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OperatorPasswordUpdateModel": {
        "required": [
          "password"
        ],
        "type": "object",
        "properties": {
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "OperatorTransactionDTOModel": {
        "type": "object",
        "properties": {
          "operatorName": {
            "type": "string",
            "nullable": true
          },
          "transactionDate": {
            "type": "string",
            "format": "date-time"
          },
          "invoiceDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "total": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentMethodName": {
            "type": "string",
            "nullable": true
          },
          "registerName": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderCreateModel": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userNote": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "orderLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IOrderLineCreateModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderDTOModel": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "integer",
            "format": "int32"
          },
          "createdTime": {
            "type": "string",
            "format": "date-time"
          },
          "orderSource": {
            "enum": [
              "0 = Default",
              "1 = Client",
              "2 = Web"
            ],
            "type": "integer",
            "format": "int32"
          },
          "orderStatus": {
            "enum": [
              "0 = OnHold",
              "1 = Completed",
              "2 = Canceled",
              "3 = Accepted",
              "4 = Processing"
            ],
            "type": "integer",
            "format": "int32"
          },
          "orderSourceLiteral": {
            "type": "string",
            "nullable": true
          },
          "orderStatusName": {
            "type": "string",
            "nullable": true
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "operatorName": {
            "type": "string",
            "nullable": true
          },
          "hostId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hostName": {
            "type": "string",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerName": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "deliveredTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deliverySeconds": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "deliveryTime": {
            "type": "string",
            "nullable": true
          },
          "itemNumber": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userNote": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderDeliveredStatusModel": {
        "type": "object",
        "properties": {
          "isDelivered": {
            "type": "boolean"
          },
          "deliveredTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderInvoiceCreateModel": {
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/OrderCreateModel"
          },
          "parameters": {
            "$ref": "#/components/schemas/OrderInvoicingParametersModel"
          }
        },
        "additionalProperties": false
      },
      "OrderInvoiceCreateMultiModel": {
        "type": "object",
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/OrderInvoicingParametersModel"
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderCreateModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderInvoiceCreateMultiResultModel": {
        "type": "object",
        "properties": {
          "orderResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderInvoiceCreateResultModel"
            },
            "nullable": true
          },
          "result": {
            "enum": [
              "0 = Success",
              "1 = OrdersFailed",
              "1 = EmptyOrder",
              "2 = MultiplePaymentsNotAllowed",
              "3 = PartialOrNonPaymentNotAllowed",
              "4 = InvalidPaymentsParameters",
              "5 = CustomPriceNotAllowed"
            ],
            "type": "integer",
            "format": "int32"
          },
          "invalidPayments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentCreateResultModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderInvoiceCreateResultModel": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "result": {
            "enum": [
              "0 = Success",
              "1 = Error",
              "2 = InvalidLines",
              "3 = InvalidUserId",
              "4 = NoGuestGroup",
              "5 = InvalidSourceHostId",
              "6 = PaymentExceedsOrderAmount",
              "7 = PartialOrNonPaymentNotAllowed",
              "8 = EmptyOrder",
              "9 = MultiplePaymentsNotAllowed",
              "10 = ErrorProcessing",
              "11 = InvalidPayments",
              "12 = InvalidPaymentsParameters"
            ],
            "type": "integer",
            "format": "int32"
          },
          "orderId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderStatus": {
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceStatus": {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invalidLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineCreateResultModel"
            },
            "nullable": true
          },
          "invalidPayments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentCreateResultModel"
            },
            "nullable": true
          },
          "resultReadable": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "OrderInvoiceModel": {
        "type": "object",
        "properties": {
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentCreateModel"
            },
            "nullable": true
          },
          "disableReceiptPrinting": {
            "type": "boolean"
          },
          "autoComplete": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "OrderInvoiceResultModel": {
        "type": "object",
        "additionalProperties": false
      },
      "OrderInvoicingParametersModel": {
        "type": "object",
        "properties": {
          "createInvoice": {
            "type": "boolean"
          },
          "preferredPaymentMethodId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentCreateModel"
            },
            "nullable": true
          },
          "hostId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "overrideHostId": {
            "type": "boolean"
          },
          "disableReceiptPrinting": {
            "type": "boolean"
          },
          "autoComplete": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "OrderLineCreateResultModel": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "result": {
            "enum": [
              "0 = Success",
              "1 = Error",
              "2 = PayTypeNotAllowed",
              "3 = PriceMissMatch",
              "4 = CustomPriceRestricted",
              "6 = UserGroupSaleRestricted",
              "7 = InvalidProductId",
              "8 = GuestSaleNotSupported",
              "9 = GuestSaleRestricted",
              "10 = InvalidQuantity",
              "11 = OutOfStock"
            ],
            "type": "integer",
            "format": "int32"
          },
          "resultReadable": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineDeliveredStatusModel": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "deliveredQuantity": {
            "type": "number",
            "format": "double"
          },
          "isDelivered": {
            "type": "boolean"
          },
          "deliveredTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "lineType": {
            "enum": [
              "0 = Product",
              "1 = TimeProduct",
              "2 = FixedTime",
              "3 = SessionTime",
              "4 = Deposit"
            ],
            "type": "integer",
            "format": "int32"
          },
          "payType": {
            "enum": [
              "0 = Cash",
              "1 = Points",
              "2 = Mixed"
            ],
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "taxRate": {
            "type": "number",
            "format": "double"
          },
          "preTaxTotal": {
            "type": "number",
            "format": "double"
          },
          "taxTotal": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "unitPointsPrice": {
            "type": "integer",
            "format": "int32"
          },
          "pointsTotal": {
            "type": "integer",
            "format": "int32"
          },
          "unitPointsAward": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pointsAwardTotal": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "cost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isDelivered": {
            "type": "boolean"
          },
          "deliveredQuantity": {
            "type": "number",
            "format": "double"
          },
          "bundleLineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "product": {
            "$ref": "#/components/schemas/OrderLineProductModel"
          },
          "timeProduct": {
            "$ref": "#/components/schemas/OrderLineProductModel"
          }
        },
        "additionalProperties": false
      },
      "OrderLineProductModel": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OrderModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "invoice": {
            "$ref": "#/components/schemas/InvoiceModel"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "hostId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "enum": [
              "0 = OnHold",
              "1 = Completed",
              "2 = Canceled",
              "3 = Accepted",
              "4 = Processing"
            ],
            "type": "integer",
            "format": "int32"
          },
          "userNote": {
            "type": "string",
            "nullable": true
          },
          "isDelivered": {
            "type": "boolean"
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "subTotal": {
            "type": "number",
            "format": "double"
          },
          "taxTotal": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "pointsTotal": {
            "type": "integer",
            "format": "int32"
          },
          "orderLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineModel"
            },
            "nullable": true
          },
          "preferredPaymentMethodId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderPaymentsCreateModel": {
        "type": "object",
        "properties": {
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentCreateModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderPaymentsCreateResult": {
        "type": "object",
        "properties": {
          "result": {
            "enum": [
              "0 = Success",
              "1 = PaymentsExceedsOrderAmount",
              "2 = PartialOrNonPaymentNotAllowed",
              "3 = InvalidPayments",
              "4 = AlreadyPaid",
              "5 = Voided",
              "6 = ErrorProcessing"
            ],
            "type": "integer",
            "format": "int32"
          },
          "invoiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceCreated": {
            "type": "boolean"
          },
          "invalidPayments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentCreateResultModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrdersLogReportModel": {
        "type": "object",
        "properties": {
          "orderSource": {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderStatus": {
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "operatorName": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDTOModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrdersStatisticsReportModel": {
        "type": "object",
        "properties": {
          "orderSource": {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderStatus": {
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "operatorName": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "operatorsPerformance": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartGroupDTOModel"
            },
            "nullable": true
          },
          "ordersChart": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartGroupDTOModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OverviewReportModel": {
        "type": "object",
        "properties": {
          "operatorsStatistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OverviewReportOperatorStatisticsDTOModel"
            },
            "nullable": true
          },
          "averageMemberUsagePeriodMinutes": {
            "type": "string",
            "nullable": true
          },
          "averageGuestUsagePeriodMinutes": {
            "type": "string",
            "nullable": true
          },
          "averageUtilizationPercentage": {
            "type": "number",
            "format": "double"
          },
          "uniqueMembersLogins": {
            "type": "integer",
            "format": "int32"
          },
          "uniqueGuestsLogins": {
            "type": "integer",
            "format": "int32"
          },
          "memberCounters": {
            "$ref": "#/components/schemas/MemberCountersDTOModel"
          },
          "utilizationChart": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PeriodUtilizationChartRecordDTOModel"
            },
            "nullable": true
          },
          "financialChart": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartRecordDTOModel"
            },
            "nullable": true
          },
          "totalPayInOut": {
            "type": "number",
            "format": "double"
          },
          "totalRevenue": {
            "type": "number",
            "format": "double"
          },
          "averageRevenuePerMember": {
            "type": "number",
            "format": "double"
          },
          "averageRevenuePerGuest": {
            "type": "number",
            "format": "double"
          },
          "revenuePerGroup": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NamedDecimalContainerDTOModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OverviewReportOperatorStatisticsDTOModel": {
        "type": "object",
        "properties": {
          "operatorId": {
            "type": "integer",
            "format": "int32"
          },
          "operatorName": {
            "type": "string",
            "nullable": true
          },
          "minutesWorked": {
            "type": "integer",
            "format": "int32"
          },
          "hoursWorked": {
            "type": "string",
            "nullable": true
          },
          "minutesSold": {
            "type": "number",
            "format": "double"
          },
          "hoursSold": {
            "type": "string",
            "nullable": true
          },
          "productsSold": {
            "type": "number",
            "format": "double"
          },
          "timeOffersSold": {
            "type": "number",
            "format": "double"
          },
          "bundlesSold": {
            "type": "number",
            "format": "double"
          },
          "voids": {
            "type": "integer",
            "format": "int32"
          },
          "registerTransactionsTotal": {
            "type": "number",
            "format": "double"
          },
          "revenue": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "POSAutomationOptions": {
        "type": "object",
        "properties": {
          "autoDelivery": {
            "type": "boolean",
            "default": true
          },
          "autoPrepare": {
            "type": "boolean",
            "default": true
          },
          "autoGuestLogin": {
            "type": "boolean",
            "default": false
          }
        },
        "additionalProperties": false
      },
      "PasswordRecoveryStartResultModelByEmail": {
        "type": "object",
        "properties": {
          "result": {
            "enum": [
              "0 = Success",
              "1 = Failed",
              "402 = InvalidInput",
              "406 = UserNotFound",
              "501 = DeliveryFailed",
              "502 = NoRouteForDelivery"
            ],
            "type": "integer",
            "format": "int32"
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "codeLength": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PasswordRecoveryStartResultModelByMobile": {
        "type": "object",
        "properties": {
          "result": {
            "enum": [
              "0 = Success",
              "1 = Failed",
              "402 = InvalidInput",
              "406 = UserNotFound",
              "501 = DeliveryFailed",
              "502 = NoRouteForDelivery"
            ],
            "type": "integer",
            "format": "int32"
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "codeLength": {
            "type": "integer",
            "format": "int32"
          },
          "mobilePhone": {
            "type": "string",
            "nullable": true
          },
          "deliveryMethod": {
            "enum": [
              "0 = Undetermined",
              "1 = SMS",
              "2 = FlashCall"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaymentCreateModel": {
        "type": "object",
        "properties": {
          "paymentMethodId": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "receivedAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentCreateResultModel": {
        "type": "object",
        "properties": {
          "paymentMethodId": {
            "type": "integer",
            "format": "int32"
          },
          "result": {
            "enum": [
              "0 = Success",
              "1 = InsufficientFunds",
              "2 = InvalidPaymentMethodId",
              "3 = InvalidPaymentAmount",
              "4 = InvalidReceivedAmount",
              "5 = PaymentMethodNotAllowed",
              "6 = NonUniquePaymentMethod"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaymentIntentCreateParametersDepositModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaymentIntentCreateResultModel": {
        "type": "object",
        "properties": {
          "paymentIntent": {
            "type": "string",
            "format": "uuid"
          },
          "paymentUrl": {
            "type": "string",
            "nullable": true
          },
          "qrImage": {
            "type": "string",
            "nullable": true
          },
          "nativeQrImage": {
            "type": "string",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PaymentIntentModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "state": {
            "enum": [
              "0 = Pending",
              "1 = Completed",
              "2 = Failed"
            ],
            "type": "integer",
            "format": "int32"
          },
          "transactionId": {
            "type": "string",
            "nullable": true
          },
          "transactionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PaymentIntentModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentIntentModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "availableInManager": {
            "type": "boolean"
          },
          "availableInClient": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "availableInPortal": {
            "type": "boolean"
          },
          "paymentProvider": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "paymentMethodOption": {
            "enum": [
              "0 = None",
              "1 = NonFiscal",
              "2 = IsCreditCard"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "availableInManager": {
            "type": "boolean"
          },
          "availableInClient": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "availableInPortal": {
            "type": "boolean"
          },
          "paymentProvider": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "paymentMethodOption": {
            "enum": [
              "0 = None",
              "1 = NonFiscal",
              "2 = IsCreditCard"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentMethodModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "availableInManager": {
            "type": "boolean"
          },
          "availableInClient": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "availableInPortal": {
            "type": "boolean"
          },
          "paymentProvider": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "paymentMethodOption": {
            "enum": [
              "0 = None",
              "1 = NonFiscal",
              "2 = IsCreditCard"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaymentProcessingOptions": {
        "type": "object",
        "properties": {
          "paymentSuccessUrl": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "format": "uri",
            "default": "https://www.gizmopowered.net/payment/success",
            "nullable": true
          },
          "paymentCancelUrl": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "format": "uri",
            "default": "https://www.gizmopowered.net/payment/failure",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentProviderMetadataModel": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "optionsType": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentTransactionModel": {
        "type": "object",
        "properties": {
          "shiftId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "enum": [
              "0 = InvoicePayment",
              "1 = DepositPayment",
              "2 = PayIn",
              "3 = InvoicePaymentRefund",
              "4 = DepositPaymentRefund",
              "5 = PayOut",
              "6 = Withdraw"
            ],
            "type": "integer",
            "format": "int32"
          },
          "hostId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "depositPaymentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentTransactionModelPagedListClassic": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentTransactionModel"
            },
            "nullable": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PeriodDayModel": {
        "type": "object",
        "properties": {
          "day": {
            "maximum": 6,
            "minimum": 0,
            "enum": [
              "0 = Sunday",
              "1 = Monday",
              "2 = Tuesday",
              "3 = Wednesday",
              "4 = Thursday",
              "5 = Friday",
              "6 = Saturday"
            ],
            "type": "integer",
            "format": "int32"
          },
          "dayTimes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PeriodDayTimeModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PeriodDayTimeModel": {
        "type": "object",
        "properties": {
          "startSecond": {
            "maximum": 86400,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "endSecond": {
            "maximum": 86400,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 86400
          }
        },
        "additionalProperties": false
      },
      "PeriodModel": {
        "type": "object",
        "properties": {
          "dateRange": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "timeRange": {
            "type": "boolean"
          },
          "days": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PeriodDayModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PeriodUtilizationChartRecordDTOModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "totalSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "usedSeconds": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PluginLibraryModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "availableInServer": {
            "type": "boolean"
          },
          "availableInClient": {
            "type": "boolean"
          },
          "availableInManager": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PluginLibraryModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PluginLibraryModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PluginLibraryModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "availableInServer": {
            "type": "boolean"
          },
          "availableInClient": {
            "type": "boolean"
          },
          "availableInManager": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PointTransactionModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "balance": {
            "type": "integer",
            "format": "int32"
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isVoided": {
            "type": "boolean"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "enum": [
              "0 = Award",
              "1 = Redeem",
              "2 = Set",
              "3 = Credit",
              "4 = Remove"
            ],
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PointTransactionModelCreate": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "enum": [
              "0 = Award",
              "1 = Redeem",
              "2 = Set",
              "3 = Credit",
              "4 = Remove"
            ],
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PointTransactionModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PointTransactionModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PoliciesMetadataModel": {
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyGroupMetadataModel"
            },
            "nullable": true
          },
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyMetadataModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PolicyGroupMetadataModel": {
        "type": "object",
        "properties": {
          "policyGroupName": {
            "type": "string",
            "nullable": true
          },
          "rootPolicyName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PolicyMetadataModel": {
        "type": "object",
        "properties": {
          "policyGroupName": {
            "type": "string",
            "nullable": true
          },
          "policyName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "operation": {
            "type": "string",
            "nullable": true
          },
          "resource": {
            "type": "string",
            "nullable": true
          },
          "dependencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PresetReservationTimeModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PresetReservationTimeModelCreate": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PresetReservationTimeModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PresetReservationTimeModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PresetTimeSaleModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PresetTimeSaleModelCreate": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PresetTimeSaleModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PresetTimeSaleModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PresetTimeSaleMoneyModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PresetTimeSaleMoneyModelCreate": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PresetTimeSaleMoneyModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PresetTimeSaleMoneyModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PresetTopUpModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PresetTopUpModelCreate": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PresetTopUpModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PresetTopUpModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductBundledModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "number",
            "format": "double"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ProductBundledModelCreate": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "number",
            "format": "double"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ProductBundledModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "number",
            "format": "double"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ProductBundledUserPriceModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "bundledProductId": {
            "type": "integer",
            "format": "int32"
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductBundledUserPriceModelCreate": {
        "type": "object",
        "properties": {
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductBundledUserPriceModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "bundledProductId": {
            "type": "integer",
            "format": "int32"
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductDisallowedUserGroupModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isDisallowed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductDisallowedUserGroupModelCreate": {
        "type": "object",
        "properties": {
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isDisallowed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductDisallowedUserGroupModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isDisallowed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductGroupDeleteResultModel": {
        "type": "object",
        "properties": {
          "productGroupDeleteResult": {
            "enum": [
              "0 = Success",
              "1 = Failed",
              "2 = NonEmpty"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProductGroupModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "sortOption": {
            "enum": [
              "0 = Default",
              "1 = Name",
              "2 = Created"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProductGroupModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "sortOption": {
            "enum": [
              "0 = Default",
              "1 = Name",
              "2 = Created"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProductGroupModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductGroupModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductGroupModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "sortOption": {
            "enum": [
              "0 = Default",
              "1 = Name",
              "2 = Created"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProductHiddenHostGroupModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "hostGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isHidden": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductHiddenHostGroupModelCreate": {
        "type": "object",
        "properties": {
          "hostGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isHidden": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductHiddenHostGroupModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "hostGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isHidden": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductImageModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "image": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductImageModelCreate": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductImageModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "image": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productType": {
            "enum": [
              "0 = Product",
              "1 = ProductTime",
              "2 = ProductBundle"
            ],
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "productTaxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductTaxModel"
            },
            "nullable": true
          },
          "productImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductImageModel"
            },
            "nullable": true
          },
          "productPurchaseAvailability": {
            "$ref": "#/components/schemas/ProductPurchaseAvailabilityModel"
          },
          "productGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 65535,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "cost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "disallowClientOrder": {
            "type": "boolean"
          },
          "restrictGuestSale": {
            "type": "boolean"
          },
          "restrictSale": {
            "type": "boolean"
          },
          "purchaseOptions": {
            "enum": [
              "0 = And",
              "1 = Or"
            ],
            "type": "integer",
            "format": "int32"
          },
          "points": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pointsPrice": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "barcode": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "enableStock": {
            "type": "boolean"
          },
          "disallowSaleIfOutOfStock": {
            "type": "boolean"
          },
          "stockAlert": {
            "type": "boolean"
          },
          "stockAlertThreshold": {
            "type": "number",
            "format": "double"
          },
          "stockTargetDifferentProduct": {
            "type": "boolean"
          },
          "stockTargetProductId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stockProductAmount": {
            "type": "number",
            "format": "double"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isService": {
            "type": "boolean"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "timeProduct": {
            "$ref": "#/components/schemas/ProductTime"
          },
          "bundle": {
            "$ref": "#/components/schemas/Bundle"
          },
          "createdTime": {
            "type": "string",
            "format": "date-time"
          },
          "isMarkedProduct": {
            "type": "boolean"
          },
          "isExcise": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductModelAvailabilityDay": {
        "type": "object",
        "properties": {
          "day": {
            "enum": [
              "0 = Sunday",
              "1 = Monday",
              "2 = Tuesday",
              "3 = Wednesday",
              "4 = Thursday",
              "5 = Friday",
              "6 = Saturday"
            ],
            "type": "integer",
            "format": "int32"
          },
          "dayTimesAvailable": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductModelAvailabilityDayTime"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductModelAvailabilityDayTime": {
        "type": "object",
        "properties": {
          "startSecond": {
            "type": "integer",
            "format": "int32"
          },
          "endSecond": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProductModelCreate": {
        "type": "object",
        "properties": {
          "productType": {
            "enum": [
              "0 = Product",
              "1 = ProductTime",
              "2 = ProductBundle"
            ],
            "type": "integer",
            "format": "int32"
          },
          "productGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 65535,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "cost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "disallowClientOrder": {
            "type": "boolean"
          },
          "restrictGuestSale": {
            "type": "boolean"
          },
          "restrictSale": {
            "type": "boolean"
          },
          "purchaseOptions": {
            "enum": [
              "0 = And",
              "1 = Or"
            ],
            "type": "integer",
            "format": "int32"
          },
          "points": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pointsPrice": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "barcode": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "enableStock": {
            "type": "boolean"
          },
          "disallowSaleIfOutOfStock": {
            "type": "boolean"
          },
          "stockAlert": {
            "type": "boolean"
          },
          "stockAlertThreshold": {
            "type": "number",
            "format": "double"
          },
          "stockTargetDifferentProduct": {
            "type": "boolean"
          },
          "stockTargetProductId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stockProductAmount": {
            "type": "number",
            "format": "double"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isService": {
            "type": "boolean"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "timeProduct": {
            "$ref": "#/components/schemas/ProductTime"
          },
          "bundle": {
            "$ref": "#/components/schemas/Bundle"
          },
          "isMarkedProduct": {
            "type": "boolean"
          },
          "isExcise": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 65535,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "cost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "disallowClientOrder": {
            "type": "boolean"
          },
          "restrictGuestSale": {
            "type": "boolean"
          },
          "restrictSale": {
            "type": "boolean"
          },
          "purchaseOptions": {
            "enum": [
              "0 = And",
              "1 = Or"
            ],
            "type": "integer",
            "format": "int32"
          },
          "points": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pointsPrice": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "barcode": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "enableStock": {
            "type": "boolean"
          },
          "disallowSaleIfOutOfStock": {
            "type": "boolean"
          },
          "stockAlert": {
            "type": "boolean"
          },
          "stockAlertThreshold": {
            "type": "number",
            "format": "double"
          },
          "stockTargetDifferentProduct": {
            "type": "boolean"
          },
          "stockTargetProductId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stockProductAmount": {
            "type": "number",
            "format": "double"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isService": {
            "type": "boolean"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "timeProduct": {
            "$ref": "#/components/schemas/ProductTime"
          },
          "bundle": {
            "$ref": "#/components/schemas/Bundle"
          },
          "isMarkedProduct": {
            "type": "boolean"
          },
          "isExcise": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductPriceRequestResponseModel": {
        "type": "object",
        "properties": {
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "totalPrice": {
            "type": "number",
            "format": "double"
          },
          "unitPointsPrice": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalPointsPrice": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "purchaseOptions": {
            "enum": [
              "0 = And",
              "1 = Or"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProductPurchaseAvailabilityModel": {
        "type": "object",
        "properties": {
          "dateRange": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "timeRange": {
            "type": "boolean"
          },
          "daysAvailable": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductModelAvailabilityDay"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductReportModel": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "userGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserGroupProductsSoldDTOModel"
            },
            "nullable": true
          },
          "salesChart": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartRecordDTOModel"
            },
            "nullable": true
          },
          "salesChartPerDay": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartRecordDTOModel"
            },
            "nullable": true
          },
          "salesChartPerHour": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartRecordDTOModel"
            },
            "nullable": true
          },
          "stockChartMin": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartRecordDTOModel"
            },
            "nullable": true
          },
          "stockChartMax": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartRecordDTOModel"
            },
            "nullable": true
          },
          "timeUsageChart": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeUsageChartRecordDTOModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductStockDTOModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "initial": {
            "type": "number",
            "format": "double"
          },
          "added": {
            "type": "number",
            "format": "double"
          },
          "removed": {
            "type": "number",
            "format": "double"
          },
          "set": {
            "type": "number",
            "format": "double"
          },
          "sold": {
            "type": "number",
            "format": "double"
          },
          "returned": {
            "type": "number",
            "format": "double"
          },
          "final": {
            "type": "number",
            "format": "double"
          },
          "diff": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ProductStockModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "onHand": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "alertLevelReached": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductStockModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductStockModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductStockTransactionCreateModel": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "0 = Add",
              "1 = Remove",
              "2 = Sale",
              "3 = Set",
              "4 = Return"
            ],
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "stockId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProductTaxModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "taxId": {
            "type": "integer",
            "format": "int32"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductTime": {
        "type": "object",
        "properties": {
          "minutes": {
            "type": "integer",
            "format": "int32"
          },
          "expiresAtLogout": {
            "type": "boolean"
          },
          "expireAtDayTime": {
            "type": "boolean"
          },
          "expireAtDayTimeMinute": {
            "type": "integer",
            "format": "int32"
          },
          "expireAfterTime": {
            "type": "boolean"
          },
          "expireAfterType": {
            "enum": [
              "0 = Day",
              "1 = Hour",
              "2 = Minute"
            ],
            "type": "integer",
            "format": "int32"
          },
          "expiresAfter": {
            "type": "integer",
            "format": "int32"
          },
          "expiresFrom": {
            "enum": [
              "0 = Purchase",
              "1 = Use"
            ],
            "type": "integer",
            "format": "int32"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProductTimeDisallowedHostGroupModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "timeProductId": {
            "type": "integer",
            "format": "int32"
          },
          "hostGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isDisallowed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductTimeDisallowedHostGroupModelCreate": {
        "type": "object",
        "properties": {
          "hostGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isDisallowed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductTimeDisallowedHostGroupModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "timeProductId": {
            "type": "integer",
            "format": "int32"
          },
          "hostGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isDisallowed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductTimeUsageAvailabilityModel": {
        "type": "object",
        "properties": {
          "dateRange": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "timeRange": {
            "type": "boolean"
          },
          "daysAvailable": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductModelAvailabilityDay"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductTransactionDTOModel": {
        "type": "object",
        "properties": {
          "transactionDate": {
            "type": "string",
            "format": "date-time"
          },
          "productTransactionType": {
            "enum": [
              "1 = Set",
              "2 = Sell",
              "3 = Return"
            ],
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "operatorName": {
            "type": "string",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerName": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductUserPriceModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "pointsPrice": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "purchaseOptions": {
            "enum": [
              "0 = And",
              "1 = Or"
            ],
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductUserPriceModelCreate": {
        "type": "object",
        "properties": {
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "pointsPrice": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "purchaseOptions": {
            "enum": [
              "0 = And",
              "1 = Or"
            ],
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductUserPriceModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "pointsPrice": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "purchaseOptions": {
            "enum": [
              "0 = And",
              "1 = Or"
            ],
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductsLogReportModel": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "operatorName": {
            "type": "string",
            "nullable": true
          },
          "productTransactionType": {
            "enum": [
              1,
              2,
              3
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productTransactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductTransactionDTOModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductsReportModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedProductSalesDTOModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefundDTOModel": {
        "type": "object",
        "properties": {
          "createdTime": {
            "type": "string",
            "format": "date-time"
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "operatorName": {
            "type": "string",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerName": {
            "type": "string",
            "nullable": true
          },
          "refundMethodId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "refundMethodName": {
            "type": "string",
            "nullable": true
          },
          "refundedAmount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "RefundOptions": {
        "type": "object",
        "properties": {
          "refundMethodId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegionalOptions": {
        "type": "object",
        "properties": {
          "countryCode": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "startCash": {
            "maximum": 1000000000000,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "idleTimeout": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paymentTerminalNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fiscalReceiptPrinterNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stockId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "companionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RegisterModelCreate": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "startCash": {
            "maximum": 1000000000000,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "idleTimeout": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paymentTerminalNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fiscalReceiptPrinterNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stockId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RegisterModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegisterModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "startCash": {
            "maximum": 1000000000000,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "idleTimeout": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paymentTerminalNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fiscalReceiptPrinterNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stockId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RegisterTransactionDTOModel": {
        "type": "object",
        "properties": {
          "createdTime": {
            "type": "string",
            "format": "date-time"
          },
          "transactionType": {
            "enum": [
              "1 = PayIn",
              "2 = PayOut"
            ],
            "type": "integer",
            "format": "int32"
          },
          "paymentMethodName": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterTransactionModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "enum": [
              "1 = PayIn",
              "2 = PayOut"
            ],
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterTransactionModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegisterTransactionModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RemoteControlSessionCreateResultModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "accessKey": {
            "type": "string",
            "nullable": true
          },
          "desktopUrl": {
            "type": "string",
            "nullable": true
          },
          "viewerUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportModuleExportFilterMetadataModel": {
        "type": "object",
        "properties": {
          "filterName": {
            "type": "string",
            "nullable": true
          },
          "filterValues": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportModuleExportMetadataModel": {
        "type": "object",
        "properties": {
          "reportPresetId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dateFrom": {
            "type": "string",
            "format": "date-time"
          },
          "dateTo": {
            "type": "string",
            "format": "date-time"
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportModuleExportFilterMetadataModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportPresetModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "report": {
            "type": "string",
            "format": "uuid"
          },
          "filters": {
            "type": "string",
            "nullable": true
          },
          "range": {
            "enum": [
              "0 = Day",
              "1 = Week",
              "2 = Month",
              "3 = Year"
            ],
            "type": "integer",
            "format": "int32"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ReportPresetModelCreate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 1,
            "type": "string"
          },
          "report": {
            "type": "string",
            "format": "uuid"
          },
          "filters": {
            "type": "string",
            "nullable": true
          },
          "range": {
            "enum": [
              "0 = Day",
              "1 = Week",
              "2 = Month",
              "3 = Year"
            ],
            "type": "integer",
            "format": "int32"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ReportPresetModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportPresetModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportPresetModelUpdate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 1,
            "type": "string"
          },
          "report": {
            "type": "string",
            "format": "uuid"
          },
          "filters": {
            "type": "string",
            "nullable": true
          },
          "range": {
            "enum": [
              "0 = Day",
              "1 = Week",
              "2 = Month",
              "3 = Year"
            ],
            "type": "integer",
            "format": "int32"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ReservationCreateResultModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "pin": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReservationHostModelCreate": {
        "type": "object",
        "properties": {
          "hostId": {
            "type": "integer",
            "format": "int32"
          },
          "slot": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ReservationHostMoveModel": {
        "type": "object",
        "properties": {
          "hostId": {
            "type": "integer",
            "format": "int32"
          },
          "moveHostId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ReservationModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "duration": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "contactPhone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "contactEmail": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "pin": {
            "maxLength": 6,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "status": {
            "enum": [
              "0 = Waiting",
              "1 = Canceled",
              "2 = Active",
              "3 = Expired",
              "4 = Completed",
              "5 = Released",
              "6 = Moved"
            ],
            "type": "integer",
            "format": "int32"
          },
          "hosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationModelHost"
            },
            "nullable": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationModelUser"
            },
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentStatus": {
            "enum": [
              "0 = NotRequired",
              "1 = NotSatisfied",
              "2 = Satisfied"
            ],
            "type": "integer",
            "format": "int32"
          },
          "activationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expireAfter": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cancellationGracePeriod": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cancellationRefundPercentage": {
            "type": "number",
            "format": "double"
          },
          "loginBlockBeforeTime": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "loginBlockAfterTime": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "finalizedById": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReservationModelHost": {
        "type": "object",
        "properties": {
          "hostId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "enum": [
              "0 = Waiting",
              "1 = Canceled",
              "2 = Active",
              "3 = Expired",
              "4 = Completed",
              "5 = Released",
              "6 = Moved"
            ],
            "type": "integer",
            "format": "int32"
          },
          "movedHostId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "activationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "finalizedById": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReservationModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReservationModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "duration": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "contactPhone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "contactEmail": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "pin": {
            "maxLength": 6,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "status": {
            "enum": [
              "0 = Waiting",
              "1 = Canceled",
              "2 = Active",
              "3 = Expired",
              "4 = Completed",
              "5 = Released",
              "6 = Moved"
            ],
            "type": "integer",
            "format": "int32"
          },
          "hosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationModelHost"
            },
            "nullable": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationModelUser"
            },
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ReservationModelUser": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ReservationUserModelCreate": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ReservationsOptions": {
        "type": "object",
        "properties": {
          "enableLoginBlockBefore": {
            "type": "boolean",
            "default": false
          },
          "loginBlockBeforeTime": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "enableLoginBlockAfter": {
            "type": "boolean",
            "default": false
          },
          "loginBlockAfterTime": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "enableExpiration": {
            "type": "boolean",
            "default": false
          },
          "expireAfter": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "timeSourceType": {
            "enum": [
              "0 = TimeOffer",
              "1 = FixedTime",
              "2 = TimeOfferFixedTime"
            ],
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "minimumTime": {
            "type": "integer",
            "format": "int32",
            "default": null,
            "nullable": true
          },
          "maximumTime": {
            "type": "integer",
            "format": "int32",
            "default": null,
            "nullable": true
          },
          "feeType": {
            "enum": [
              "0 = None",
              "1 = Fixed",
              "2 = Percentage"
            ],
            "type": "integer",
            "format": "int32"
          },
          "fee": {
            "type": "number",
            "format": "double"
          },
          "minimumPaymentPercentage": {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "default": 100
          },
          "cancellationGracePeriod": {
            "type": "integer",
            "format": "int32",
            "default": null,
            "nullable": true
          },
          "cancellationRefundPercentage": {
            "type": "number",
            "format": "double",
            "default": 0
          },
          "multiHostDisable": {
            "type": "boolean",
            "default": false
          },
          "purchaseDisableDiscounts": {
            "type": "boolean",
            "default": false
          },
          "deficitFactor": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": null,
            "nullable": true
          },
          "expectedAverageSessionDuration": {
            "type": "integer",
            "format": "int32",
            "default": null,
            "nullable": true
          },
          "clientAlertBeforeTime": {
            "type": "integer",
            "format": "int32",
            "default": null,
            "nullable": true
          },
          "managerAlertBeforeTime": {
            "type": "integer",
            "format": "int32",
            "default": null,
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReserveGuestResultModel": {
        "type": "object",
        "properties": {
          "result": {
            "enum": [
              "0 = Success",
              "1 = InvalidSlot",
              "2 = NoGuestGroup",
              "3 = GuestUseNotAllowed",
              "4 = HostOutOfOrder",
              "5 = MaxReservationsReached",
              "6 = SlotInUse"
            ],
            "type": "integer",
            "format": "int32"
          },
          "isNew": {
            "type": "boolean"
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "slot": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReservedGuestModelCreate": {
        "type": "object",
        "properties": {
          "hostId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "slot": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReservedGuestReleaseModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "success": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SMSGatewayOptions": {
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean"
          },
          "provider": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SMTPOptions": {
        "required": [
          "host"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean",
            "default": false
          },
          "host": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "port": {
            "maximum": 65536,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 465
          },
          "enableAuthentication": {
            "type": "boolean",
            "default": false
          },
          "username": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "password": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "useSSL": {
            "type": "boolean",
            "default": true
          },
          "smtpSecurity": {
            "enum": [
              "0 = None",
              "1 = SSL",
              "2 = STARTTLS"
            ],
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          "replyToAddress": {
            "type": "string",
            "format": "email",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ScheduleModel": {
        "type": "object",
        "additionalProperties": false
      },
      "ScheduleModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ScheduleReportCreateUpdateModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "0 = Daily",
              "1 = Weekly",
              "2 = Monthly",
              "3 = Yearly",
              "4 = OneTime"
            ],
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "date-span"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleReportEntryCreateUpdateModel"
            },
            "nullable": true
          },
          "recipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleReportRecipientCreateUpdateModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ScheduleReportEntryCreateUpdateModel": {
        "type": "object",
        "properties": {
          "reportType": {
            "type": "string",
            "format": "uuid"
          },
          "range": {
            "enum": [
              "0 = Day",
              "1 = Week",
              "2 = Month",
              "3 = Year"
            ],
            "type": "integer",
            "format": "int32"
          },
          "filters": {
            "type": "string",
            "nullable": true
          },
          "reportPresetId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ScheduleReportRecipientCreateUpdateModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "channels": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "isDisabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ScreenCaptureModel": {
        "type": "object",
        "properties": {
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SecurityPolicyGroupMetadataModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SecurityPolicyMetadataModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "integer",
            "format": "int32"
          },
          "group": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SecurityProfileModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "disabledDrives": {
            "type": "integer",
            "format": "int32"
          },
          "restrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecurityProfileRestrictionModel"
            },
            "nullable": true
          },
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecurityProfilePolicyModel"
            },
            "nullable": true
          },
          "disableStartMenu": {
            "type": "boolean"
          },
          "disableDesktopSwitching": {
            "type": "boolean"
          },
          "stickyShell": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SecurityProfileModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "disabledDrives": {
            "type": "integer",
            "format": "int32"
          },
          "restrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecurityProfileRestrictionModelCreate"
            },
            "nullable": true
          },
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecurityProfilePolicyModelCreate"
            },
            "nullable": true
          },
          "disableStart": {
            "type": "boolean"
          },
          "disableDesktopSwitching": {
            "type": "boolean"
          },
          "stickyShell": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SecurityProfileModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecurityProfileModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SecurityProfileModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "disabledDrives": {
            "type": "integer",
            "format": "int32"
          },
          "restrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecurityProfileRestrictionModel"
            },
            "nullable": true
          },
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecurityProfilePolicyModel"
            },
            "nullable": true
          },
          "disableStart": {
            "type": "boolean"
          },
          "disableDesktopSwitching": {
            "type": "boolean"
          },
          "stickyShell": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SecurityProfilePolicesMetadataModel": {
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecurityPolicyGroupMetadataModel"
            },
            "nullable": true
          },
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecurityPolicyMetadataModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SecurityProfilePolicyModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SecurityProfilePolicyModelCreate": {
        "type": "object",
        "properties": {
          "type": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SecurityProfileRestrictionModel": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "enum": [
              "0 = Unset",
              "1 = FileName",
              "2 = ClassName",
              "3 = WindowName",
              "4 = TrayIcon"
            ],
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SecurityProfileRestrictionModelCreate": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "0 = Unset",
              "1 = FileName",
              "2 = ClassName",
              "3 = WindowName",
              "4 = TrayIcon"
            ],
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SessionModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "span": {
            "type": "number",
            "format": "double"
          },
          "billedSpan": {
            "type": "number",
            "format": "double"
          },
          "charge": {
            "type": "number",
            "format": "double"
          },
          "prepaidFixed": {
            "type": "number",
            "format": "double"
          },
          "prepaidProdutTime": {
            "type": "number",
            "format": "double"
          },
          "endpointName": {
            "type": "string",
            "nullable": true
          },
          "usageSessionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isFirstUsageSession": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SessionModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SessionsLogReportModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "hostId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hostName": {
            "type": "string",
            "nullable": true
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "operatorName": {
            "type": "string",
            "nullable": true
          },
          "sessions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserSessionDetailsDTOModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShiftCountModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "shiftId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int32"
          },
          "startCash": {
            "type": "number",
            "format": "double"
          },
          "sales": {
            "type": "number",
            "format": "double"
          },
          "deposits": {
            "type": "number",
            "format": "double"
          },
          "payIns": {
            "type": "number",
            "format": "double"
          },
          "withdrawals": {
            "type": "number",
            "format": "double"
          },
          "payOuts": {
            "type": "number",
            "format": "double"
          },
          "refunds": {
            "type": "number",
            "format": "double"
          },
          "voids": {
            "type": "number",
            "format": "double"
          },
          "expected": {
            "type": "number",
            "format": "double"
          },
          "actual": {
            "type": "number",
            "format": "double"
          },
          "difference": {
            "type": "number",
            "format": "double"
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShiftCountModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShiftCountModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShiftDTOModel": {
        "type": "object",
        "properties": {
          "shiftId": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "startCash": {
            "type": "number",
            "format": "double"
          },
          "registerId": {
            "type": "integer",
            "format": "int32"
          },
          "registerName": {
            "type": "string",
            "nullable": true
          },
          "operatorName": {
            "type": "string",
            "nullable": true
          },
          "endedByOperatorName": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "duration": {
            "type": "string",
            "nullable": true
          },
          "expected": {
            "type": "number",
            "format": "double"
          },
          "actual": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "difference": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "sales": {
            "type": "number",
            "format": "double"
          },
          "deposits": {
            "type": "number",
            "format": "double"
          },
          "withdrawals": {
            "type": "number",
            "format": "double"
          },
          "refunds": {
            "type": "number",
            "format": "double"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShiftDetailsDTOModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShiftDetailsDTOModel": {
        "type": "object",
        "properties": {
          "paymentMethodName": {
            "type": "string",
            "nullable": true
          },
          "startCash": {
            "type": "number",
            "format": "double"
          },
          "sales": {
            "type": "number",
            "format": "double"
          },
          "deposits": {
            "type": "number",
            "format": "double"
          },
          "withdrawals": {
            "type": "number",
            "format": "double"
          },
          "refunds": {
            "type": "number",
            "format": "double"
          },
          "payIns": {
            "type": "number",
            "format": "double"
          },
          "payOuts": {
            "type": "number",
            "format": "double"
          },
          "expected": {
            "type": "number",
            "format": "double"
          },
          "actual": {
            "type": "number",
            "format": "double"
          },
          "difference": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ShiftEndCountModel": {
        "type": "object",
        "properties": {
          "paymentMethodId": {
            "type": "integer",
            "format": "int32"
          },
          "actual": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ShiftEndModel": {
        "type": "object",
        "properties": {
          "counts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShiftEndCountModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShiftExpectedModel": {
        "type": "object",
        "properties": {
          "exepected": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShiftExpectedTransactionModel"
            },
            "nullable": true
          },
          "expectedTotal": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ShiftExpectedTransactionModel": {
        "type": "object",
        "properties": {
          "paymentMethodId": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ShiftModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "operatorId": {
            "type": "integer",
            "format": "int32"
          },
          "registerId": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "isEnding": {
            "type": "boolean"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "startCash": {
            "type": "number",
            "format": "double"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ShiftModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShiftModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShiftOptionsModel": {
        "type": "object",
        "properties": {
          "options": {
            "enum": [
              "0 = Disabled",
              "1 = Optional",
              "2 = Mandatory"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ShiftStartModel": {
        "type": "object",
        "properties": {
          "registerId": {
            "type": "integer",
            "format": "int32"
          },
          "startCash": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ShiftsLogReportModel": {
        "type": "object",
        "properties": {
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "operatorName": {
            "type": "string",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerName": {
            "type": "string",
            "nullable": true
          },
          "shiftsLogReportType": {
            "enum": [
              "1 = Simple",
              "2 = Detailed"
            ],
            "type": "integer",
            "format": "int32"
          },
          "shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShiftDTOModel"
            },
            "nullable": true
          },
          "totalExpectedExcludingStartCashActive": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalDuration": {
            "type": "string",
            "nullable": true
          },
          "totalExpectedExcludingStartCash": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalDifference": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SkinModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SkinOptions": {
        "type": "object",
        "properties": {
          "defaultSkin": {
            "type": "string",
            "default": null,
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SoldProductDTOModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "unitCost": {
            "type": "number",
            "format": "double"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "totalCost": {
            "type": "number",
            "format": "double"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "pointsValue": {
            "type": "integer",
            "format": "int32"
          },
          "pointsAward": {
            "type": "integer",
            "format": "int32"
          },
          "taxRate": {
            "type": "number",
            "format": "double"
          },
          "tax": {
            "type": "number",
            "format": "double"
          },
          "isInBundle": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "StockCountEntryModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "expected": {
            "type": "number",
            "format": "double"
          },
          "actual": {
            "type": "number",
            "format": "double"
          },
          "difference": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "StockCountEntryModelCreate": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "actual": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "StockCountEntryModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockCountEntryModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StockCountModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "unexpectedEntries": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StockCountModelCreate": {
        "type": "object",
        "properties": {
          "stockId": {
            "type": "integer",
            "format": "int32"
          },
          "note": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "0 = Default",
              "1 = ShiftOpen",
              "2 = ShiftClose"
            ],
            "type": "integer",
            "format": "int32"
          },
          "counts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockCountEntryModelCreate"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StockCountModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockCountModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StockModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "0 = SellingPoint",
              "1 = Warehouse"
            ],
            "type": "integer",
            "format": "int32"
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StockModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "0 = SellingPoint",
              "1 = Warehouse"
            ],
            "type": "integer",
            "format": "int32"
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StockModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StockModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "0 = SellingPoint",
              "1 = Warehouse"
            ],
            "type": "integer",
            "format": "int32"
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StockReportModel": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductStockDTOModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StockTransactionModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "enum": [
              "0 = Add",
              "1 = Remove",
              "2 = Sale",
              "3 = Set",
              "4 = Return"
            ],
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "onHand": {
            "type": "number",
            "format": "double"
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StockTransactionModelCreate": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "enum": [
              "0 = Add",
              "1 = Remove",
              "2 = Sale",
              "3 = Set",
              "4 = Return"
            ],
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "stockId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StockTransactionModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockTransactionModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StoreOptionAllowedValueMetadata": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StoreOptionMetadata": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "valueTypeName": {
            "type": "string",
            "nullable": true
          },
          "valuePropertyName": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "allowedValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreOptionAllowedValueMetadata"
            },
            "nullable": true
          },
          "protected": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "StoreOptionReadValue": {
        "type": "object",
        "properties": {
          "existed": {
            "type": "boolean"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StoreOptionsPair": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/StoreOptionMetadata"
          },
          "value": {
            "$ref": "#/components/schemas/StoreOptionReadValue"
          }
        },
        "additionalProperties": false
      },
      "StoreOptionsReadPack": {
        "type": "object",
        "properties": {
          "optionsType": {
            "type": "string",
            "nullable": true
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "section": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreOptionsPair"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StoreOptionsWritePack": {
        "type": "object",
        "properties": {
          "optionsType": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaskCountersModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "enum": [
              "0 = Process",
              "1 = Script",
              "4 = Notification",
              "5 = Junction"
            ],
            "type": "integer",
            "format": "int32"
          },
          "usedByExecutables": {
            "type": "integer",
            "format": "int32"
          },
          "shellTriggers": {
            "enum": [
              "1 = Startup",
              "2 = Shutdown",
              "4 = Login",
              "8 = Logout"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TaskCountersModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskCountersModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaskJunctionCreateUpdateModel": {
        "required": [
          "name",
          "sourceDirectory"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "sourceDirectory": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "destinationDirectory": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "deleteDestination": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TaskModel": {
        "type": "object",
        "additionalProperties": false
      },
      "TaskModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaskNotificationCreateUpdateModel": {
        "required": [
          "message",
          "name",
          "title"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "title": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "message": {
            "minLength": 1,
            "type": "string"
          },
          "wait": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TaskProcessCreateUpdateModel": {
        "required": [
          "fileName",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "fileName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "workingDirectory": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "arguments": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "wait": {
            "type": "boolean"
          },
          "hide": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TaskScriptCreateUpdateModel": {
        "required": [
          "name",
          "script"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "type": {
            "maxLength": 255,
            "minLength": 0,
            "type": "integer",
            "format": "int32"
          },
          "script": {
            "minLength": 1,
            "type": "string"
          },
          "wait": {
            "type": "boolean"
          },
          "hide": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TaxModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "value": {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TaxModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "value": {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TaxModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaxModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "value": {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TaxOptions": {
        "type": "object",
        "properties": {
          "taxSystem": {
            "enum": [
              0,
              1
            ],
            "type": "integer",
            "format": "int32",
            "default": null,
            "nullable": true
          },
          "goodsTaxSystem": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "type": "integer",
            "format": "int32",
            "default": null,
            "nullable": true
          },
          "servicesTaxSystem": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "type": "integer",
            "format": "int32",
            "default": null,
            "nullable": true
          },
          "treatDepositsAsService": {
            "type": "boolean"
          },
          "depositServiceDescription": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "default": null,
            "nullable": true
          },
          "timeBasedServiceVATRate": {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "default": null,
            "nullable": true
          },
          "depositVATRate": {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "type": "integer",
            "format": "int32",
            "default": null,
            "nullable": true
          },
          "depositAdvancePaymentType": {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "type": "integer",
            "format": "int32",
            "default": null,
            "nullable": true
          },
          "businessVATId": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "default": null,
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TimeProductModel": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceLineId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "purchaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "totalSeconds": {
            "type": "number",
            "format": "double"
          },
          "usedSeconds": {
            "type": "number",
            "format": "double"
          },
          "expiresAtLogout": {
            "type": "boolean"
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isPaid": {
            "type": "boolean"
          },
          "isDepleted": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isVoided": {
            "type": "boolean"
          },
          "isExpired": {
            "type": "boolean"
          },
          "type": {
            "enum": [
              "0 = Time",
              "1 = TimeFixed"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TimeProductModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeProductModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TimeSalePresetModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TimeSalePresetModelCreate": {
        "type": "object",
        "properties": {
          "value": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TimeSalePresetModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeSalePresetModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TimeSalePresetModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TimeUsageChartRecordDTOModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "voids": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TimeZoneInfoModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TopUpOptions": {
        "type": "object",
        "properties": {
          "isCustomValueAllowed": {
            "type": "boolean",
            "default": false
          },
          "minimumValue": {
            "type": "number",
            "format": "double",
            "default": null,
            "nullable": true
          },
          "maximumValue": {
            "type": "number",
            "format": "double",
            "default": null,
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TopUserInfoDTOModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "score": {
            "type": "number",
            "format": "double"
          },
          "scoreText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TopUsersReportModel": {
        "type": "object",
        "properties": {
          "topUsersNumber": {
            "type": "integer",
            "format": "int32"
          },
          "memberCounters": {
            "$ref": "#/components/schemas/MemberCountersDTOModel"
          },
          "topSpenders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TopUsersReportUserGroupDTOModel"
            },
            "nullable": true
          },
          "topPointEarners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TopUsersReportUserGroupDTOModel"
            },
            "nullable": true
          },
          "topPointSpenders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TopUsersReportUserGroupDTOModel"
            },
            "nullable": true
          },
          "topSessions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TopUsersReportUserGroupDTOModel"
            },
            "nullable": true
          },
          "topSessionDuration": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TopUsersReportUserGroupDTOModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TopUsersReportUserGroupDTOModel": {
        "type": "object",
        "properties": {
          "userGroupName": {
            "type": "string",
            "nullable": true
          },
          "topUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TopUserInfoDTOModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransactionsLogReportModel": {
        "type": "object",
        "properties": {
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "operatorName": {
            "type": "string",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerName": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "transactionsLogActionType": {
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OperatorTransactionDTOModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateResult": {
        "type": "object",
        "additionalProperties": false
      },
      "UsageModel": {
        "type": "object",
        "properties": {
          "usageSessionId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UsageSessionActiveInvoiceResultModel": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserAddressModel": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserAgreementModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "agreement": {
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "isRejectable": {
            "type": "boolean"
          },
          "ignoreState": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserAgreementModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "agreement": {
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "isRejectable": {
            "type": "boolean"
          },
          "ignoreState": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserAgreementModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserAgreementModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserAgreementModelState": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userAgreementId": {
            "type": "integer",
            "format": "int32"
          },
          "acceptState": {
            "enum": [
              "0 = None",
              "1 = Accepted",
              "2 = Rejected"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserAgreementModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "agreement": {
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "isRejectable": {
            "type": "boolean"
          },
          "ignoreState": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserAttributeModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "attributeId": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserAttributeModelCreate": {
        "type": "object",
        "properties": {
          "attributeId": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserAttributeModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "attributeId": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserBalanceExtendedModel": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "number",
            "format": "double"
          },
          "points": {
            "type": "integer",
            "format": "int32"
          },
          "deposits": {
            "type": "number",
            "format": "double"
          },
          "time": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "creditedTime": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserBalanceOptions": {
        "type": "object",
        "properties": {
          "withholdUnpaidUsageSessionDeposits": {
            "type": "boolean",
            "default": true
          }
        },
        "additionalProperties": false
      },
      "UserBanModel": {
        "type": "object",
        "properties": {
          "isBanned": {
            "type": "boolean"
          },
          "enableDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserContactInformationModel": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserCountersModel": {
        "type": "object",
        "properties": {
          "assets": {
            "type": "integer",
            "format": "int32"
          },
          "notes": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserCurrentUsageModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "usage": {
            "$ref": "#/components/schemas/UsageModel"
          }
        },
        "additionalProperties": false
      },
      "UserCurrentUsageModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserCurrentUsageModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserDTOModel": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "registered": {
            "type": "string",
            "format": "date-time"
          },
          "groupId": {
            "type": "integer",
            "format": "int32"
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "sex": {
            "enum": [
              "0 = Unspecified",
              "1 = Male",
              "2 = Female"
            ],
            "type": "integer",
            "format": "int32"
          },
          "isBanned": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserFilesOptions": {
        "type": "object",
        "properties": {
          "userDataPath": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "default": "UserData",
            "nullable": true
          },
          "defaultsUserDataPath": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "default": "DefaultUserFiles",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserGroupCountersModel": {
        "type": "object",
        "properties": {
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "totalUsers": {
            "type": "integer",
            "format": "int32"
          },
          "guestUsers": {
            "type": "integer",
            "format": "int32"
          },
          "bannedUsers": {
            "type": "integer",
            "format": "int32"
          },
          "deletedUsers": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserGroupDeleteResultModel": {
        "type": "object",
        "properties": {
          "userGroupDeleteResult": {
            "enum": [
              "0 = Success"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserGroupDisallowedHostGroupModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "hostGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isDisallowed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserGroupDisallowedHostGroupModelCreate": {
        "type": "object",
        "properties": {
          "hostGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isDisallowed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserGroupDisallowedHostGroupModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "hostGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isDisallowed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserGroupModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "billingProfileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "requiredUserInfo": {
            "$ref": "#/components/schemas/UserModelRequiredInfo"
          },
          "overrideApplicationGroup": {
            "type": "boolean"
          },
          "applicationGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "overrideSecurityProfile": {
            "type": "boolean"
          },
          "securityProfileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "overrideAgeRating": {
            "type": "boolean"
          },
          "isAgeRatingEnabled": {
            "type": "boolean"
          },
          "enablePersonalStorage": {
            "type": "boolean"
          },
          "hideLogoutButton": {
            "type": "boolean"
          },
          "disallowLoginFromClient": {
            "type": "boolean"
          },
          "guestUse": {
            "type": "boolean"
          },
          "guestUseOnly": {
            "type": "boolean"
          },
          "disallowLoginFromManager": {
            "type": "boolean"
          },
          "isNegativeBalanceAllowed": {
            "type": "boolean"
          },
          "creditLimit": {
            "type": "number",
            "format": "double"
          },
          "pointsAwardOptions": {
            "enum": [
              "0 = None",
              "1 = Time",
              "2 = Money"
            ],
            "type": "integer",
            "format": "int32"
          },
          "pointsMoneyRatio": {
            "type": "number",
            "format": "double"
          },
          "pointsTimeRatio": {
            "type": "integer",
            "format": "int32"
          },
          "pointsAward": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "disableTimeOffer": {
            "type": "boolean"
          },
          "disableFixedTime": {
            "type": "boolean"
          },
          "disableDeposit": {
            "type": "boolean"
          },
          "isWaitingLinePriorityEnabled": {
            "type": "boolean"
          },
          "waitingLinePriority": {
            "type": "integer",
            "format": "int32"
          },
          "creditLimitOptions": {
            "enum": [
              "0 = None",
              "2 = EnablePerUserCreditLimit",
              "4 = SalesCreditLimited",
              "8 = SalesCreditUnlimited",
              "16 = TimeCreditLimited",
              "32 = TimeCreditUnlimited"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserGroupModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "billingProfileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "requiredUserInfo": {
            "$ref": "#/components/schemas/UserModelRequiredInfo"
          },
          "overrideApplicationGroup": {
            "type": "boolean"
          },
          "applicationGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "overrideSecurityProfile": {
            "type": "boolean"
          },
          "securityProfileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "overrideAgeRating": {
            "type": "boolean"
          },
          "isAgeRatingEnabled": {
            "type": "boolean"
          },
          "enablePersonalStorage": {
            "type": "boolean"
          },
          "hideLogoutButton": {
            "type": "boolean"
          },
          "disallowLoginFromClient": {
            "type": "boolean"
          },
          "guestUse": {
            "type": "boolean"
          },
          "guestUseOnly": {
            "type": "boolean"
          },
          "disallowLoginFromManager": {
            "type": "boolean"
          },
          "isNegativeBalanceAllowed": {
            "type": "boolean"
          },
          "creditLimit": {
            "type": "number",
            "format": "double"
          },
          "pointsAwardOptions": {
            "enum": [
              "0 = None",
              "1 = Time",
              "2 = Money"
            ],
            "type": "integer",
            "format": "int32"
          },
          "pointsMoneyRatio": {
            "type": "number",
            "format": "double"
          },
          "pointsTimeRatio": {
            "type": "integer",
            "format": "int32"
          },
          "pointsAward": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "disableTimeOffer": {
            "type": "boolean"
          },
          "disableFixedTime": {
            "type": "boolean"
          },
          "disableDeposit": {
            "type": "boolean"
          },
          "isWaitingLinePriorityEnabled": {
            "type": "boolean"
          },
          "waitingLinePriority": {
            "type": "integer",
            "format": "int32"
          },
          "creditLimitOptions": {
            "enum": [
              "0 = None",
              "2 = EnablePerUserCreditLimit",
              "4 = SalesCreditLimited",
              "8 = SalesCreditUnlimited",
              "16 = TimeCreditLimited",
              "32 = TimeCreditUnlimited"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserGroupModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserGroupModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserGroupModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "billingProfileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "requiredUserInfo": {
            "$ref": "#/components/schemas/UserModelRequiredInfo"
          },
          "overrideApplicationGroup": {
            "type": "boolean"
          },
          "applicationGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "overrideSecurityProfile": {
            "type": "boolean"
          },
          "securityProfileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "overrideAgeRating": {
            "type": "boolean"
          },
          "isAgeRatingEnabled": {
            "type": "boolean"
          },
          "enablePersonalStorage": {
            "type": "boolean"
          },
          "hideLogoutButton": {
            "type": "boolean"
          },
          "disallowLoginFromClient": {
            "type": "boolean"
          },
          "guestUse": {
            "type": "boolean"
          },
          "guestUseOnly": {
            "type": "boolean"
          },
          "disallowLoginFromManager": {
            "type": "boolean"
          },
          "isNegativeBalanceAllowed": {
            "type": "boolean"
          },
          "creditLimit": {
            "type": "number",
            "format": "double"
          },
          "pointsAwardOptions": {
            "enum": [
              "0 = None",
              "1 = Time",
              "2 = Money"
            ],
            "type": "integer",
            "format": "int32"
          },
          "pointsMoneyRatio": {
            "type": "number",
            "format": "double"
          },
          "pointsTimeRatio": {
            "type": "integer",
            "format": "int32"
          },
          "pointsAward": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "disableTimeOffer": {
            "type": "boolean"
          },
          "disableFixedTime": {
            "type": "boolean"
          },
          "disableDeposit": {
            "type": "boolean"
          },
          "isWaitingLinePriorityEnabled": {
            "type": "boolean"
          },
          "waitingLinePriority": {
            "type": "integer",
            "format": "int32"
          },
          "creditLimitOptions": {
            "enum": [
              "0 = None",
              "2 = EnablePerUserCreditLimit",
              "4 = SalesCreditLimited",
              "8 = SalesCreditUnlimited",
              "16 = TimeCreditLimited",
              "32 = TimeCreditUnlimited"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserGroupProductsSoldDTOModel": {
        "type": "object",
        "properties": {
          "userGroupName": {
            "type": "string",
            "nullable": true
          },
          "product": {
            "$ref": "#/components/schemas/GroupProductSoldDTOModel"
          }
        },
        "additionalProperties": false
      },
      "UserGuestVirtualResult": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hostId": {
            "type": "integer",
            "format": "int32"
          },
          "slot": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserLoginOptions": {
        "type": "object",
        "properties": {
          "userReLogin": {
            "type": "boolean",
            "default": false
          },
          "guestReLogin": {
            "type": "boolean",
            "default": false
          }
        },
        "additionalProperties": false
      },
      "UserLoginResultModel": {
        "type": "object",
        "properties": {
          "loginResult": {
            "enum": [
              "0 = Sucess",
              "1 = InvalidParameters",
              "2 = AccountDisabled",
              "4 = InvalidUserName",
              "8 = InvalidPassword",
              "12 = InvalidCredentials",
              "16 = Failed",
              "32 = Denied",
              "64 = TimedOut",
              "128 = CantExecute",
              "256 = AlreadyLoggedIn",
              "512 = LoginInProgress",
              "1024 = LogoutInProgress",
              "2048 = InvalidUserId",
              "4096 = InvalidHostId",
              "8192 = MaximumSessionsReached",
              "16384 = InsufficientBalance",
              "32768 = InvalidUserGroupId",
              "65536 = SlotInUse",
              "131072 = SlotInvalid",
              "262144 = NotInWaitingLine",
              "524288 = OperatorUserGroupDenied",
              "1048576 = RestrictedByAge"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserLogoutGraceOptions": {
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean"
          },
          "time": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserLogoutResultModel": {
        "type": "object",
        "properties": {
          "logoutResult": {
            "enum": [
              "0 = Sucess",
              "1 = NotLoggedIn",
              "2 = LoggedOutLocally",
              "4 = Failed",
              "2048 = InvalidUserId"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "isGuest": {
            "type": "boolean"
          },
          "username": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isNegativeBalanceAllowed": {
            "type": "boolean",
            "nullable": true
          },
          "isPersonalInfoRequested": {
            "type": "boolean"
          },
          "enableDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "disabledDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "firstName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "address": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "country": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "sex": {
            "enum": [
              "0 = Unspecified",
              "1 = Male",
              "2 = Female"
            ],
            "type": "integer",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "smartCardUid": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "identification": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "registrationDate": {
            "type": "string",
            "format": "date-time"
          },
          "isVerified": {
            "type": "boolean"
          },
          "hasNotes": {
            "type": "boolean"
          },
          "hasCheckedOutAssets": {
            "type": "boolean"
          },
          "reservedHostId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reservedSlot": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserModelCreate": {
        "type": "object",
        "properties": {
          "password": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "username": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isNegativeBalanceAllowed": {
            "type": "boolean",
            "nullable": true
          },
          "isPersonalInfoRequested": {
            "type": "boolean"
          },
          "enableDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "disabledDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "firstName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "address": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "country": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "sex": {
            "enum": [
              "0 = Unspecified",
              "1 = Male",
              "2 = Female"
            ],
            "type": "integer",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "smartCardUid": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "identification": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserModelHardDelete": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserModelPicture": {
        "type": "object",
        "properties": {
          "picture": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserModelRequiredInfo": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "boolean"
          },
          "lastName": {
            "type": "boolean"
          },
          "birthDate": {
            "type": "boolean"
          },
          "address": {
            "type": "boolean"
          },
          "city": {
            "type": "boolean"
          },
          "postCode": {
            "type": "boolean"
          },
          "state": {
            "type": "boolean"
          },
          "country": {
            "type": "boolean"
          },
          "email": {
            "type": "boolean"
          },
          "phone": {
            "type": "boolean"
          },
          "mobile": {
            "type": "boolean"
          },
          "sex": {
            "type": "boolean"
          },
          "password": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "password": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "username": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isNegativeBalanceAllowed": {
            "type": "boolean",
            "nullable": true
          },
          "isPersonalInfoRequested": {
            "type": "boolean"
          },
          "enableDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "disabledDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "firstName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "address": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "country": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "sex": {
            "enum": [
              "0 = Unspecified",
              "1 = Male",
              "2 = Female"
            ],
            "type": "integer",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "smartCardUid": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "identification": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserNoteCountModel": {
        "type": "object",
        "properties": {
          "severityGreenCount": {
            "type": "integer",
            "format": "int32"
          },
          "severityYellowCount": {
            "type": "integer",
            "format": "int32"
          },
          "severityRedCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserNoteModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "text": {
            "maxLength": 65535,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "severity": {
            "enum": [
              "0 = Green",
              "1 = Yellow",
              "2 = Red"
            ],
            "type": "integer",
            "format": "int32"
          },
          "createdById": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UserNoteModelCreate": {
        "type": "object",
        "properties": {
          "text": {
            "maxLength": 65535,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "severity": {
            "enum": [
              "0 = Green",
              "1 = Yellow",
              "2 = Red"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserNoteModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserNoteModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserNoteModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "text": {
            "maxLength": 65535,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "severity": {
            "enum": [
              "0 = Green",
              "1 = Yellow",
              "2 = Red"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserPasswordPolicyOptions": {
        "type": "object",
        "properties": {
          "minimumLength": {
            "type": "integer",
            "format": "int32",
            "default": 4
          },
          "maximumLength": {
            "type": "integer",
            "format": "int32",
            "default": 24
          },
          "requireLowerCase": {
            "type": "boolean",
            "default": false
          },
          "requireUpperCase": {
            "type": "boolean",
            "default": false
          },
          "requireNumbers": {
            "type": "boolean",
            "default": false
          }
        },
        "additionalProperties": false
      },
      "UserPasswordRecoveryOptions": {
        "type": "object",
        "properties": {
          "method": {
            "enum": [
              "0 = None",
              "1 = Mobile",
              "2 = Email"
            ],
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        },
        "additionalProperties": false
      },
      "UserPermissionModel": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserPermissionSetModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "integer",
            "format": "int32"
          },
          "operators": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserPermissionSetModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPermissionModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserPermissionSetModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPermissionSetModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserPermissionSetModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPermissionModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserPersonalInformationModel": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "identification": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "sex": {
            "enum": [
              "0 = Unspecified",
              "1 = Male",
              "2 = Female"
            ],
            "type": "integer",
            "format": "int32"
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserRecoveryMethodGetResultModel": {
        "type": "object",
        "properties": {
          "result": {
            "enum": [
              "0 = Success",
              "1 = Error",
              "2 = UserNotFound"
            ],
            "type": "integer",
            "format": "int32"
          },
          "recoveryMethod": {
            "enum": [
              "0 = None",
              "1 = Mobile",
              "2 = Email"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserRegistrationOptions": {
        "type": "object",
        "properties": {
          "isClientEnabled": {
            "type": "boolean",
            "default": false
          },
          "isPortalEnabled": {
            "type": "boolean",
            "default": false
          },
          "verificationMethod": {
            "enum": [
              "0 = None",
              "1 = Email",
              "2 = MobilePhone"
            ],
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        },
        "additionalProperties": false
      },
      "UserReportModel": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserDTOModel"
          },
          "pointsEarned": {
            "type": "integer",
            "format": "int32"
          },
          "redeemed": {
            "type": "integer",
            "format": "int32"
          },
          "logins": {
            "type": "integer",
            "format": "int32"
          },
          "loginTime": {
            "type": "string",
            "nullable": true
          },
          "deposits": {
            "type": "number",
            "format": "double"
          },
          "withdrawals": {
            "type": "number",
            "format": "double"
          },
          "products": {
            "type": "number",
            "format": "double"
          },
          "fixedTime": {
            "type": "number",
            "format": "double"
          },
          "sessions": {
            "type": "number",
            "format": "double"
          },
          "timeProducts": {
            "type": "number",
            "format": "double"
          },
          "moneySpend": {
            "type": "number",
            "format": "double"
          },
          "checkOutItems": {
            "type": "integer",
            "format": "int32"
          },
          "photo": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "sessionTimeChartRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartRecordDTOModel"
            },
            "nullable": true
          },
          "invoicesChartRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartRecordDTOModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserSearchResultModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserSearchResultModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserSearchResultModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserSessionDetailsDTOModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "span": {
            "type": "number",
            "format": "double"
          },
          "billedSpan": {
            "type": "number",
            "format": "double"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "userIsGuest": {
            "type": "boolean"
          },
          "hostId": {
            "type": "integer",
            "format": "int32"
          },
          "slot": {
            "type": "integer",
            "format": "int32"
          },
          "totalMinutes": {
            "type": "number",
            "format": "double"
          },
          "duration": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "hostName": {
            "type": "string",
            "nullable": true
          },
          "hostNumber": {
            "type": "integer",
            "format": "int32"
          },
          "loginOperatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "loginOperatorName": {
            "type": "string",
            "nullable": true
          },
          "logoutOperatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "logoutOperatorName": {
            "type": "string",
            "nullable": true
          },
          "moveHostName": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "enum": [
              "0 = None",
              "1 = Active",
              "2 = Ended",
              "5 = Pending",
              "9 = Paused",
              "17 = Move",
              "33 = Grace"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserSessionModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "hostId": {
            "type": "integer",
            "format": "int32"
          },
          "slot": {
            "type": "integer",
            "format": "int32"
          },
          "state": {
            "enum": [
              "0 = None",
              "1 = Active",
              "2 = Ended",
              "5 = Pending",
              "9 = Paused",
              "17 = Move",
              "33 = Grace"
            ],
            "type": "integer",
            "format": "int32"
          },
          "span": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "UserSessionModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserSessionModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserSessionsOptions": {
        "type": "object",
        "properties": {
          "terminatePending": {
            "type": "boolean",
            "default": false
          },
          "logoutDisconnected": {
            "type": "boolean",
            "default": false
          },
          "pendingTimeout": {
            "type": "integer",
            "format": "int32",
            "default": 180
          }
        },
        "additionalProperties": false
      },
      "UserStatsModel": {
        "type": "object",
        "properties": {
          "pointsEarned": {
            "type": "integer",
            "format": "int32"
          },
          "redeemed": {
            "type": "integer",
            "format": "int32"
          },
          "logins": {
            "type": "integer",
            "format": "int32"
          },
          "loginTime": {
            "type": "string",
            "nullable": true
          },
          "deposits": {
            "type": "number",
            "format": "double"
          },
          "withdrawals": {
            "type": "number",
            "format": "double"
          },
          "products": {
            "type": "number",
            "format": "double"
          },
          "fixedTime": {
            "type": "number",
            "format": "double"
          },
          "sessions": {
            "type": "number",
            "format": "double"
          },
          "timeProducts": {
            "type": "number",
            "format": "double"
          },
          "moneySpend": {
            "type": "number",
            "format": "double"
          },
          "checkOutItems": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserStorageOptions": {
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean"
          },
          "mountPoint": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string",
            "default": "U:",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "redirectedFolders": {
            "enum": [
              "0 = None",
              "1 = Desktop",
              "2 = Downloads",
              "4 = Favorites",
              "8 = Music",
              "16 = Pictures",
              "32 = Videos",
              "64 = SavedGames",
              "128 = Personal"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserUsageRateModel": {
        "type": "object",
        "properties": {
          "remainingMinutes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "billRateId": {
            "type": "integer",
            "format": "int32"
          },
          "inCredit": {
            "type": "boolean"
          },
          "hourlyRate": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "UserUsageTimeFixedModel": {
        "type": "object",
        "properties": {
          "remainingMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceLineId": {
            "type": "integer",
            "format": "int32"
          },
          "purchaseTime": {
            "type": "string",
            "format": "date-time"
          },
          "totalMinutes": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserUsageTimeLevelModel": {
        "type": "object",
        "properties": {
          "rate": {
            "$ref": "#/components/schemas/UserUsageRateModel"
          },
          "timeOffer": {
            "$ref": "#/components/schemas/UserUsageTimeOfferModel"
          },
          "timeFixed": {
            "$ref": "#/components/schemas/UserUsageTimeFixedModel"
          },
          "usageType": {
            "enum": [
              "0 = None",
              "1 = Rate",
              "2 = TimeFixed",
              "3 = TimeOffer"
            ],
            "type": "integer",
            "format": "int32"
          },
          "usableMinutes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "activationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "activationOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserUsageTimeOfferModel": {
        "type": "object",
        "properties": {
          "remainingMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "expirationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoiceLineId": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "purchaseTime": {
            "type": "string",
            "format": "date-time"
          },
          "firstUsageTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserUserGroupModelUpdate": {
        "type": "object",
        "properties": {
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UsersCountersModel": {
        "type": "object",
        "properties": {
          "countersPerGroup": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserGroupCountersModel"
            },
            "nullable": true
          },
          "totalUsers": {
            "type": "integer",
            "format": "int32"
          },
          "guestUsers": {
            "type": "integer",
            "format": "int32"
          },
          "bannedUsers": {
            "type": "integer",
            "format": "int32"
          },
          "deletedUsers": {
            "type": "integer",
            "format": "int32"
          },
          "totalUserDeposits": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "V3ApplicationExecutableTaskModel": {
        "type": "object",
        "properties": {
          "applicationExecutableId": {
            "type": "integer",
            "format": "int32"
          },
          "taskId": {
            "type": "integer",
            "format": "int32"
          },
          "activation": {
            "enum": [
              "16 = PreLaunch",
              "32 = PreDeploy",
              "64 = PostTermination",
              "128 = PreLicenseManagement"
            ],
            "type": "integer",
            "format": "int32"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "V3ApplicationExecutableTaskModelCreate": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "integer",
            "format": "int32"
          },
          "activation": {
            "enum": [
              "16 = PreLaunch",
              "32 = PreDeploy",
              "64 = PostTermination",
              "128 = PreLicenseManagement"
            ],
            "type": "integer",
            "format": "int32"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "V3ApplicationExecutableTaskModelUpdate": {
        "type": "object",
        "properties": {
          "applicationExecutableId": {
            "type": "integer",
            "format": "int32"
          },
          "taskId": {
            "type": "integer",
            "format": "int32"
          },
          "activation": {
            "enum": [
              "16 = PreLaunch",
              "32 = PreDeploy",
              "64 = PostTermination",
              "128 = PreLicenseManagement"
            ],
            "type": "integer",
            "format": "int32"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "VariableModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "availableInServer": {
            "type": "boolean"
          },
          "availableInClient": {
            "type": "boolean"
          },
          "availableInManager": {
            "type": "boolean"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "VariableModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "availableInServer": {
            "type": "boolean"
          },
          "availableInClient": {
            "type": "boolean"
          },
          "availableInManager": {
            "type": "boolean"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "VariableModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VariableModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VariableModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "availableInServer": {
            "type": "boolean"
          },
          "availableInClient": {
            "type": "boolean"
          },
          "availableInManager": {
            "type": "boolean"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "VerificationStartResultModelEmail": {
        "type": "object",
        "properties": {
          "result": {
            "enum": [
              "0 = Success",
              "1 = Failed",
              "402 = InvalidInput",
              "403 = InvalidUserId",
              "405 = NonUniqueInput",
              "501 = DeliveryFailed",
              "502 = NoRouteForDelivery"
            ],
            "type": "integer",
            "format": "int32"
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "codeLength": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VerificationStartResultModelMobilePhone": {
        "type": "object",
        "properties": {
          "result": {
            "enum": [
              "0 = Success",
              "1 = Failed",
              "402 = InvalidInput",
              "403 = InvalidUserId",
              "405 = NonUniqueInput",
              "501 = DeliveryFailed",
              "502 = NoRouteForDelivery"
            ],
            "type": "integer",
            "format": "int32"
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "codeLength": {
            "type": "integer",
            "format": "int32"
          },
          "mobilePhone": {
            "type": "string",
            "nullable": true
          },
          "deliveryMethod": {
            "enum": [
              "0 = Undetermined",
              "1 = SMS",
              "2 = FlashCall"
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "VirtualDriveMappingCreateModel": {
        "required": [
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "minLength": 1,
            "type": "string"
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "mountPoint": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "directAccess": {
            "type": "boolean"
          },
          "isReadOnly": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "VirtualDriveMappingUpdateModel": {
        "required": [
          "label"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "minLength": 1,
            "type": "string"
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "mountPoint": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "directAccess": {
            "type": "boolean"
          },
          "isReadOnly": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "VirtualFolderMappingCreateModel": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "nullable": true
          },
          "mountPoint": {
            "type": "string",
            "nullable": true
          },
          "directAccess": {
            "type": "boolean"
          },
          "isReadOnly": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "VirtualFolderMappingUpdateModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "mountPoint": {
            "type": "string",
            "nullable": true
          },
          "directAccess": {
            "type": "boolean"
          },
          "isReadOnly": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WaitingLineEntryActiveModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "hostGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "isManualPosition": {
            "type": "boolean"
          },
          "timeInLine": {
            "type": "number",
            "format": "double"
          },
          "readyTime": {
            "type": "number",
            "format": "double"
          },
          "isReadyTimedOut": {
            "type": "boolean"
          },
          "estimatedHostId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "estimatedWaitTime": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WaitingLineEntryActiveModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WaitingLineEntryActiveModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WaitingLineEntryModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "hostGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "isManualPosition": {
            "type": "boolean"
          },
          "timeInLine": {
            "type": "number",
            "format": "double"
          },
          "readyTime": {
            "type": "number",
            "format": "double"
          },
          "isReadyTimedOut": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "isProcessed": {
            "type": "boolean"
          },
          "isCancelled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WaitingLineEntryModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WaitingLineEntryModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WaitingLineModel": {
        "type": "object",
        "properties": {
          "hostGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "timeoutRemoveEnabled": {
            "type": "boolean"
          },
          "prioritiesEnabled": {
            "type": "boolean"
          },
          "nextInLineEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WaitingLineModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WaitingLineModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WaitingLineMoveParametersModel": {
        "type": "object",
        "properties": {
          "moveType": {
            "enum": [
              "0 = Custom",
              "1 = Up",
              "2 = Down",
              "3 = Top",
              "4 = Bottom"
            ],
            "type": "integer",
            "format": "int32"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WaitingLineParametersModel": {
        "type": "object",
        "properties": {
          "enablePriorities": {
            "type": "boolean"
          },
          "enableNextInLine": {
            "type": "boolean"
          },
          "timeoutRemove": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WaitingLinePriorityModel": {
        "type": "object",
        "properties": {
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WaitingLinesOptions": {
        "type": "object",
        "properties": {
          "isLogoutGracePeriodEnabled": {
            "type": "boolean",
            "default": false
          },
          "logoutGracePeriodTime": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          "isRemoveFromAllEnabled": {
            "type": "boolean",
            "default": true
          },
          "nextInLineTime": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          "removeTime": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 30
          }
        },
        "additionalProperties": false
      },
      "WebApiErrorBase": {
        "type": "object",
        "additionalProperties": false
      },
      "WebApiErrorResponse": {
        "type": "object",
        "properties": {
          "httpStatusCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "isError": {
            "type": "boolean"
          },
          "errorCodeType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "errorCodeTypeReadable": {
            "type": "string",
            "nullable": true
          },
          "errorCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "errorCodeReadable": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApiErrorBase"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ZDTOModel": {
        "type": "object",
        "properties": {
          "zId": {
            "type": "integer",
            "format": "int32"
          },
          "openTime": {
            "type": "string",
            "format": "date-time"
          },
          "closeTime": {
            "type": "string",
            "format": "date-time"
          },
          "firstInvoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "lastInvoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceCount": {
            "type": "integer",
            "format": "int32"
          },
          "itemCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalTax": {
            "type": "number",
            "format": "double"
          },
          "totalValue": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ZLogReportModel": {
        "type": "object",
        "additionalProperties": false
      },
      "ZReportModel": {
        "type": "object",
        "properties": {
          "dateFrom": {
            "type": "string",
            "format": "date-time"
          },
          "dateTo": {
            "type": "string",
            "format": "date-time"
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "operatorName": {
            "type": "string",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerName": {
            "type": "string",
            "nullable": true
          },
          "financialReportType": {
            "enum": [
              "1 = Simple",
              "2 = GroupByUserGroup",
              "3 = Detailed"
            ],
            "type": "integer",
            "format": "int32"
          },
          "deposits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountTransactionDTOModel"
            },
            "nullable": true
          },
          "withdrawals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountTransactionDTOModel"
            },
            "nullable": true
          },
          "depositVoids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountTransactionDTOModel"
            },
            "nullable": true
          },
          "groupInvoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FinancialReportUserGroupInvoicesDTOModel"
            },
            "nullable": true
          },
          "groupVoidInvoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FinancialReportUserGroupInvoicesDTOModel"
            },
            "nullable": true
          },
          "depositsSummary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FinancialSummaryRecordDTOModel"
            },
            "nullable": true
          },
          "salesSummary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FinancialSummaryRecordDTOModel"
            },
            "nullable": true
          },
          "voidInvoicesPaidCash": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FinancialSummaryRecordDTOModel"
            },
            "nullable": true
          },
          "voidInvoicesNoRefundOrUnpaid": {
            "$ref": "#/components/schemas/FinancialSummaryRecordDTOModel"
          },
          "pastSalesPaymentsSummary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FinancialSummaryRecordDTOModel"
            },
            "nullable": true
          },
          "paymentMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListItemDTOModel"
            },
            "nullable": true
          },
          "registerTransactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegisterTransactionDTOModel"
            },
            "nullable": true
          },
          "z": {
            "$ref": "#/components/schemas/ZDTOModel"
          }
        },
        "additionalProperties": false
      }
    }
  },
  "tags": [
    {
      "name": "AssistanceRequests",
      "description": "Assistance request user api set."
    },
    {
      "name": "Auth",
      "description": "User authentication controller."
    },
    {
      "name": "Verifications",
      "description": "Verification api set."
    },
    {
      "name": "AgeRestrictions",
      "description": "Age restrictions api set."
    },
    {
      "name": "ApiKeys",
      "description": "Api key types api set."
    },
    {
      "name": "ApplicationCategories",
      "description": "Application categories api set."
    },
    {
      "name": "ApplicationDeployments",
      "description": "Application deployments api set."
    },
    {
      "name": "ApplicationEnterprises",
      "description": "Application enterprises api set."
    },
    {
      "name": "ApplicationExecutables",
      "description": "Application executables api set."
    },
    {
      "name": "ApplicationGroups",
      "description": "Application groups api set."
    },
    {
      "name": "ApplicationLicenses",
      "description": "Application executable licenses api set."
    },
    {
      "name": "ApplicationLinks",
      "description": "Application links api set."
    },
    {
      "name": "ApplicationPersonalFiles",
      "description": "Application personal files api set."
    },
    {
      "name": "Applications",
      "description": "Applications api set."
    },
    {
      "name": "ApplicationStats",
      "description": "Application stat api set."
    },
    {
      "name": "ApplicationTasks",
      "description": "Application executable tasks api set."
    },
    {
      "name": "Assets",
      "description": "Assets api set."
    },
    {
      "name": "AssetTransactions",
      "description": "Asset transactions api set."
    },
    {
      "name": "AssetTypes",
      "description": "Asset types api set."
    },
    {
      "name": "AssistanceRequestTypes",
      "description": "Assistance request type api set."
    },
    {
      "name": "Attributes",
      "description": "Attributes api set."
    },
    {
      "name": "BillingProfiles",
      "description": "Billing profiles api set."
    },
    {
      "name": "Branches",
      "description": "Branch api set."
    },
    {
      "name": "ClientOptions",
      "description": "Client options api set."
    },
    {
      "name": "ClientTasks",
      "description": "Client tasks api set."
    },
    {
      "name": "Companions",
      "description": "Companion api set."
    },
    {
      "name": "DepositTransactions",
      "description": "Deposit transactions api set."
    },
    {
      "name": "Devices",
      "description": "Devices api set."
    },
    {
      "name": "DiscountGroups",
      "description": "Discount group api set."
    },
    {
      "name": "Discounts",
      "description": "Discount api set."
    },
    {
      "name": "Documents",
      "description": "Document api set."
    },
    {
      "name": "DocumentTypes",
      "description": "Document types api set."
    },
    {
      "name": "Events",
      "description": "Long polling event controller."
    },
    {
      "name": "Feeds",
      "description": "Feeds api set."
    },
    {
      "name": "Files",
      "description": "Files api set."
    },
    {
      "name": "HostComputers",
      "description": "Host api set."
    },
    {
      "name": "HostGroups",
      "description": "Host group api set."
    },
    {
      "name": "HostIcons",
      "description": "Host icons api set."
    },
    {
      "name": "HostLayoutGroups",
      "description": "Host layout group api set."
    },
    {
      "name": "Hosts",
      "description": "Host api set."
    },
    {
      "name": "Instance",
      "description": "Server instance api set."
    },
    {
      "name": "Inventories",
      "description": "Inventories api set."
    },
    {
      "name": "InventoryAdjustmentReasons",
      "description": "Inventory adjustment reason api set."
    },
    {
      "name": "InvoicePayments",
      "description": "Invoice payments api set."
    },
    {
      "name": "Invoices",
      "description": "Invoices api set."
    },
    {
      "name": "Logs",
      "description": "Log api set."
    },
    {
      "name": "Mappings",
      "description": "Mappings api set."
    },
    {
      "name": "MonetaryUnits",
      "description": "Monetary units api set."
    },
    {
      "name": "News",
      "description": "News api set."
    },
    {
      "name": "Notifications",
      "description": "Notifications api set."
    },
    {
      "name": "Operators",
      "description": "Operators api set."
    },
    {
      "name": "Options",
      "description": "Options controller."
    },
    {
      "name": "PaymentIntents",
      "description": "Payment intent controller."
    },
    {
      "name": "PaymentMethods",
      "description": "Payment methods api set."
    },
    {
      "name": "PaymentProviders",
      "description": "Payment provider controller."
    },
    {
      "name": "Payments",
      "description": "Payments api set."
    },
    {
      "name": "PluginLibrary",
      "description": "Plugin library api set."
    },
    {
      "name": "PointsTransactions",
      "description": "Points transaction api set."
    },
    {
      "name": "PresetReservationTime",
      "description": "Preset reservation time api set."
    },
    {
      "name": "PresetTimeSale",
      "description": "Preset time sale api set."
    },
    {
      "name": "PresetTimeSaleMoney",
      "description": "Preset time sale money api set."
    },
    {
      "name": "PresetTopUp",
      "description": "Preset topup api set."
    },
    {
      "name": "ProductGroups",
      "description": "Product groups api set."
    },
    {
      "name": "ProductOrders",
      "description": "Orders api set."
    },
    {
      "name": "Products",
      "description": "Products API set."
    },
    {
      "name": "ProductStock",
      "description": "Products stock api set."
    },
    {
      "name": "PublicOptions",
      "description": "Public options api set."
    },
    {
      "name": "Recoveries",
      "description": "Recoveries controller."
    },
    {
      "name": "Registers",
      "description": "Registers api set."
    },
    {
      "name": "RegisterTransactions",
      "description": "Register transactions api set."
    },
    {
      "name": "RemoteControl",
      "description": "Remote control api set."
    },
    {
      "name": "ReportModules",
      "description": "Report modules api set."
    },
    {
      "name": "ReportPresets",
      "description": "Report preset api set."
    },
    {
      "name": "Reports",
      "description": "Reports api set."
    },
    {
      "name": "Reservations",
      "description": "Reservations api set."
    },
    {
      "name": "SalePresets",
      "description": "Sale presets api set."
    },
    {
      "name": "Schedules",
      "description": "Schedules api set."
    },
    {
      "name": "SecurityProfiles",
      "description": "Security profiles api set."
    },
    {
      "name": "Sessions",
      "description": "Sessions api set."
    },
    {
      "name": "ShiftCounts",
      "description": "Shift count api set."
    },
    {
      "name": "Shifts",
      "description": "Shift api set."
    },
    {
      "name": "Skins",
      "description": "Skins api set."
    },
    {
      "name": "SmsProviders",
      "description": "SMS provider controller."
    },
    {
      "name": "Stock",
      "description": "Stock api set."
    },
    {
      "name": "StockCount",
      "description": "Stock count api set."
    },
    {
      "name": "StockTransactions",
      "description": "Stock transactions api set."
    },
    {
      "name": "System",
      "description": "System API set."
    },
    {
      "name": "Tasks",
      "description": "Tasks api set."
    },
    {
      "name": "Taxes",
      "description": "Taxes api set."
    },
    {
      "name": "TimeProducts",
      "description": "Time products api set."
    },
    {
      "name": "Tokens",
      "description": "Tokens controller."
    },
    {
      "name": "UserAgreements",
      "description": "User agreements api set."
    },
    {
      "name": "UserGroups",
      "description": "User group api set."
    },
    {
      "name": "UserGuests",
      "description": "User guest api set."
    },
    {
      "name": "UserPermissionSets",
      "description": "Document api set."
    },
    {
      "name": "Users",
      "description": "Users api set."
    },
    {
      "name": "UserSessions",
      "description": "User sessions api set."
    },
    {
      "name": "Variables",
      "description": "Variables api set."
    },
    {
      "name": "WaitingLines",
      "description": "Waiting lines controller."
    }
  ]
}