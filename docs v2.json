{
  "openapi": "3.0.1",
  "info": {
    "description": "Gizmo web api.",
    "contact": {
      "name": "GizmoPowered",
      "url": "https://www.gizmopowered.net",
      "email": "support@gizmopowered.net"
    },
    "version": "v2.0"
  },
  "paths": {
    "/api/v2.0/applicationcategories": {
      "get": {
        "tags": [
          "ApplicationCategories"
        ],
        "summary": "Get all application categories.",
        "description": "<b>Returns a list of application categories.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "CategoryName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ParentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationCategoryModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationCategoryModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationCategories"
        ],
        "summary": "Create an application category.",
        "requestBody": {
          "description": "Application category.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationCategoryModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationCategoryModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationCategoryModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationCategoryModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationCategoryModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationCategories"
        ],
        "summary": "Update an application category.",
        "requestBody": {
          "description": "Application category.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationCategoryModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationCategoryModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationCategoryModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationCategoryModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationCategoryModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applicationcategories/{id}": {
      "get": {
        "tags": [
          "ApplicationCategories"
        ],
        "summary": "Get an application category by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application category id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationCategoryModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationCategoryModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationCategories"
        ],
        "summary": "Delete an application category.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application category id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/applicationdeployments": {
      "get": {
        "tags": [
          "ApplicationDeployments"
        ],
        "summary": "Get all application deployments.",
        "description": "<b>Returns a list of application deployments.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "DeploymentName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationDeploymentModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationDeploymentModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationDeployments"
        ],
        "summary": "Create an application deployment.",
        "requestBody": {
          "description": "Application deployment.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationDeploymentModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationDeploymentModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationDeploymentModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationDeploymentModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationDeploymentModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationDeployments"
        ],
        "summary": "Update an application deployment.",
        "requestBody": {
          "description": "Application deployment.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationDeploymentModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationDeploymentModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationDeploymentModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationDeploymentModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationDeploymentModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applicationdeployments/{id}": {
      "get": {
        "tags": [
          "ApplicationDeployments"
        ],
        "summary": "Get an application deployment by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application deployment id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationDeploymentModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationDeploymentModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationDeployments"
        ],
        "summary": "Delete an application deployments.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application deployment id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/applicationenterprises": {
      "get": {
        "tags": [
          "ApplicationEnterprises"
        ],
        "summary": "Get all application enterprises.",
        "description": "<b>Returns a list of application enterprises.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationEnterpriseModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationEnterpriseModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationEnterprises"
        ],
        "summary": "Create an application enterprise.",
        "requestBody": {
          "description": "Application enterprise.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationEnterpriseModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationEnterpriseModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationEnterpriseModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationEnterpriseModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationEnterpriseModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationEnterprises"
        ],
        "summary": "Update an application enterprise.",
        "requestBody": {
          "description": "Application enterprise.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationEnterpriseModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationEnterpriseModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationEnterpriseModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationEnterpriseModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationEnterpriseModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applicationenterprises/{id}": {
      "get": {
        "tags": [
          "ApplicationEnterprises"
        ],
        "summary": "Get an application enterprise by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application enterprise id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationEnterpriseModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationEnterpriseModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationEnterprises"
        ],
        "summary": "Delete an application enterprise.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application enterprise id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/applicationexecutables": {
      "get": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Get all application executables.",
        "description": "<b>Returns a list of application executables.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "ExecutableCaption",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApplicationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationExecutableModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationExecutableModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Create an application executable.",
        "requestBody": {
          "description": "Application executables.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Update an application executable.",
        "requestBody": {
          "description": "Application executables.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applicationexecutables/{id}": {
      "get": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Get an application executable by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executables id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationExecutableModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationExecutableModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Delete an application executable.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executables id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/applicationexecutables/{id}/personalfiles": {
      "get": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Get the personal files of the specified application executable.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationExecutablePersonalFileModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationExecutablePersonalFileModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Create an application executable personal file.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Application executable personal file.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutablePersonalFileModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutablePersonalFileModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutablePersonalFileModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutablePersonalFileModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutablePersonalFileModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applicationexecutables/personalfiles": {
      "put": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Update an application executable personal file.",
        "description": "<b></b>",
        "requestBody": {
          "description": "Application executable personal file.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutablePersonalFileModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutablePersonalFileModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutablePersonalFileModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutablePersonalFileModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutablePersonalFileModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applicationexecutables/{id}/personalfiles/{personalFileId}": {
      "delete": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Delete an application executable personal file.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "personalFileId",
            "in": "path",
            "description": "Personal file id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applicationexecutables/{id}/deployments": {
      "get": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Get the deployments of the specified application executable.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationExecutableDeploymentModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationExecutableDeploymentModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Create an application executable deployment.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Application executable deployment.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableDeploymentModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableDeploymentModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableDeploymentModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableDeploymentModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableDeploymentModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applicationexecutables/deployments": {
      "put": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Update an application executable deployment.",
        "description": "<b></b>",
        "requestBody": {
          "description": "Application executable deployment.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableDeploymentModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableDeploymentModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableDeploymentModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableDeploymentModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableDeploymentModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applicationexecutables/{id}/deployments/{deploymentId}": {
      "delete": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Delete an application executable deployment.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "deploymentId",
            "in": "path",
            "description": "Deployment id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applicationexecutables/{id}/tasks": {
      "get": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Get the tasks of the specified application executable.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationExecutableTaskModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationExecutableTaskModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Create an application executable task.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Application executable task.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableTaskModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableTaskModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableTaskModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableTaskModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableTaskModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applicationexecutables/tasks": {
      "put": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Update an application executable task.",
        "description": "<b></b>",
        "requestBody": {
          "description": "Application executable task.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableTaskModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableTaskModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableTaskModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableTaskModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableTaskModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applicationexecutables/{id}/tasks/{taskId}": {
      "delete": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Delete an application executable task.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "Task id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applicationexecutables/{id}/licenses": {
      "get": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Get the licenses of the specified application executable.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationExecutableLicenseModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationExecutableLicenseModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Create an application executable license.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Application executable license.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableLicenseModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableLicenseModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableLicenseModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableLicenseModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableLicenseModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applicationexecutables/licenses": {
      "put": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Update an application executable license.",
        "description": "<b></b>",
        "requestBody": {
          "description": "Application executable license.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableLicenseModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableLicenseModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableLicenseModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableLicenseModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableLicenseModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applicationexecutables/{id}/licenses/{licenseId}": {
      "delete": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Delete an application executable license.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "licenseId",
            "in": "path",
            "description": "License id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applicationexecutables/{id}/cdimages": {
      "get": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Get the cd images of the specified application executable.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationExecutableCdImageModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationExecutableCdImageModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Create an application executable cd image.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Application executable cd image.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableCdImageModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableCdImageModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableCdImageModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableCdImageModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableCdImageModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applicationexecutables/cdimages": {
      "put": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Update an application executable cd image.",
        "description": "<b></b>",
        "requestBody": {
          "description": "Application executable cd image.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableCdImageModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableCdImageModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableCdImageModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableCdImageModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableCdImageModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applicationexecutables/{id}/cdimages/{cdimageId}": {
      "delete": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Delete an application executable cd image.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cdimageId",
            "in": "path",
            "description": "Cd image id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applicationexecutables/{id}/image": {
      "get": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Get the image of the specified application executable.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationExecutableModelImage"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationExecutableModelImage"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationExecutables"
        ],
        "summary": "Update the image of the specified application executable.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Application executable image.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelImage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelImage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelImage"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelImage"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationExecutableModelImage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applicationgroups": {
      "get": {
        "tags": [
          "ApplicationGroups"
        ],
        "summary": "Get all application groups.",
        "description": "<b>Returns a list of application groups.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "GroupName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationGroupModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationGroupModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationGroups"
        ],
        "summary": "Create an application group.",
        "requestBody": {
          "description": "Application group.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationGroups"
        ],
        "summary": "Update an application group.",
        "requestBody": {
          "description": "Application group.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applicationgroups/{id}": {
      "get": {
        "tags": [
          "ApplicationGroups"
        ],
        "summary": "Get an application group by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationGroupModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationGroupModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationGroups"
        ],
        "summary": "Delete an application group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/applicationgroups/{id}/applications": {
      "get": {
        "tags": [
          "ApplicationGroups"
        ],
        "summary": "Get the applications of the specified application group.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationGroupApplicationModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationGroupApplicationModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationGroups"
        ],
        "summary": "Add an application to the specified application group.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Application group application.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupApplicationModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupApplicationModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupApplicationModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupApplicationModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationGroupApplicationModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applicationgroups/{id}/applications/{applicationId}": {
      "delete": {
        "tags": [
          "ApplicationGroups"
        ],
        "summary": "Remove an application from the specified application group.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "Application id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applicationlicenses": {
      "get": {
        "tags": [
          "ApplicationLicenses"
        ],
        "summary": "Get all application executable licenses.",
        "description": "<b>Returns a list of application executable licenses.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "LicenseName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationLicenseModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationLicenseModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applicationlicenses/{id}": {
      "get": {
        "tags": [
          "ApplicationLicenses"
        ],
        "summary": "Get an application executable license by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable license id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationLicenseModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationLicenseModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/applicationpersonalfiles": {
      "get": {
        "tags": [
          "ApplicationPersonalFiles"
        ],
        "summary": "Get all application personal files.",
        "description": "<b>Returns a list of application personal files.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "PersonalFileName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PersonalFileCaption",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationPersonalFileModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationPersonalFileModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationPersonalFiles"
        ],
        "summary": "Create an application personal file.",
        "requestBody": {
          "description": "Application personal file.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationPersonalFileModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationPersonalFileModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationPersonalFileModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationPersonalFileModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationPersonalFileModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationPersonalFiles"
        ],
        "summary": "Update an application personal file.",
        "requestBody": {
          "description": "Application personal file.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationPersonalFileModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationPersonalFileModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationPersonalFileModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationPersonalFileModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationPersonalFileModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applicationpersonalfiles/{id}": {
      "get": {
        "tags": [
          "ApplicationPersonalFiles"
        ],
        "summary": "Get an application personal file by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application personal file id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationPersonalFileModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationPersonalFileModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationPersonalFiles"
        ],
        "summary": "Delete an application personal file.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application personal file id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/applications": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Get all applications.",
        "description": "<b>Returns a list of applications.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "ApplicationTitle",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "Create an application.",
        "requestBody": {
          "description": "Application.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Applications"
        ],
        "summary": "Update an application.",
        "requestBody": {
          "description": "Application.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applications/{id}": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Get an application by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "Applications"
        ],
        "summary": "Delete an application.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/applications/{id}/image": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Get the image of the specified application.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationModelImage"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationModelImage"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Applications"
        ],
        "summary": "Update the image of the specified application.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Application image.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelImage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelImage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelImage"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelImage"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationModelImage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applicationtasks": {
      "get": {
        "tags": [
          "ApplicationTasks"
        ],
        "summary": "Get all application executable tasks.",
        "description": "<b>Returns a list of application executable tasks.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "TaskName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTaskModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTaskModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationTasks"
        ],
        "summary": "Create an application executable task.",
        "requestBody": {
          "description": "Application executable task.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTaskModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTaskModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTaskModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTaskModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTaskModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationTasks"
        ],
        "summary": "Update an application executable task.",
        "requestBody": {
          "description": "Application executable task.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTaskModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTaskModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTaskModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTaskModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTaskModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/applicationtasks/{id}": {
      "get": {
        "tags": [
          "ApplicationTasks"
        ],
        "summary": "Get an application executable task by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable task id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTaskModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTaskModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationTasks"
        ],
        "summary": "Delete an application executable tasks.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application executable task id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/assets": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Get all assets.",
        "description": "<b>Returns a list of assets.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AssetModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Create an asset.",
        "requestBody": {
          "description": "Asset.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssetModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/AssetModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/AssetModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update an asset.",
        "requestBody": {
          "description": "Asset.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssetModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/AssetModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/AssetModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/assets/{id}": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Get an asset by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Asset id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AssetModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "Assets"
        ],
        "summary": "Delete an asset.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Asset id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/assettransactions": {
      "get": {
        "tags": [
          "AssetTransactions"
        ],
        "summary": "Get all asset transactions.",
        "description": "<b>Returns a list of asset transactions.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetTransactionModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AssetTransactionModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/assettransactions/{id}": {
      "get": {
        "tags": [
          "AssetTransactions"
        ],
        "summary": "Get a asset transaction by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Asset transaction id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetTransactionModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AssetTransactionModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/assettypes": {
      "get": {
        "tags": [
          "AssetTypes"
        ],
        "summary": "Get all asset types.",
        "description": "<b>Returns a list of asset types.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "AssetTypeName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetTypeModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AssetTypeModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssetTypes"
        ],
        "summary": "Create an asset type.",
        "requestBody": {
          "description": "Asset type.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetTypeModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetTypeModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssetTypeModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/AssetTypeModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/AssetTypeModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AssetTypes"
        ],
        "summary": "Update an asset type.",
        "requestBody": {
          "description": "Asset type.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetTypeModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetTypeModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssetTypeModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/AssetTypeModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/AssetTypeModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/assettypes/{id}": {
      "get": {
        "tags": [
          "AssetTypes"
        ],
        "summary": "Get an asset type by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Asset type id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetTypeModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AssetTypeModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "AssetTypes"
        ],
        "summary": "Delete an asset type.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Asset type id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/user/v2.0/assistancerequest/pending/any": {
      "get": {
        "tags": [
          "AssistanceRequest"
        ],
        "summary": "Gets if any assistance requests are pending for current user.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/v2.0/assistancerequest": {
      "post": {
        "tags": [
          "AssistanceRequest"
        ],
        "summary": "Creates assistance request for current user.",
        "requestBody": {
          "description": "Creation parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestModelUserCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestModelUserCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestModelUserCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestModelUserCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestModelUserCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AssistanceRequest"
        ],
        "summary": "Cancels pending assistance request for current user.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/assistancerequest": {
      "get": {
        "tags": [
          "AssistanceRequest"
        ],
        "summary": "Gets assistance requests.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/AssistanceRequestStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssistanceRequestModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AssistanceRequestModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssistanceRequest"
        ],
        "summary": "Create assistance request.",
        "requestBody": {
          "description": "Creation parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/assistancerequest/{id}": {
      "get": {
        "tags": [
          "AssistanceRequest"
        ],
        "summary": "Gets assistance request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Assistance request id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssistanceRequestModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AssistanceRequestModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/assistancerequest/{id}/reject": {
      "put": {
        "tags": [
          "AssistanceRequest"
        ],
        "summary": "Rejects assistance request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Request id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/assistancerequest/{id}/accept": {
      "put": {
        "tags": [
          "AssistanceRequest"
        ],
        "summary": "Accepts assistance request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Request id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/assistancerequesttype": {
      "get": {
        "tags": [
          "AssistanceRequestType"
        ],
        "summary": "Assistance request types.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssistanceRequestTypeModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AssistanceRequestTypeModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssistanceRequestType"
        ],
        "summary": "Creates assistance request type.",
        "requestBody": {
          "description": "Creation parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestTypeModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestTypeModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestTypeModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestTypeModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestTypeModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AssistanceRequestType"
        ],
        "summary": "Updates assistance request type.",
        "requestBody": {
          "description": "Update parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestTypeModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestTypeModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestTypeModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestTypeModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequestTypeModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/assistancerequesttype/{id}": {
      "get": {
        "tags": [
          "AssistanceRequestType"
        ],
        "summary": "Gets assistance request type.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Assistance request type id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssistanceRequestTypeModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AssistanceRequestTypeModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AssistanceRequestType"
        ],
        "summary": "Soft deletes assistance request type.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Assistance request type id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/assistancerequesttype/{id}/undelete": {
      "post": {
        "tags": [
          "AssistanceRequestType"
        ],
        "summary": "Undeletes assistance request type.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Assistance request type id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/attributes": {
      "get": {
        "tags": [
          "Attributes"
        ],
        "summary": "Get all attributes.",
        "description": "<b>Returns a list of attributes.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "AttributeName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Attributes"
        ],
        "summary": "Create an attribute.",
        "requestBody": {
          "description": "Attribute.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/AttributeModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/AttributeModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Attributes"
        ],
        "summary": "Update an attribute.",
        "requestBody": {
          "description": "Attribute.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/AttributeModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/AttributeModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/attributes/{id}": {
      "get": {
        "tags": [
          "Attributes"
        ],
        "summary": "Get an attribute by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Attribute id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "Attributes"
        ],
        "summary": "Delete an attribute.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Attribute id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/user/v2.0/auth/accesstoken": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Requests user access token.",
        "parameters": [
          {
            "name": "Username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenResultModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/v2.0/auth/accesstoken/refresh": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Refreshes user access token.",
        "parameters": [
          {
            "name": "Token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RefreshToken",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenResultModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/auth/accesstoken": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Requests operator access token.",
        "parameters": [
          {
            "name": "Username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RegisterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenResultModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/auth/accesstoken/refresh": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Refreshes operator access token.",
        "parameters": [
          {
            "name": "Token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RefreshToken",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RegisterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenResultModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/billingprofiles": {
      "get": {
        "tags": [
          "BillingProfiles"
        ],
        "summary": "Get all billing profiles.",
        "description": "<b>Returns a list of billing profiles.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "BillingProfileName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BillingProfiles"
        ],
        "summary": "Create a billing profile.",
        "requestBody": {
          "description": "Billing profile.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BillingProfiles"
        ],
        "summary": "Update a billing profile.",
        "requestBody": {
          "description": "Billing profile.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/billingprofiles/{id}": {
      "get": {
        "tags": [
          "BillingProfiles"
        ],
        "summary": "Get a billing profile by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Billing profile id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "BillingProfiles"
        ],
        "summary": "Delete a billing profile.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Billing profile id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/billingprofiles/{id}/rates": {
      "get": {
        "tags": [
          "BillingProfiles"
        ],
        "summary": "Get the rates of the specified billing profile.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Billing profile id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BillingProfileRateModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BillingProfileRateModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "post": {
        "tags": [
          "BillingProfiles"
        ],
        "summary": "Create a billing profile rate.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Billing profile id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Billing profile rate.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileRateModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileRateModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileRateModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileRateModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileRateModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/billingprofiles/rates": {
      "put": {
        "tags": [
          "BillingProfiles"
        ],
        "summary": "Update a billing profile rate.",
        "requestBody": {
          "description": "Billing profile rate.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileRateModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileRateModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileRateModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileRateModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileRateModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/billingprofiles/{id}/rates/{billingProfileRateId}": {
      "delete": {
        "tags": [
          "BillingProfiles"
        ],
        "summary": "Delete a billing profile rate.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Billing profile id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "billingProfileRateId",
            "in": "path",
            "description": "Billing profile rate id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/companion/connections": {
      "get": {
        "tags": [
          "Companion"
        ],
        "summary": "Gets active companion connections.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanionConnectionInfo"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanionConnectionInfo"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/deposittransactions": {
      "get": {
        "tags": [
          "DepositTransactions"
        ],
        "summary": "Get all deposit transactions.",
        "description": "<b>Returns a list of deposit transactions.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepositTransactionModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DepositTransactionModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DepositTransactions"
        ],
        "summary": "Create a deposit transaction.",
        "requestBody": {
          "description": "Deposit transaction.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepositTransactionModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DepositTransactionModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DepositTransactionModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/DepositTransactionModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/DepositTransactionModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/deposittransactions/{id}": {
      "get": {
        "tags": [
          "DepositTransactions"
        ],
        "summary": "Get a deposit transaction by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Deposit transaction id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepositTransactionModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DepositTransactionModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/devices": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Get all devices.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "DeviceType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/DeviceType"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Create an device.",
        "requestBody": {
          "description": "Device.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Devices"
        ],
        "summary": "Updates an device.",
        "requestBody": {
          "description": "Device.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/DeviceModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Devices"
        ],
        "summary": "Deletes specified device.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Device id.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/devices/{id}/enable": {
      "put": {
        "tags": [
          "Devices"
        ],
        "summary": "Enables specified device.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Device id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/devices/{id}/disable": {
      "put": {
        "tags": [
          "Devices"
        ],
        "summary": "Disables specified device.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Device id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/devices/hosts": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Gets devices and host associations.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "HostId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DeviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceHostModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceHostModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/devices/{deviceId}/host/{hostId}": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Assigns device specified by deviceId to the host specified by hostId.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "Device id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "hostId",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid hostId specified."
          }
        }
      },
      "delete": {
        "tags": [
          "Devices"
        ],
        "summary": "Unassigns device specified by deviceId to the host specified by hostId.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "Device id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "hostId",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid hostId specified."
          }
        }
      }
    },
    "/api/v2.0/events/channel/{uniqueChannelName}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Gets or creates event channel and returns next read event.",
        "parameters": [
          {
            "name": "uniqueChannelName",
            "in": "path",
            "description": "Unique channel name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Optional event id filter.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Events"
        ],
        "summary": "Releases existing event message channel.",
        "parameters": [
          {
            "name": "uniqueChannelName",
            "in": "path",
            "description": "Unique channel name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/events/entity": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Gets or creates entity event channel and returns next read event.",
        "parameters": [
          {
            "name": "connectionId",
            "in": "query",
            "description": "Unique connection id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "List of filtered entity types.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Events"
        ],
        "summary": "Releases existing entity message channel.",
        "parameters": [
          {
            "name": "connectionId",
            "in": "query",
            "description": "Unique connection id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/events/metadata": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Gets event messages metdata.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventGroupMetadata"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventGroupMetadata"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/hostgroups": {
      "get": {
        "tags": [
          "HostGroups"
        ],
        "summary": "Get all host groups.",
        "description": "<b>Returns a list of host groups.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "GroupName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostGroupModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/HostGroupModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "HostGroups"
        ],
        "summary": "Create a host group.",
        "requestBody": {
          "description": "Host group.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostGroupModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HostGroupModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HostGroupModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/HostGroupModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/HostGroupModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "HostGroups"
        ],
        "summary": "Update a host group.",
        "requestBody": {
          "description": "Host group.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostGroupModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HostGroupModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HostGroupModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/HostGroupModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/HostGroupModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/hostgroups/{id}": {
      "get": {
        "tags": [
          "HostGroups"
        ],
        "summary": "Get a host group by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostGroupModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/HostGroupModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "HostGroups"
        ],
        "summary": "Delete a host group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/hosticons": {
      "get": {
        "tags": [
          "HostIcons"
        ],
        "summary": "Get all host icons.",
        "description": "<b>Returns a list of host icons.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostIconModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/HostIconModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "HostIcons"
        ],
        "summary": "Create a host icon.",
        "requestBody": {
          "description": "Host icon.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostIconModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HostIconModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HostIconModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/HostIconModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/HostIconModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "HostIcons"
        ],
        "summary": "Update a host icon.",
        "requestBody": {
          "description": "Host icon.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostIconModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HostIconModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HostIconModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/HostIconModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/HostIconModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/hosticons/{id}": {
      "get": {
        "tags": [
          "HostIcons"
        ],
        "summary": "Get a host icon by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "HostIcon id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostIconModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/HostIconModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "HostIcons"
        ],
        "summary": "Delete a host icon.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host icon id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/hostlayoutgroups": {
      "get": {
        "tags": [
          "HostLayoutGroups"
        ],
        "summary": "Get all host layout groups.",
        "description": "<b>Returns a list of host layout groups.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "LayoutGroupName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostLayoutGroupModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/HostLayoutGroupModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "HostLayoutGroups"
        ],
        "summary": "Create a host layout group.",
        "requestBody": {
          "description": "Host layout group.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutGroupModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutGroupModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutGroupModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutGroupModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutGroupModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "HostLayoutGroups"
        ],
        "summary": "Update a host layout group.",
        "requestBody": {
          "description": "Host layout group.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutGroupModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutGroupModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutGroupModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutGroupModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/HostLayoutGroupModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/hostlayoutgroups/{id}": {
      "get": {
        "tags": [
          "HostLayoutGroups"
        ],
        "summary": "Get a host layout by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host layout id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostLayoutGroupModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/HostLayoutGroupModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "HostLayoutGroups"
        ],
        "summary": "Delete a host layout group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host layout group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/hosts": {
      "get": {
        "tags": [
          "Hosts"
        ],
        "summary": "Get all hosts.",
        "description": "<b>Returns a list of hosts.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "HostName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "HostType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/HostType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/HostModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Hosts"
        ],
        "summary": "Create a host.",
        "requestBody": {
          "description": "Host.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HostModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HostModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/HostModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/HostModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Hosts"
        ],
        "summary": "Update a host.",
        "requestBody": {
          "description": "Host.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HostModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HostModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/HostModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/HostModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/hosts/{id}": {
      "get": {
        "tags": [
          "Hosts"
        ],
        "summary": "Get a host by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/HostModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "Hosts"
        ],
        "summary": "Delete a host.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/hosts/{id}/hostdevices": {
      "get": {
        "tags": [
          "Hosts"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceHostModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceHostModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Hosts"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceHostModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceHostModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceHostModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/DeviceHostModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/DeviceHostModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/hosts/{id}/hostdevices/{hostDeviceId}": {
      "delete": {
        "tags": [
          "Hosts"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "hostDeviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/invoicepayments": {
      "get": {
        "tags": [
          "InvoicePayments"
        ],
        "summary": "Get all invoice payments.",
        "description": "<b>Returns a list of invoice payments.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "InvoiceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicePaymentModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicePaymentModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "InvoicePayments"
        ],
        "summary": "Create an invoice payment.",
        "requestBody": {
          "description": "Invoice payment.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoicePaymentModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoicePaymentModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoicePaymentModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/InvoicePaymentModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/InvoicePaymentModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/invoicepayments/{id}": {
      "get": {
        "tags": [
          "InvoicePayments"
        ],
        "summary": "Get an invoice payment by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice payment id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicePaymentModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicePaymentModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/invoices": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get all invoices.",
        "description": "<b>Returns a list of invoices.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IsVoided",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/invoices/{id}": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get an invoice by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/invoices/{id}/void": {
      "put": {
        "tags": [
          "Invoices"
        ],
        "summary": "Void the specified invoice.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Refund options.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RefundOptions"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/RefundOptions"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/RefundOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/log": {
      "get": {
        "tags": [
          "Log"
        ],
        "summary": "Gets log entries.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "DateCompareOption",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/CompareRangeOptions"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "MessageType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/LogMessageType"
            }
          },
          {
            "name": "ModuleType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ModuleType"
            }
          },
          {
            "name": "MessageCompareOption",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/CompareStringOptions"
            }
          },
          {
            "name": "Message",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/LogModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/log/{id}": {
      "get": {
        "tags": [
          "Log"
        ],
        "summary": "Gets log entry by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/LogModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/log/{id}/exception": {
      "get": {
        "tags": [
          "Log"
        ],
        "summary": "Gets log exception.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Log id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogExceptionModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/LogExceptionModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/log/clear": {
      "post": {
        "tags": [
          "Log"
        ],
        "summary": "Clears log.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/monetaryunits": {
      "get": {
        "tags": [
          "MonetaryUnits"
        ],
        "summary": "Get all monetary units.",
        "description": "<b>Returns a list of monetary units.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonetaryUnitModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/MonetaryUnitModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MonetaryUnits"
        ],
        "summary": "Create a monetary unit.",
        "requestBody": {
          "description": "Monetary unit.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MonetaryUnitModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MonetaryUnitModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MonetaryUnitModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/MonetaryUnitModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/MonetaryUnitModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MonetaryUnits"
        ],
        "summary": "Update a monetary unit.",
        "requestBody": {
          "description": "Monetary unit.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MonetaryUnitModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MonetaryUnitModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MonetaryUnitModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/MonetaryUnitModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/MonetaryUnitModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/monetaryunits/{id}": {
      "get": {
        "tags": [
          "MonetaryUnits"
        ],
        "summary": "Get a monetary unit by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Monetary unit id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonetaryUnitModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/MonetaryUnitModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "MonetaryUnits"
        ],
        "summary": "Delete a monetary unit.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Monetary unit id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/operators": {
      "get": {
        "tags": [
          "Operators"
        ],
        "summary": "Get all operators.",
        "description": "<b>Returns a list of operators.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Username",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsDisabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperatorModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/OperatorModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Operators"
        ],
        "summary": "Create an operator.",
        "requestBody": {
          "description": "Operator.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OperatorModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OperatorModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OperatorModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/OperatorModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/OperatorModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Operators"
        ],
        "summary": "Update an operator.",
        "requestBody": {
          "description": "Operator.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OperatorModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OperatorModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OperatorModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/OperatorModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/OperatorModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/operators/{id}": {
      "get": {
        "tags": [
          "Operators"
        ],
        "summary": "Get an operator by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Operator id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperatorModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/OperatorModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "Operators"
        ],
        "summary": "Delete an operator.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Operator id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/operators/current": {
      "get": {
        "tags": [
          "Operators"
        ],
        "summary": "Get current operator.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperatorModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/OperatorModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/operators/current/shift/options": {
      "get": {
        "tags": [
          "Operators"
        ],
        "summary": "Gets current operator shift options.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftOptionsModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftOptionsModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/operators/current/shift/start": {
      "post": {
        "tags": [
          "Operators"
        ],
        "summary": "Starts shift for current operator.",
        "requestBody": {
          "description": "Start shift model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftStartModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftStartModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftStartModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ShiftStartModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ShiftStartModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/operators/{operatorId}/shift/start": {
      "post": {
        "tags": [
          "Operators"
        ],
        "summary": "Starts shift.",
        "parameters": [
          {
            "name": "operatorId",
            "in": "path",
            "description": "Operator id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Start shift model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftStartModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftStartModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftStartModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ShiftStartModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ShiftStartModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/operators/current/shift/active/lock": {
      "put": {
        "tags": [
          "Operators"
        ],
        "summary": "Locks active shift for current operator.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/operators/current/shift/active/unlock": {
      "put": {
        "tags": [
          "Operators"
        ],
        "summary": "Unlocks active shift for current operator.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/operators/current/shift/active": {
      "get": {
        "tags": [
          "Operators"
        ],
        "summary": "Returns active shift information for current operator.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActiveShiftModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ActiveShiftModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/operators/current/shift/active/end": {
      "post": {
        "tags": [
          "Operators"
        ],
        "summary": "Ends active shift for current operator.",
        "requestBody": {
          "description": "End model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftEndModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftEndModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftEndModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ShiftEndModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ShiftEndModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/operators/current/shift/active/expected": {
      "get": {
        "tags": [
          "Operators"
        ],
        "summary": "Returns active shift expected payments information.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftExpectedModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftExpectedModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/operators/current/password": {
      "post": {
        "tags": [
          "Operators"
        ],
        "summary": "Sets or updates current operator password.",
        "requestBody": {
          "description": "Password model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OperatorPasswordUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OperatorPasswordUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OperatorPasswordUpdateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/OperatorPasswordUpdateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/OperatorPasswordUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get all orders.",
        "description": "<b>Returns a list of orders.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderStatus"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/OrderModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/orders/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get an order by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/OrderModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/orders/{id}/invoice": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Invoice the specified order.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/orders/{id}/complete": {
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "Complete the specified order.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/orders/{id}/cancel": {
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "Cancel the specified order.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/orders/{id}/delivered": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get the delivered status of the specified order.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanGetResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanGetResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "Set the specified order as delivered.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/orders/{id}/orderlines/{orderLineId}/delivered": {
      "get": {
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orderLineId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderLineDeliveredStatusModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/OrderLineDeliveredStatusModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orderLineId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderLineDeliveredStatusModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderLineDeliveredStatusModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderLineDeliveredStatusModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/OrderLineDeliveredStatusModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/OrderLineDeliveredStatusModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/paymentintent/deposit": {
      "post": {
        "tags": [
          "PaymentIntent"
        ],
        "summary": "Creates new deposit intent.",
        "requestBody": {
          "description": "Parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentIntentCreateParametersDepositModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentIntentCreateParametersDepositModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentIntentCreateParametersDepositModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/PaymentIntentCreateParametersDepositModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/PaymentIntentCreateParametersDepositModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntentCreateResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntentCreateResultModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/paymentintent": {
      "get": {
        "tags": [
          "PaymentIntent"
        ],
        "summary": "Get all Payment intents.",
        "description": "<b>Returns a list of Payment intents.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "State",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PaymentIntentState"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntentModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntentModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/paymentintent/{id}": {
      "get": {
        "tags": [
          "PaymentIntent"
        ],
        "summary": "Get a payment intent by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payment intent id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntentModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntentModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/paymentintent/{guid}": {
      "get": {
        "tags": [
          "PaymentIntent"
        ],
        "summary": "Get a payment intent by guid.",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "Payment intent guid.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntentModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntentModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid guid specified."
          }
        }
      }
    },
    "/api/v2.0/paymentmethods": {
      "get": {
        "tags": [
          "PaymentMethods"
        ],
        "summary": "Get all payment methods.",
        "description": "<b>Returns a list of payment methods.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PaymentMethods"
        ],
        "summary": "Create a payment method.",
        "requestBody": {
          "description": "Payment method.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PaymentMethods"
        ],
        "summary": "Update a payment method.",
        "requestBody": {
          "description": "Payment method.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/paymentmethods/{id}": {
      "get": {
        "tags": [
          "PaymentMethods"
        ],
        "summary": "Get a payment method by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payment method id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "PaymentMethods"
        ],
        "summary": "Delete a payment method.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payment method id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/paymentproviders": {
      "get": {
        "tags": [
          "PaymentProviders"
        ],
        "summary": "Gets a list of supported providers.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentProviderMetadataModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentProviderMetadataModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/paymentproviders/{providerGuid}": {
      "get": {
        "tags": [
          "PaymentProviders"
        ],
        "summary": "Gets provider by its guid.",
        "parameters": [
          {
            "name": "providerGuid",
            "in": "path",
            "description": "Provider guid.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentProviderMetadataModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentProviderMetadataModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/paymentproviders/{providerGuid}/options": {
      "get": {
        "tags": [
          "PaymentProviders"
        ],
        "summary": "Gets provider options.",
        "parameters": [
          {
            "name": "providerGuid",
            "in": "path",
            "description": "Provider guid.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PaymentProviders"
        ],
        "summary": "Sets provider options.",
        "parameters": [
          {
            "name": "providerGuid",
            "in": "path",
            "description": "Provider guid.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Option key-value.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "application/octet-stream": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "application/x-msgpack": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/pointstransactions": {
      "get": {
        "tags": [
          "PointsTransactions"
        ],
        "summary": "Gets list of points transactions.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PointsTransactionType"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PointTransactionModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PointTransactionModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PointsTransactions"
        ],
        "summary": "Create a points transaction.",
        "requestBody": {
          "description": "Points transaction.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PointTransactionModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PointTransactionModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PointTransactionModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/PointTransactionModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/PointTransactionModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/pointstransactions/{id}": {
      "get": {
        "tags": [
          "PointsTransactions"
        ],
        "summary": "Gets points transaction by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PointTransactionModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PointTransactionModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/productgroups": {
      "get": {
        "tags": [
          "ProductGroups"
        ],
        "summary": "Get all product groups.",
        "description": "<b>Returns a list of product groups.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "GroupName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGroupModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGroupModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProductGroups"
        ],
        "summary": "Create a product group.",
        "requestBody": {
          "description": "Product group.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductGroups"
        ],
        "summary": "Update a product group.",
        "requestBody": {
          "description": "Product group.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/productgroups/{id}": {
      "get": {
        "tags": [
          "ProductGroups"
        ],
        "summary": "Get a product group by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGroupModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGroupModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "ProductGroups"
        ],
        "summary": "Delete a product group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get all products.",
        "description": "<b>Returns a list of products.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "ProductType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ProductType"
            }
          },
          {
            "name": "ProductGroupId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProductName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProductModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a product.",
        "requestBody": {
          "description": "Product.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update a product.",
        "requestBody": {
          "description": "Product.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get a product by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProductModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a product.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/products/{id}/purchaseavailability": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get product purchase availability.",
        "description": "<b>Returns purchase availability of the product.</b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPurchaseAvailabilityModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPurchaseAvailabilityModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update product purchase availability.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPurchaseAvailabilityModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPurchaseAvailabilityModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPurchaseAvailabilityModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductPurchaseAvailabilityModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductPurchaseAvailabilityModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/products/{id}/images": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get the images of the specified product.",
        "description": "<b>Returns a list of product images.</b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductImageModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductImageModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a product image.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductImageModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductImageModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductImageModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductImageModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductImageModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/products/images": {
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update a product image.",
        "description": "<b></b>",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductImageModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductImageModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductImageModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductImageModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductImageModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/products/{id}/images/{productImageId}": {
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a product image.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "productImageId",
            "in": "path",
            "description": "Product image id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/products/{id}/userprices": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get the user prices of the specified product.",
        "description": "<b>Returns a list of product user prices.</b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductUserPriceModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductUserPriceModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a product user price.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Product user price.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUserPriceModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUserPriceModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUserPriceModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductUserPriceModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductUserPriceModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/products/userprices": {
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update a product user price.",
        "description": "<b></b>",
        "requestBody": {
          "description": "Product user price.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUserPriceModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUserPriceModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUserPriceModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductUserPriceModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductUserPriceModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/products/{id}/userprices/{userPriceId}": {
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a product user price.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userPriceId",
            "in": "path",
            "description": "Product user price id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/products/{id}/disallowedusergroups": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get disallowed user groups of the specified product.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDisallowedUserGroupModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDisallowedUserGroupModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a disallowed user group.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDisallowedUserGroupModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDisallowedUserGroupModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDisallowedUserGroupModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductDisallowedUserGroupModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductDisallowedUserGroupModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/products/disallowedusergroups": {
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update a disallowed user group.",
        "description": "<b></b>",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDisallowedUserGroupModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDisallowedUserGroupModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDisallowedUserGroupModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductDisallowedUserGroupModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductDisallowedUserGroupModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/products/{id}/disallowedusergroups/{productDisallowedUserGroupId}": {
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a disallowed user group.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "productDisallowedUserGroupId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/products/bundle/{id}/bundledproducts": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get the bundled products of the specified bundle.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bundle id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductBundledModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductBundledModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a bundled product.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bundle id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Bundled product.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/products/bundle/bundledproducts": {
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update a bundled product.",
        "description": "<b></b>",
        "requestBody": {
          "description": "Bundled product",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/products/bundle/{id}/bundledproducts/{bundledProductId}": {
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a bundled product.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bundle id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "bundledProductId",
            "in": "path",
            "description": "Bundled product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/products/bundle/{id}/bundledproducts/{bundledProductId}/userprices": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get the user prices of the specified bundled product.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bundle id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "bundledProductId",
            "in": "path",
            "description": "Bundled product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductBundledUserPriceModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductBundledUserPriceModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a bundled product user price.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bundle id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "bundledProductId",
            "in": "path",
            "description": "Bundled product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Product bundle user price.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledUserPriceModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledUserPriceModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledUserPriceModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledUserPriceModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledUserPriceModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/products/bundle/bundledproducts/userprices": {
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update a bundled product user price.",
        "description": "<b></b>",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledUserPriceModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledUserPriceModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledUserPriceModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledUserPriceModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundledUserPriceModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/products/bundle/{id}/bundledproducts/{bundledProductId}/userprices/{userPriceId}": {
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a bundled product user price.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "bundledProductId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userPriceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/products/time/{id}/usageavailability": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get time product usage availability.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Time product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductTimeUsageAvailabilityModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProductTimeUsageAvailabilityModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update time product usage availability.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Time product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Usage availability.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeUsageAvailabilityModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeUsageAvailabilityModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeUsageAvailabilityModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeUsageAvailabilityModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeUsageAvailabilityModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/products/time/{id}/disallowedhostgroups": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get disallowed host groups of the specified time product.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Time product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductTimeDisallowedHostGroupModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductTimeDisallowedHostGroupModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a disallowed host group.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Time product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Time product disallowed host group.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeDisallowedHostGroupModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeDisallowedHostGroupModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeDisallowedHostGroupModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeDisallowedHostGroupModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeDisallowedHostGroupModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/products/time/disallowedhostgroups": {
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update a disallowed host group.",
        "description": "<b></b>",
        "requestBody": {
          "description": "Time product disallowed host group.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeDisallowedHostGroupModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeDisallowedHostGroupModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeDisallowedHostGroupModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeDisallowedHostGroupModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ProductTimeDisallowedHostGroupModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/products/time/{id}/disallowedhostgroups/{timeProductDisallowedHostGroupId}": {
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a disallowed host group.",
        "description": "<b></b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Time product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "timeProductDisallowedHostGroupId",
            "in": "path",
            "description": "Time product disallowed host group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/productsstock": {
      "get": {
        "tags": [
          "ProductsStock"
        ],
        "summary": "Get all products stock.",
        "description": "<b>Returns a list of product stock.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStockModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStockModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductsStock"
        ],
        "summary": "Update product stock.",
        "requestBody": {
          "description": "Product stock.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockTransactionCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StockTransactionCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StockTransactionCreateModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/StockTransactionCreateModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/StockTransactionCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/productsstock/{id}": {
      "get": {
        "tags": [
          "ProductsStock"
        ],
        "summary": "Get product stock.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStockModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStockModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/recovery/password/{username}/phone": {
      "post": {
        "tags": [
          "Recovery"
        ],
        "summary": "Initiates password recovery by mobile phone.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "User name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordRecoveryStartResultModelByMobile"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordRecoveryStartResultModelByMobile"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/recovery/password/{username}/email": {
      "post": {
        "tags": [
          "Recovery"
        ],
        "summary": "Initiates password recovery by email.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "User name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordRecoveryStartResultModelByEmail"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordRecoveryStartResultModelByEmail"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/recovery/password/{token}/{confirmationCode}/complete": {
      "post": {
        "tags": [
          "Recovery"
        ],
        "summary": "Completes password recovery.",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confirmationCode",
            "in": "path",
            "description": "Confirmation code.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "newPassword",
            "in": "query",
            "description": "New password value.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordRecoveryCompleteResultCode"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordRecoveryCompleteResultCode"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/registers": {
      "get": {
        "tags": [
          "Registers"
        ],
        "summary": "Get all registers.",
        "description": "<b>Returns a list of registers.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Registers"
        ],
        "summary": "Create a register.",
        "requestBody": {
          "description": "Register.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Registers"
        ],
        "summary": "Update a register.",
        "requestBody": {
          "description": "Register.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/registers/{id}": {
      "get": {
        "tags": [
          "Registers"
        ],
        "summary": "Get a register by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Register id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "Registers"
        ],
        "summary": "Delete a register.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Register id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "put": {
        "tags": [
          "Registers"
        ],
        "summary": "Undelete a register.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Register id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/registertransactions": {
      "get": {
        "tags": [
          "RegisterTransactions"
        ],
        "summary": "Get all register transactions.",
        "description": "<b>Returns a list of register transactions.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterTransactionModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterTransactionModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/registertransactions/{id}": {
      "get": {
        "tags": [
          "RegisterTransactions"
        ],
        "summary": "Get a register transaction by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Register transaction id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterTransactionModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterTransactionModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/reservations": {
      "get": {
        "tags": [
          "Reservations"
        ],
        "summary": "Get all reservations.",
        "description": "<b>Returns a list of reservations.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ReservationStatus"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ContactPhone",
            "in": "query",
            "schema": {
              "maxLength": 20,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "ContactEmail",
            "in": "query",
            "schema": {
              "maxLength": 254,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Reservations"
        ],
        "summary": "Create a reservation.",
        "requestBody": {
          "description": "Reservation.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ReservationModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ReservationModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Reservations"
        ],
        "summary": "Update a reservation.",
        "requestBody": {
          "description": "Reservation.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ReservationModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ReservationModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/reservations/{id}": {
      "get": {
        "tags": [
          "Reservations"
        ],
        "summary": "Get a reservation by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Reservation id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "Reservations"
        ],
        "summary": "Delete a reservation.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Reservation id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/salepresets/time": {
      "get": {
        "tags": [
          "SalePresets"
        ],
        "summary": "Get all time sale presets.",
        "description": "<b>Returns a list of time sale presets.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeSalePresetModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/TimeSalePresetModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SalePresets"
        ],
        "summary": "Create a time sale preset.",
        "requestBody": {
          "description": "Time sale preset.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeSalePresetModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeSalePresetModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TimeSalePresetModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/TimeSalePresetModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/TimeSalePresetModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SalePresets"
        ],
        "summary": "Update a time sale preset.",
        "requestBody": {
          "description": "Time sale preset.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeSalePresetModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeSalePresetModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TimeSalePresetModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/TimeSalePresetModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/TimeSalePresetModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/salepresets/time/{id}": {
      "get": {
        "tags": [
          "SalePresets"
        ],
        "summary": "Get a time sale preset by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Time sale preset id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeSalePresetModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/TimeSalePresetModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "SalePresets"
        ],
        "summary": "Delete a time sale preset.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Time sale preset id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/salepresets/money": {
      "get": {
        "tags": [
          "SalePresets"
        ],
        "summary": "Get all money sale presets.",
        "description": "<b>Returns a list of money sale presets.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoneySalePresetModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/MoneySalePresetModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SalePresets"
        ],
        "summary": "Create a money sale preset.",
        "requestBody": {
          "description": "Money sale preset.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoneySalePresetModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MoneySalePresetModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MoneySalePresetModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/MoneySalePresetModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/MoneySalePresetModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SalePresets"
        ],
        "summary": "Update a money sale preset.",
        "requestBody": {
          "description": "Money sale preset.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoneySalePresetModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MoneySalePresetModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MoneySalePresetModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/MoneySalePresetModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/MoneySalePresetModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/salepresets/money/{id}": {
      "get": {
        "tags": [
          "SalePresets"
        ],
        "summary": "Get a money sale preset by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Money sale preset id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoneySalePresetModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/MoneySalePresetModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "SalePresets"
        ],
        "summary": "Delete a money sale preset.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Money sale preset id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/shift": {
      "get": {
        "tags": [
          "Shift"
        ],
        "summary": "Returns shifts.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "OperatorId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RegisterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/shift/{id}": {
      "get": {
        "tags": [
          "Shift"
        ],
        "summary": "Returns shifts.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Shift id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/shift/{id}/end": {
      "put": {
        "tags": [
          "Shift"
        ],
        "summary": "Ends shift.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Shift id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "End model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftEndModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftEndModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftEndModel"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/ShiftEndModel"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/ShiftEndModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/shift/{id}/lock": {
      "put": {
        "tags": [
          "Shift"
        ],
        "summary": "Locks shift.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Shift id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/shift/{id}/unlock": {
      "put": {
        "tags": [
          "Shift"
        ],
        "summary": "Unlocks shift.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Shift id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/shift/{id}/expected": {
      "get": {
        "tags": [
          "Shift"
        ],
        "summary": "Returns shift expected values.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Shift id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftExpectedModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftExpectedModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/shiftcount": {
      "get": {
        "tags": [
          "ShiftCount"
        ],
        "summary": "Gets shift counts.",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ShiftId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftCountModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftCountModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/shiftcount/{id}": {
      "get": {
        "tags": [
          "ShiftCount"
        ],
        "summary": "Gets shift count.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Shift count id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftCountModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftCountModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/smsproviders": {
      "get": {
        "tags": [
          "SmsProviders"
        ],
        "summary": "Gets a list of supported providers.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentProviderMetadataModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentProviderMetadataModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/smsproviders/{providerGuid}": {
      "get": {
        "tags": [
          "SmsProviders"
        ],
        "summary": "Gets provider by its guid.",
        "parameters": [
          {
            "name": "providerGuid",
            "in": "path",
            "description": "Provider guid.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentProviderMetadataModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentProviderMetadataModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/smsproviders/{providerGuid}/options": {
      "get": {
        "tags": [
          "SmsProviders"
        ],
        "summary": "Gets provider options.",
        "parameters": [
          {
            "name": "providerGuid",
            "in": "path",
            "description": "Provider guid.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SmsProviders"
        ],
        "summary": "Sets provider options.",
        "parameters": [
          {
            "name": "providerGuid",
            "in": "path",
            "description": "Provider guid.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Option key-value.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "application/octet-stream": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "application/x-msgpack": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/stocktransactions": {
      "get": {
        "tags": [
          "StockTransactions"
        ],
        "summary": "Get all stock transactions.",
        "description": "<b>Returns a list of stock transactions.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockTransactionModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StockTransactionModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/stocktransactions/{id}": {
      "get": {
        "tags": [
          "StockTransactions"
        ],
        "summary": "Get a stock transaction by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Stock transaction id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockTransactionModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StockTransactionModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/storeoptions": {
      "get": {
        "tags": [
          "StoreOptions"
        ],
        "summary": "Reads options from the store.",
        "parameters": [
          {
            "name": "optionsType",
            "in": "query",
            "description": "Options type.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOptionsReadPack"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "StoreOptions"
        ],
        "summary": "Writes specified options to the store.",
        "requestBody": {
          "description": "Options pack.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreOptionsWritePack"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreOptionsWritePack"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StoreOptionsWritePack"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/StoreOptionsWritePack"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/StoreOptionsWritePack"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/taxes": {
      "get": {
        "tags": [
          "Taxes"
        ],
        "summary": "Get all taxes.",
        "description": "<b>Returns a list of taxes.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/TaxModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Taxes"
        ],
        "summary": "Create a tax.",
        "requestBody": {
          "description": "Tax.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaxModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/TaxModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/TaxModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Taxes"
        ],
        "summary": "Update a tax.",
        "requestBody": {
          "description": "Tax.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaxModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/TaxModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/TaxModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/taxes/{id}": {
      "get": {
        "tags": [
          "Taxes"
        ],
        "summary": "Get a tax by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tax id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/TaxModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "Taxes"
        ],
        "summary": "Delete a tax.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tax id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/tokens/{token}/{confirmationCode}/{tokenType}/valid": {
      "get": {
        "tags": [
          "Tokens"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confirmationCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tokenType",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TokenType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/useragreements": {
      "get": {
        "tags": [
          "UserAgreements"
        ],
        "summary": "Get all user agreements.",
        "description": "<b>Returns a list of user agreements.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "IsEnabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAgreementModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserAgreementModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserAgreements"
        ],
        "summary": "Create a user agreement.",
        "requestBody": {
          "description": "User agreement.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAgreementModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAgreementModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserAgreementModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserAgreementModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserAgreementModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UserAgreements"
        ],
        "summary": "Update a user agreement.",
        "requestBody": {
          "description": "User agreement.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAgreementModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAgreementModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserAgreementModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserAgreementModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserAgreementModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/useragreements/{id}": {
      "get": {
        "tags": [
          "UserAgreements"
        ],
        "summary": "Get a user agreement by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User agreement id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAgreementModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserAgreementModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "UserAgreements"
        ],
        "summary": "Delete a user agreement.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User agreement id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/useragreements/{id}/resetstates": {
      "delete": {
        "tags": [
          "UserAgreements"
        ],
        "summary": "Reset the user states of a user agreement.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User agreement id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/usergroups": {
      "get": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Get all user groups.",
        "description": "<b>Returns a list of user groups.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "GroupName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Create a user group.",
        "requestBody": {
          "description": "User group.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Update a user group.",
        "requestBody": {
          "description": "User group.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/usergroups/{id}": {
      "get": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Get a user group by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Delete a user group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User group id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/usergroups/{id}/disallowedhostgroups": {
      "get": {
        "tags": [
          "UserGroups"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGroupDisallowedHostGroupModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGroupDisallowedHostGroupModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserGroups"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupDisallowedHostGroupModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupDisallowedHostGroupModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupDisallowedHostGroupModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupDisallowedHostGroupModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupDisallowedHostGroupModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/usergroups/disallowedhostgroups": {
      "put": {
        "tags": [
          "UserGroups"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupDisallowedHostGroupModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupDisallowedHostGroupModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupDisallowedHostGroupModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupDisallowedHostGroupModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupDisallowedHostGroupModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/usergroups/{id}/disallowedhostgroups/{userGroupDisallowedHostGroupId}": {
      "delete": {
        "tags": [
          "UserGroups"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userGroupDisallowedHostGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users.",
        "description": "<b>Returns a list of users.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "UserGroupId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Username",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SmartCardUID",
            "in": "query",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "IsGuest",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsDisabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a user.",
        "requestBody": {
          "description": "User.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update a user.",
        "requestBody": {
          "description": "User.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/v2.0/users/{id}/attributes": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserAttributeModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserAttributeModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAttributeModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAttributeModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserAttributeModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserAttributeModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserAttributeModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/users/attributes": {
      "put": {
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAttributeModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAttributeModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserAttributeModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserAttributeModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserAttributeModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/users/{id}/attributes/{userAttributeId}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userAttributeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/users/{id}/notes": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserNoteModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserNoteModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserNoteModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserNoteModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserNoteModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserNoteModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserNoteModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/users/{id}/notes/{userNoteId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userNoteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserNoteModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserNoteModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userNoteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/users/notes": {
      "put": {
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserNoteModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserNoteModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserNoteModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserNoteModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserNoteModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/users/{id}/picture": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get the picture of the specified user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelPicture"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelPicture"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update the picture of the specified user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "User picture.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelPicture"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelPicture"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserModelPicture"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/UserModelPicture"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/UserModelPicture"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/users/{id}/useragreements": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all user agreement that the specified user has accepted/rejected.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserAgreementModelState"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserAgreementModelState"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/users/{id}/useragreements/{userAgreementId}/accept": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Specified user accepts the specified user agreement.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userAgreementId",
            "in": "path",
            "description": "User agreement id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/users/{id}/useragreements/{userAgreementId}/reject": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Specified user rejects the specified user agreement.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userAgreementId",
            "in": "path",
            "description": "User agreement id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/users/{id}/useragreements/pending": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all pending user agreements for the specified user.",
        "description": "<b>Returns a list of user agreements.</b>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "IsEnabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAgreementModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserAgreementModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/users/{username}/recoverymethods": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Gets user recovery methods.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Username.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRecoveryMethodGetResultModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserRecoveryMethodGetResultModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/users/{id}/userusagetime": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "hostGroupId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserUsageTimeLevelModel"
                  }
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserUsageTimeLevelModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/variables": {
      "get": {
        "tags": [
          "Variables"
        ],
        "summary": "Get all variables.",
        "description": "<b>Returns a list of variables.</b>",
        "parameters": [
          {
            "name": "Pagination.Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pagination.IsAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.IsScroll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pagination.Cursor",
            "in": "query",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "Expand",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VariableModelPagedList"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/VariableModelPagedList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Variables"
        ],
        "summary": "Create a variable.",
        "requestBody": {
          "description": "Variable.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VariableModelCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VariableModelCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VariableModelCreate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/VariableModelCreate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/VariableModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Variables"
        ],
        "summary": "Update a variable.",
        "requestBody": {
          "description": "Variable.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VariableModelUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VariableModelUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VariableModelUpdate"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/VariableModelUpdate"
              }
            },
            "application/x-msgpack": {
              "schema": {
                "$ref": "#/components/schemas/VariableModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/variables/{id}": {
      "get": {
        "tags": [
          "Variables"
        ],
        "summary": "Get a variable by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Variable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VariableModel"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/VariableModel"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      },
      "delete": {
        "tags": [
          "Variables"
        ],
        "summary": "Delete a variable.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Variable id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid id specified."
          }
        }
      }
    },
    "/api/user/v2.0/verifications/email/{emailAddress}": {
      "post": {
        "tags": [
          "Verifications"
        ],
        "summary": "Starts email verification for calling user.",
        "parameters": [
          {
            "name": "emailAddress",
            "in": "path",
            "description": "Email address.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationStartResultModelEmail"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationStartResultModelEmail"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/v2.0/verifications/email/{token}/{confirmationCode}/complete": {
      "post": {
        "tags": [
          "Verifications"
        ],
        "summary": "Completes email verification.",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confirmationCode",
            "in": "path",
            "description": "Confirmation code.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationCompleteResultCode"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationCompleteResultCode"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/v2.0/verifications/mobilephone/{mobilePhoneNumber}": {
      "post": {
        "tags": [
          "Verifications"
        ],
        "summary": "Starts mobile phone verification for calling user.",
        "parameters": [
          {
            "name": "mobilePhoneNumber",
            "in": "path",
            "description": "Mobile phone.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationStartResultModelMobilePhone"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationStartResultModelMobilePhone"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/v2.0/verifications/mobilephone/{token}/{confirmationCode}/complete": {
      "post": {
        "tags": [
          "Verifications"
        ],
        "summary": "Completes mobile phone verification.",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confirmationCode",
            "in": "path",
            "description": "Confirmation code.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationCompleteResultCode"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationCompleteResultCode"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/verifications/email/{userId}/{emailAddress}": {
      "post": {
        "tags": [
          "Verifications"
        ],
        "summary": "Starts email verification.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "emailAddress",
            "in": "path",
            "description": "Email address.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationStartResultModelEmail"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationStartResultModelEmail"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid userId specified."
          }
        }
      }
    },
    "/api/v2.0/verifications/email/{emailAddress}": {
      "post": {
        "tags": [
          "Verifications"
        ],
        "summary": "Starts email verification for calling user.",
        "parameters": [
          {
            "name": "emailAddress",
            "in": "path",
            "description": "Email address.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationStartResultModelEmail"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationStartResultModelEmail"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/verifications/email/{token}/{confirmationCode}/complete": {
      "post": {
        "tags": [
          "Verifications"
        ],
        "summary": "Completes email verification.",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confirmationCode",
            "in": "path",
            "description": "Confirmation code.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationCompleteResultCode"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationCompleteResultCode"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/verifications/mobilephone/{userId}/{mobilePhoneNumber}": {
      "post": {
        "tags": [
          "Verifications"
        ],
        "summary": "Starts mobile phone verification.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "mobilePhoneNumber",
            "in": "path",
            "description": "Mobile phone.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationStartResultModelMobilePhone"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationStartResultModelMobilePhone"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid userId specified."
          }
        }
      }
    },
    "/api/v2.0/verifications/mobilephone/{mobilePhoneNumber}": {
      "post": {
        "tags": [
          "Verifications"
        ],
        "summary": "Starts mobile phone verification for calling user.",
        "parameters": [
          {
            "name": "mobilePhoneNumber",
            "in": "path",
            "description": "Mobile phone.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationStartResultModelMobilePhone"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationStartResultModelMobilePhone"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/verifications/mobilephone/{token}/{confirmationCode}/complete": {
      "post": {
        "tags": [
          "Verifications"
        ],
        "summary": "Completes mobile phone verification.",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confirmationCode",
            "in": "path",
            "description": "Confirmation code.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationCompleteResultCode"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationCompleteResultCode"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              },
              "application/x-msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebApiErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActiveShiftModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "registerId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationCategoryModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationCategoryModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationCategoryModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationCategoryModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationCategoryModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationDeploymentComparisonMode": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "ApplicationDeploymentModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "registryString": {
            "maxLength": 16777215,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "source": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "destination": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "comparisonMode": {
            "$ref": "#/components/schemas/ApplicationDeploymentComparisonMode"
          },
          "deploymentOptions": {
            "$ref": "#/components/schemas/ApplicationDeploymentModelOptions"
          }
        },
        "additionalProperties": false
      },
      "ApplicationDeploymentModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "registryString": {
            "maxLength": 16777215,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "source": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "destination": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "comparisonMode": {
            "$ref": "#/components/schemas/ApplicationDeploymentComparisonMode"
          },
          "deploymentOptions": {
            "$ref": "#/components/schemas/ApplicationDeploymentModelOptions"
          }
        },
        "additionalProperties": false
      },
      "ApplicationDeploymentModelOptions": {
        "type": "object",
        "properties": {
          "ignoreCleanup": {
            "type": "boolean"
          },
          "repairOnly": {
            "type": "boolean"
          },
          "directAccess": {
            "type": "boolean"
          },
          "mirror": {
            "type": "boolean"
          },
          "includeSubDirectories": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApplicationDeploymentModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationDeploymentModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationDeploymentModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "registryString": {
            "maxLength": 16777215,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "source": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "destination": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "comparisonMode": {
            "$ref": "#/components/schemas/ApplicationDeploymentComparisonMode"
          },
          "deploymentOptions": {
            "$ref": "#/components/schemas/ApplicationDeploymentModelOptions"
          }
        },
        "additionalProperties": false
      },
      "ApplicationEnterpriseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationEnterpriseModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationEnterpriseModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationEnterpriseModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationEnterpriseModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableCdImageModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "path": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mountOptions": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "deviceId": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "checkExitCode": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableCdImageModelCreate": {
        "type": "object",
        "properties": {
          "path": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mountOptions": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "deviceId": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "checkExitCode": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableCdImageModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "applicationExecutableId": {
            "type": "integer",
            "format": "int32"
          },
          "path": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mountOptions": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "deviceId": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "checkExitCode": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableDeploymentModel": {
        "type": "object",
        "properties": {
          "applicationExecutableId": {
            "type": "integer",
            "format": "int32"
          },
          "deploymentId": {
            "type": "integer",
            "format": "int32"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableDeploymentModelCreate": {
        "type": "object",
        "properties": {
          "deploymentId": {
            "type": "integer",
            "format": "int32"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableDeploymentModelUpdate": {
        "type": "object",
        "properties": {
          "applicationExecutableId": {
            "type": "integer",
            "format": "int32"
          },
          "deploymentId": {
            "type": "integer",
            "format": "int32"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableLicenseModel": {
        "type": "object",
        "properties": {
          "applicationExecutableId": {
            "type": "integer",
            "format": "int32"
          },
          "licenseId": {
            "type": "integer",
            "format": "int32"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableLicenseModelCreate": {
        "type": "object",
        "properties": {
          "licenseId": {
            "type": "integer",
            "format": "int32"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableLicenseModelUpdate": {
        "type": "object",
        "properties": {
          "applicationExecutableId": {
            "type": "integer",
            "format": "int32"
          },
          "licenseId": {
            "type": "integer",
            "format": "int32"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "accessible": {
            "type": "boolean"
          },
          "caption": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "applicationModes": {
            "$ref": "#/components/schemas/ApplicationModes"
          },
          "executablePath": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "workingDirectory": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "arguments": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "runMode": {
            "$ref": "#/components/schemas/RunMode"
          },
          "reservationType": {
            "$ref": "#/components/schemas/LicenseReservationType"
          },
          "executableOptions": {
            "$ref": "#/components/schemas/ApplicationExecutableModelOptions"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "defaultDeploymentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableModelCreate": {
        "type": "object",
        "properties": {
          "accessible": {
            "type": "boolean"
          },
          "caption": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "applicationModes": {
            "$ref": "#/components/schemas/ApplicationModes"
          },
          "executablePath": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "workingDirectory": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "arguments": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "runMode": {
            "$ref": "#/components/schemas/RunMode"
          },
          "reservationType": {
            "$ref": "#/components/schemas/LicenseReservationType"
          },
          "executableOptions": {
            "$ref": "#/components/schemas/ApplicationExecutableModelOptions"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "defaultDeploymentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableModelImage": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableModelOptions": {
        "type": "object",
        "properties": {
          "autoLaunch": {
            "type": "boolean"
          },
          "monitorChildren": {
            "type": "boolean"
          },
          "multiRun": {
            "type": "boolean"
          },
          "killChildren": {
            "type": "boolean"
          },
          "quickLaunch": {
            "type": "boolean"
          },
          "shellExecute": {
            "type": "boolean"
          },
          "ignoreConcurrentExecutionLimit": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationExecutableModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "accessible": {
            "type": "boolean"
          },
          "caption": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "applicationModes": {
            "$ref": "#/components/schemas/ApplicationModes"
          },
          "executablePath": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "workingDirectory": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "arguments": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "runMode": {
            "$ref": "#/components/schemas/RunMode"
          },
          "reservationType": {
            "$ref": "#/components/schemas/LicenseReservationType"
          },
          "executableOptions": {
            "$ref": "#/components/schemas/ApplicationExecutableModelOptions"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "defaultDeploymentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutablePersonalFileModel": {
        "type": "object",
        "properties": {
          "applicationExecutableId": {
            "type": "integer",
            "format": "int32"
          },
          "personalFileId": {
            "type": "integer",
            "format": "int32"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutablePersonalFileModelCreate": {
        "type": "object",
        "properties": {
          "personalFileId": {
            "type": "integer",
            "format": "int32"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutablePersonalFileModelUpdate": {
        "type": "object",
        "properties": {
          "applicationExecutableId": {
            "type": "integer",
            "format": "int32"
          },
          "personalFileId": {
            "type": "integer",
            "format": "int32"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableTaskModel": {
        "type": "object",
        "properties": {
          "applicationExecutableId": {
            "type": "integer",
            "format": "int32"
          },
          "taskId": {
            "type": "integer",
            "format": "int32"
          },
          "preDeploy": {
            "type": "boolean"
          },
          "preLicenseManagement": {
            "type": "boolean"
          },
          "preLaunch": {
            "type": "boolean"
          },
          "postTermination": {
            "type": "boolean"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableTaskModelCreate": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "integer",
            "format": "int32"
          },
          "preDeploy": {
            "type": "boolean"
          },
          "preLicenseManagement": {
            "type": "boolean"
          },
          "preLaunch": {
            "type": "boolean"
          },
          "postTermination": {
            "type": "boolean"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApplicationExecutableTaskModelUpdate": {
        "type": "object",
        "properties": {
          "applicationExecutableId": {
            "type": "integer",
            "format": "int32"
          },
          "taskId": {
            "type": "integer",
            "format": "int32"
          },
          "preDeploy": {
            "type": "boolean"
          },
          "preLicenseManagement": {
            "type": "boolean"
          },
          "preLaunch": {
            "type": "boolean"
          },
          "postTermination": {
            "type": "boolean"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApplicationGroupApplicationModel": {
        "type": "object",
        "properties": {
          "applicationGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "applicationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationGroupApplicationModelCreate": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationGroupModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationGroupModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationGroupModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationGroupModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationGroupModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationLicenseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "plugin": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "assembly": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationLicenseModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationLicenseModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "applicationCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "developerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "publisherId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ageRating": {
            "type": "integer",
            "format": "int32"
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "defaultExecutableId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationModelCreate": {
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "applicationCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "developerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "publisherId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ageRating": {
            "type": "integer",
            "format": "int32"
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "defaultExecutableId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationModelImage": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "applicationCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "developerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "publisherId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ageRating": {
            "type": "integer",
            "format": "int32"
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "defaultExecutableId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationModes": {
        "type": "object",
        "properties": {
          "singlePlayer": {
            "type": "boolean"
          },
          "online": {
            "type": "boolean"
          },
          "multiplayer": {
            "type": "boolean"
          },
          "settings": {
            "type": "boolean"
          },
          "utility": {
            "type": "boolean"
          },
          "game": {
            "type": "boolean"
          },
          "application": {
            "type": "boolean"
          },
          "freeToPlay": {
            "type": "boolean"
          },
          "requiresSubscription": {
            "type": "boolean"
          },
          "freeTrial": {
            "type": "boolean"
          },
          "splitScreenMultiPlayer": {
            "type": "boolean"
          },
          "coOpLan": {
            "type": "boolean"
          },
          "coOpOnline": {
            "type": "boolean"
          },
          "oneTimePurchase": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApplicationPersonalFileModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/PersonalUserFileType"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "caption": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "accessible": {
            "type": "boolean"
          },
          "source": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "activation": {
            "$ref": "#/components/schemas/PersonalFileActivationType"
          },
          "maxQuota": {
            "type": "integer",
            "format": "int32"
          },
          "compressionLevel": {
            "type": "integer",
            "format": "int32"
          },
          "cleanUp": {
            "type": "boolean"
          },
          "store": {
            "type": "boolean"
          },
          "directoryOptions": {
            "$ref": "#/components/schemas/ApplicationPersonalFileModelDirectoryOptions"
          }
        },
        "additionalProperties": false
      },
      "ApplicationPersonalFileModelCreate": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/PersonalUserFileType"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "caption": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "accessible": {
            "type": "boolean"
          },
          "source": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "activation": {
            "$ref": "#/components/schemas/PersonalFileActivationType"
          },
          "maxQuota": {
            "type": "integer",
            "format": "int32"
          },
          "compressionLevel": {
            "type": "integer",
            "format": "int32"
          },
          "cleanUp": {
            "type": "boolean"
          },
          "store": {
            "type": "boolean"
          },
          "directoryOptions": {
            "$ref": "#/components/schemas/ApplicationPersonalFileModelDirectoryOptions"
          }
        },
        "additionalProperties": false
      },
      "ApplicationPersonalFileModelDirectoryOptions": {
        "type": "object",
        "properties": {
          "includeSubDirectories": {
            "type": "boolean"
          },
          "excludeFiles": {
            "type": "string",
            "nullable": true
          },
          "excludeDirectories": {
            "type": "string",
            "nullable": true
          },
          "includeFiles": {
            "type": "string",
            "nullable": true
          },
          "includeDirectories": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationPersonalFileModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationPersonalFileModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationPersonalFileModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/PersonalUserFileType"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "caption": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "accessible": {
            "type": "boolean"
          },
          "source": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "activation": {
            "$ref": "#/components/schemas/PersonalFileActivationType"
          },
          "maxQuota": {
            "type": "integer",
            "format": "int32"
          },
          "compressionLevel": {
            "type": "integer",
            "format": "int32"
          },
          "cleanUp": {
            "type": "boolean"
          },
          "store": {
            "type": "boolean"
          },
          "directoryOptions": {
            "$ref": "#/components/schemas/ApplicationPersonalFileModelDirectoryOptions"
          }
        },
        "additionalProperties": false
      },
      "ApplicationTaskModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "taskType": {
            "$ref": "#/components/schemas/TaskType"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "taskJunction": {
            "$ref": "#/components/schemas/ApplicationTaskModelJunction"
          },
          "taskNotification": {
            "$ref": "#/components/schemas/ApplicationTaskModelNotification"
          },
          "taskProcess": {
            "$ref": "#/components/schemas/ApplicationTaskModelProcess"
          },
          "taskScript": {
            "$ref": "#/components/schemas/ApplicationTaskModelScript"
          }
        },
        "additionalProperties": false
      },
      "ApplicationTaskModelCreate": {
        "type": "object",
        "properties": {
          "taskType": {
            "$ref": "#/components/schemas/TaskType"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "taskJunction": {
            "$ref": "#/components/schemas/ApplicationTaskModelJunction"
          },
          "taskNotification": {
            "$ref": "#/components/schemas/ApplicationTaskModelNotification"
          },
          "taskProcess": {
            "$ref": "#/components/schemas/ApplicationTaskModelProcess"
          },
          "taskScript": {
            "$ref": "#/components/schemas/ApplicationTaskModelScript"
          }
        },
        "additionalProperties": false
      },
      "ApplicationTaskModelJunction": {
        "type": "object",
        "properties": {
          "sourceDirectory": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "destinationDirectory": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "deleteDestination": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApplicationTaskModelNotification": {
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "message": {
            "maxLength": 65536,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "wait": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApplicationTaskModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationTaskModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationTaskModelProcess": {
        "type": "object",
        "properties": {
          "fileName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "arguments": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "workingDirectory": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "username": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "password": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "wait": {
            "type": "boolean"
          },
          "noWindow": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApplicationTaskModelScript": {
        "type": "object",
        "properties": {
          "scriptType": {
            "$ref": "#/components/schemas/ScriptTypes"
          },
          "data": {
            "maxLength": 65535,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "wait": {
            "type": "boolean"
          },
          "noWindow": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApplicationTaskModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "taskJunction": {
            "$ref": "#/components/schemas/ApplicationTaskModelJunction"
          },
          "taskNotification": {
            "$ref": "#/components/schemas/ApplicationTaskModelNotification"
          },
          "taskProcess": {
            "$ref": "#/components/schemas/ApplicationTaskModelProcess"
          },
          "taskScript": {
            "$ref": "#/components/schemas/ApplicationTaskModelScript"
          }
        },
        "additionalProperties": false
      },
      "AssetModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "assetTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "tag": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "smartCardUid": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "barcode": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "serialNumber": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AssetModelCreate": {
        "type": "object",
        "properties": {
          "assetTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "tag": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "smartCardUid": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "barcode": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "serialNumber": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AssetModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssetModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "assetTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "tag": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "smartCardUid": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "barcode": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "serialNumber": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AssetTransactionModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "assetTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "assetId": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "checkInOperatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "checkInTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "checkOutOperatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssetTransactionModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetTransactionModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssetTypeModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssetTypeModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssetTypeModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetTypeModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssetTypeModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssistanceRequestModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "assistanceRequestTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hostId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/AssistanceRequestStatus"
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "createdTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AssistanceRequestModelCreate": {
        "required": [
          "assistanceRequestTypeId",
          "hostId"
        ],
        "type": "object",
        "properties": {
          "assistanceRequestTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hostId": {
            "type": "integer",
            "format": "int32"
          },
          "note": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssistanceRequestModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssistanceRequestModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssistanceRequestModelUserCreate": {
        "required": [
          "assistanceRequestTypeId"
        ],
        "type": "object",
        "properties": {
          "assistanceRequestTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "note": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssistanceRequestStatus": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "AssistanceRequestTypeModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AssistanceRequestTypeModelCreate": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AssistanceRequestTypeModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssistanceRequestTypeModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssistanceRequestTypeModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AttributeModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "friendlyName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttributeModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "friendlyName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttributeModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttributeModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "friendlyName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthTokenResultModel": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BillingProfileModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "defaultRate": {
            "$ref": "#/components/schemas/BillingProfileRateModel"
          },
          "rates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingProfileRateModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BillingProfileModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "defaultRate": {
            "$ref": "#/components/schemas/BillingProfileRateModel"
          }
        },
        "additionalProperties": false
      },
      "BillingProfileModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingProfileModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BillingProfileModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "defaultRate": {
            "$ref": "#/components/schemas/BillingProfileRateModel"
          }
        },
        "additionalProperties": false
      },
      "BillingProfileRateModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "startFee": {
            "type": "number",
            "format": "double"
          },
          "minimumFee": {
            "type": "number",
            "format": "double"
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "chargeEvery": {
            "type": "integer",
            "format": "int32"
          },
          "chargeAfter": {
            "type": "integer",
            "format": "int32"
          },
          "isStepBased": {
            "type": "boolean"
          },
          "rateSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingProfileRateModelStep"
            },
            "nullable": true
          },
          "days": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingProfileRateModelDay"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BillingProfileRateModelCreate": {
        "type": "object",
        "properties": {
          "startFee": {
            "type": "number",
            "format": "double"
          },
          "minimumFee": {
            "type": "number",
            "format": "double"
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "chargeEvery": {
            "type": "integer",
            "format": "int32"
          },
          "chargeAfter": {
            "type": "integer",
            "format": "int32"
          },
          "isStepBased": {
            "type": "boolean"
          },
          "rateSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingProfileRateModelStep"
            },
            "nullable": true
          },
          "days": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingProfileRateModelDay"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BillingProfileRateModelDay": {
        "type": "object",
        "properties": {
          "day": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "dayTimesApplicable": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingProfileRateModelDayTime"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BillingProfileRateModelDayTime": {
        "type": "object",
        "properties": {
          "startSecond": {
            "type": "integer",
            "format": "int32"
          },
          "endSecond": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BillingProfileRateModelStep": {
        "type": "object",
        "properties": {
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "action": {
            "$ref": "#/components/schemas/BillingRateStepAction"
          },
          "charge": {
            "type": "number",
            "format": "double"
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "targetMinute": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BillingProfileRateModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "startFee": {
            "type": "number",
            "format": "double"
          },
          "minimumFee": {
            "type": "number",
            "format": "double"
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "chargeEvery": {
            "type": "integer",
            "format": "int32"
          },
          "chargeAfter": {
            "type": "integer",
            "format": "int32"
          },
          "isStepBased": {
            "type": "boolean"
          },
          "rateSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingProfileRateModelStep"
            },
            "nullable": true
          },
          "days": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingProfileRateModelDay"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BillingRateStepAction": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "BooleanGetResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Bundle": {
        "type": "object",
        "properties": {
          "selfStock": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CompanionConnectionInfo": {
        "type": "object",
        "properties": {
          "connectionId": {
            "type": "string",
            "description": "Connection id.",
            "nullable": true
          },
          "remoteIpAddress": {
            "type": "string",
            "description": "Remote ip address.",
            "nullable": true
          },
          "localIpAddress": {
            "type": "string",
            "description": "Local ip address.",
            "nullable": true
          },
          "remotePort": {
            "type": "integer",
            "description": "Remote port.",
            "format": "int32"
          },
          "localPort": {
            "type": "integer",
            "description": "Local port.",
            "format": "int32"
          },
          "companionId": {
            "type": "string",
            "description": "Companion id.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Companion connection info."
      },
      "CompareRangeOptions": {
        "enum": [
          0,
          1,
          2,
          4,
          8
        ],
        "type": "integer",
        "format": "int32"
      },
      "CompareStringOptions": {
        "enum": [
          0,
          1,
          2,
          4,
          8,
          16,
          32
        ],
        "type": "integer",
        "format": "int32"
      },
      "ConfirmationCodeDeliveryMethod": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "CreateResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DayOfWeek": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "DeleteResult": {
        "type": "object",
        "additionalProperties": false
      },
      "DepositTransactionModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "balance": {
            "type": "number",
            "format": "double"
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/DepositTransactionType"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DepositTransactionModelCreate": {
        "type": "object",
        "properties": {
          "receiptOverride": {
            "type": "boolean"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/DepositTransactionType"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DepositTransactionModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DepositTransactionModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DepositTransactionType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "DeviceHostModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "hostId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DeviceHostModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceHostModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeviceModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "deviceType": {
            "$ref": "#/components/schemas/DeviceType"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "hdmiDevice": {
            "$ref": "#/components/schemas/DeviceModelHdmi"
          }
        },
        "additionalProperties": false
      },
      "DeviceModelCreate": {
        "type": "object",
        "properties": {
          "deviceType": {
            "$ref": "#/components/schemas/DeviceType"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "hdmiDevice": {
            "$ref": "#/components/schemas/DeviceModelHdmi"
          }
        },
        "additionalProperties": false
      },
      "DeviceModelHdmi": {
        "type": "object",
        "properties": {
          "uniqueId": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeviceModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeviceModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "hdmiDevice": {
            "$ref": "#/components/schemas/DeviceModelHdmi"
          }
        },
        "additionalProperties": false
      },
      "DeviceType": {
        "enum": [
          0
        ],
        "type": "integer",
        "format": "int32"
      },
      "EventGroupMetadata": {
        "type": "object",
        "properties": {
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventMetadata"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventMetadata": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "eventId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ExpireAfterType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ExpireFromOptionType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "HostGroupModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "skinName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "applicationGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "securityProfileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "defaultGuestGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostGroupModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "skinName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "applicationGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "securityProfileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "defaultGuestGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostGroupModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HostGroupModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostGroupModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "skinName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "applicationGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "securityProfileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "defaultGuestGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostIconModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "image": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostIconModelCreate": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostIconModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HostIconModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostIconModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "image": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostLayoutGroupModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "hostLayouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HostLayoutModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostLayoutGroupModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HostLayoutGroupModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HostLayoutGroupModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostLayoutGroupModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HostLayoutModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "hostLayoutGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "hostId": {
            "type": "integer",
            "format": "int32"
          },
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "isHidden": {
            "type": "boolean"
          },
          "row": {
            "type": "integer",
            "format": "int32"
          },
          "column": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HostModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "hostType": {
            "$ref": "#/components/schemas/HostType"
          },
          "hostGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isOutOfOrder": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "hostComputer": {
            "$ref": "#/components/schemas/HostModelComputer"
          },
          "hostEndpoint": {
            "$ref": "#/components/schemas/HostModelEndpoint"
          }
        },
        "additionalProperties": false
      },
      "HostModelComputer": {
        "type": "object",
        "properties": {
          "windowsName": {
            "type": "string",
            "nullable": true
          },
          "macAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostModelCreate": {
        "type": "object",
        "properties": {
          "hostType": {
            "$ref": "#/components/schemas/HostType"
          },
          "hostGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isOutOfOrder": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "hostComputer": {
            "$ref": "#/components/schemas/HostModelComputer"
          },
          "hostEndpoint": {
            "$ref": "#/components/schemas/HostModelEndpoint"
          }
        },
        "additionalProperties": false
      },
      "HostModelEndpoint": {
        "type": "object",
        "properties": {
          "maximumUsers": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HostModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HostModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "hostGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isOutOfOrder": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "hostComputer": {
            "$ref": "#/components/schemas/HostModelComputer"
          },
          "hostEndpoint": {
            "$ref": "#/components/schemas/HostModelEndpoint"
          }
        },
        "additionalProperties": false
      },
      "HostType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "InvoiceModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "orderId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/InvoiceStatus"
          },
          "subTotal": {
            "type": "number",
            "format": "double"
          },
          "taxTotal": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "outstanding": {
            "type": "number",
            "format": "double"
          },
          "pointsTotal": {
            "type": "integer",
            "format": "int32"
          },
          "outstandingPoints": {
            "type": "integer",
            "format": "int32"
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isVoided": {
            "type": "boolean"
          },
          "invoiceLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceModelLine"
            },
            "nullable": true
          },
          "invoicePayments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoicePaymentModel"
            },
            "nullable": true
          },
          "invoiceRefunds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceModelRefund"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceModelLine": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "lineType": {
            "$ref": "#/components/schemas/LineType"
          },
          "payType": {
            "$ref": "#/components/schemas/OrderLinePayType"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "taxRate": {
            "type": "number",
            "format": "double"
          },
          "preTaxTotal": {
            "type": "number",
            "format": "double"
          },
          "taxTotal": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "unitPointsPrice": {
            "type": "integer",
            "format": "int32"
          },
          "pointsTotal": {
            "type": "integer",
            "format": "int32"
          },
          "unitPointsAward": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pointsAwardTotal": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "cost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "product": {
            "$ref": "#/components/schemas/OrderLineProductModel"
          },
          "timeProduct": {
            "$ref": "#/components/schemas/OrderLineProductModel"
          },
          "bundleLineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceModelRefund": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "refundMethodId": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoicePaymentModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "amountReceived": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "InvoicePaymentModelCreate": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "amountReceived": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "InvoicePaymentModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoicePaymentModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceStatus": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "LicenseReservationType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "LineType": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "LogCategory": {
        "enum": [
          0,
          1,
          2,
          4,
          8,
          16,
          32,
          64,
          128,
          256,
          512,
          1024,
          2048,
          4096
        ],
        "type": "integer",
        "format": "int32"
      },
      "LogExceptionModel": {
        "type": "object",
        "properties": {
          "exception": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LogMessageType": {
        "enum": [
          0,
          1,
          2,
          4,
          8
        ],
        "type": "integer",
        "format": "int32"
      },
      "LogModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "hostNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hostname": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/LogCategory"
          },
          "moduleType": {
            "$ref": "#/components/schemas/ModuleType"
          },
          "moduleVersion": {
            "type": "string",
            "nullable": true
          },
          "messageType": {
            "$ref": "#/components/schemas/LogMessageType"
          }
        },
        "additionalProperties": false
      },
      "LogModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModuleType": {
        "enum": [
          0,
          1,
          2,
          4,
          8
        ],
        "type": "integer",
        "format": "int32"
      },
      "MonetaryUnitModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MonetaryUnitModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MonetaryUnitModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MonetaryUnitModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MonetaryUnitModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MoneySalePresetModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "maximum": 1000000000000,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MoneySalePresetModelCreate": {
        "type": "object",
        "properties": {
          "value": {
            "maximum": 1000000000000,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MoneySalePresetModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MoneySalePresetModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MoneySalePresetModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "maximum": 1000000000000,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "NoteSeverity": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "OperatorModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "firstName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "address": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "country": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "sex": {
            "$ref": "#/components/schemas/Sex"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "smartCardUid": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "identification": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OperatorModelCreate": {
        "type": "object",
        "properties": {
          "password": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "username": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "firstName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "address": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "country": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "sex": {
            "$ref": "#/components/schemas/Sex"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "smartCardUid": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "identification": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OperatorModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OperatorModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OperatorModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "password": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "username": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "firstName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "address": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "country": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "sex": {
            "$ref": "#/components/schemas/Sex"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "smartCardUid": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "identification": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OperatorPasswordUpdateModel": {
        "required": [
          "password"
        ],
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "OrderLineDeliveredStatusModel": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "deliveredQuantity": {
            "type": "number",
            "format": "double"
          },
          "isDelivered": {
            "type": "boolean"
          },
          "deliveredTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineDeliveredStatusModelUpdate": {
        "type": "object",
        "properties": {
          "deliveredQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isDelivered": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "lineType": {
            "$ref": "#/components/schemas/LineType"
          },
          "payType": {
            "$ref": "#/components/schemas/OrderLinePayType"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "taxRate": {
            "type": "number",
            "format": "double"
          },
          "preTaxTotal": {
            "type": "number",
            "format": "double"
          },
          "taxTotal": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "unitPointsPrice": {
            "type": "integer",
            "format": "int32"
          },
          "pointsTotal": {
            "type": "integer",
            "format": "int32"
          },
          "unitPointsAward": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pointsAwardTotal": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "cost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isDelivered": {
            "type": "boolean"
          },
          "deliveredQuantity": {
            "type": "number",
            "format": "double"
          },
          "bundleLineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "product": {
            "$ref": "#/components/schemas/OrderLineProductModel"
          },
          "timeProduct": {
            "$ref": "#/components/schemas/OrderLineProductModel"
          }
        },
        "additionalProperties": false
      },
      "OrderLinePayType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "OrderLineProductModel": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OrderModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "invoice": {
            "$ref": "#/components/schemas/InvoiceModel"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "hostId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "userNote": {
            "type": "string",
            "nullable": true
          },
          "isDelivered": {
            "type": "boolean"
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "subTotal": {
            "type": "number",
            "format": "double"
          },
          "taxTotal": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "pointsTotal": {
            "type": "integer",
            "format": "int32"
          },
          "orderLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineModel"
            },
            "nullable": true
          },
          "preferredPaymentMethodId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "PasswordRecoveryCompleteResultCode": {
        "enum": [
          0,
          1,
          101,
          102,
          103,
          104,
          105,
          106
        ],
        "type": "integer",
        "format": "int32"
      },
      "PasswordRecoveryStartResultCode": {
        "enum": [
          0,
          1,
          402,
          406,
          501,
          502
        ],
        "type": "integer",
        "format": "int32"
      },
      "PasswordRecoveryStartResultModelByEmail": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/PasswordRecoveryStartResultCode"
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "codeLength": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PasswordRecoveryStartResultModelByMobile": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/PasswordRecoveryStartResultCode"
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "codeLength": {
            "type": "integer",
            "format": "int32"
          },
          "mobilePhone": {
            "type": "string",
            "nullable": true
          },
          "deliveryMethod": {
            "$ref": "#/components/schemas/ConfirmationCodeDeliveryMethod"
          }
        },
        "additionalProperties": false
      },
      "PaymentIntentCreateParametersDepositModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaymentIntentCreateResultModel": {
        "type": "object",
        "properties": {
          "paymentIntent": {
            "type": "string",
            "format": "uuid"
          },
          "paymentUrl": {
            "type": "string",
            "nullable": true
          },
          "qrImage": {
            "type": "string",
            "nullable": true
          },
          "nativeQrImage": {
            "type": "string",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PaymentIntentModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "state": {
            "$ref": "#/components/schemas/PaymentIntentState"
          },
          "transactionId": {
            "type": "string",
            "nullable": true
          },
          "transactionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PaymentIntentModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentIntentModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentIntentState": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "PaymentMethodModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "availableInManager": {
            "type": "boolean"
          },
          "availableInClient": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "availableInManager": {
            "type": "boolean"
          },
          "availableInClient": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentMethodModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "availableInManager": {
            "type": "boolean"
          },
          "availableInClient": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PaymentProviderMetadataModel": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "optionsType": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PersonalFileActivationType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "PersonalUserFileType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "PointTransactionModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "balance": {
            "type": "integer",
            "format": "int32"
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isVoided": {
            "type": "boolean"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/PointsTransactionType"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PointTransactionModelCreate": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/PointsTransactionType"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PointTransactionModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PointTransactionModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PointsTransactionType": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "ProductBundledModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "number",
            "format": "double"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ProductBundledModelCreate": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "number",
            "format": "double"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ProductBundledModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "number",
            "format": "double"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ProductBundledUserPriceModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "bundledProductId": {
            "type": "integer",
            "format": "int32"
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductBundledUserPriceModelCreate": {
        "type": "object",
        "properties": {
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductBundledUserPriceModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "bundledProductId": {
            "type": "integer",
            "format": "int32"
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductDisallowedUserGroupModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isDisallowed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductDisallowedUserGroupModelCreate": {
        "type": "object",
        "properties": {
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isDisallowed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductDisallowedUserGroupModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isDisallowed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductGroupModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "sortOption": {
            "$ref": "#/components/schemas/ProductSortOptionType"
          }
        },
        "additionalProperties": false
      },
      "ProductGroupModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "sortOption": {
            "$ref": "#/components/schemas/ProductSortOptionType"
          }
        },
        "additionalProperties": false
      },
      "ProductGroupModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductGroupModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductGroupModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "sortOption": {
            "$ref": "#/components/schemas/ProductSortOptionType"
          }
        },
        "additionalProperties": false
      },
      "ProductImageModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "image": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductImageModelCreate": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductImageModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "image": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productType": {
            "$ref": "#/components/schemas/ProductType"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "productTaxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductTaxModel"
            },
            "nullable": true
          },
          "productImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductImageModel"
            },
            "nullable": true
          },
          "productPurchaseAvailability": {
            "$ref": "#/components/schemas/ProductPurchaseAvailabilityModel"
          },
          "productGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 65535,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "cost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "disallowClientOrder": {
            "type": "boolean"
          },
          "restrictGuestSale": {
            "type": "boolean"
          },
          "restrictSale": {
            "type": "boolean"
          },
          "purchaseOptions": {
            "$ref": "#/components/schemas/PurchaseOptionType"
          },
          "points": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pointsPrice": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "barcode": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "enableStock": {
            "type": "boolean"
          },
          "disallowSaleIfOutOfStock": {
            "type": "boolean"
          },
          "stockAlert": {
            "type": "boolean"
          },
          "stockAlertThreshold": {
            "type": "number",
            "format": "double"
          },
          "stockTargetDifferentProduct": {
            "type": "boolean"
          },
          "stockTargetProductId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stockProductAmount": {
            "type": "number",
            "format": "double"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isService": {
            "type": "boolean"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "timeProduct": {
            "$ref": "#/components/schemas/ProductTime"
          },
          "bundle": {
            "$ref": "#/components/schemas/Bundle"
          },
          "createdTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ProductModelAvailabilityDay": {
        "type": "object",
        "properties": {
          "day": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "dayTimesAvailable": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductModelAvailabilityDayTime"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductModelAvailabilityDayTime": {
        "type": "object",
        "properties": {
          "startSecond": {
            "type": "integer",
            "format": "int32"
          },
          "endSecond": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProductModelCreate": {
        "type": "object",
        "properties": {
          "productType": {
            "$ref": "#/components/schemas/ProductType"
          },
          "productGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 65535,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "cost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "disallowClientOrder": {
            "type": "boolean"
          },
          "restrictGuestSale": {
            "type": "boolean"
          },
          "restrictSale": {
            "type": "boolean"
          },
          "purchaseOptions": {
            "$ref": "#/components/schemas/PurchaseOptionType"
          },
          "points": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pointsPrice": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "barcode": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "enableStock": {
            "type": "boolean"
          },
          "disallowSaleIfOutOfStock": {
            "type": "boolean"
          },
          "stockAlert": {
            "type": "boolean"
          },
          "stockAlertThreshold": {
            "type": "number",
            "format": "double"
          },
          "stockTargetDifferentProduct": {
            "type": "boolean"
          },
          "stockTargetProductId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stockProductAmount": {
            "type": "number",
            "format": "double"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isService": {
            "type": "boolean"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "timeProduct": {
            "$ref": "#/components/schemas/ProductTime"
          },
          "bundle": {
            "$ref": "#/components/schemas/Bundle"
          }
        },
        "additionalProperties": false
      },
      "ProductModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 65535,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "cost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "disallowClientOrder": {
            "type": "boolean"
          },
          "restrictGuestSale": {
            "type": "boolean"
          },
          "restrictSale": {
            "type": "boolean"
          },
          "purchaseOptions": {
            "$ref": "#/components/schemas/PurchaseOptionType"
          },
          "points": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pointsPrice": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "barcode": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "enableStock": {
            "type": "boolean"
          },
          "disallowSaleIfOutOfStock": {
            "type": "boolean"
          },
          "stockAlert": {
            "type": "boolean"
          },
          "stockAlertThreshold": {
            "type": "number",
            "format": "double"
          },
          "stockTargetDifferentProduct": {
            "type": "boolean"
          },
          "stockTargetProductId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stockProductAmount": {
            "type": "number",
            "format": "double"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isService": {
            "type": "boolean"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "timeProduct": {
            "$ref": "#/components/schemas/ProductTime"
          },
          "bundle": {
            "$ref": "#/components/schemas/Bundle"
          }
        },
        "additionalProperties": false
      },
      "ProductPurchaseAvailabilityModel": {
        "type": "object",
        "properties": {
          "dateRange": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "timeRange": {
            "type": "boolean"
          },
          "daysAvailable": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductModelAvailabilityDay"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductSortOptionType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ProductStockModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "onHand": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "alertLevelReached": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductStockModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductStockModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductTaxModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "taxId": {
            "type": "integer",
            "format": "int32"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductTime": {
        "type": "object",
        "properties": {
          "minutes": {
            "type": "integer",
            "format": "int32"
          },
          "expiresAtLogout": {
            "type": "boolean"
          },
          "expireAtDayTime": {
            "type": "boolean"
          },
          "expireAtDayTimeMinute": {
            "type": "integer",
            "format": "int32"
          },
          "expireAfterTime": {
            "type": "boolean"
          },
          "expireAfterType": {
            "$ref": "#/components/schemas/ExpireAfterType"
          },
          "expiresAfter": {
            "type": "integer",
            "format": "int32"
          },
          "expiresFrom": {
            "$ref": "#/components/schemas/ExpireFromOptionType"
          },
          "useOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProductTimeDisallowedHostGroupModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "timeProductId": {
            "type": "integer",
            "format": "int32"
          },
          "hostGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isDisallowed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductTimeDisallowedHostGroupModelCreate": {
        "type": "object",
        "properties": {
          "hostGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isDisallowed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductTimeDisallowedHostGroupModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "timeProductId": {
            "type": "integer",
            "format": "int32"
          },
          "hostGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isDisallowed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductTimeUsageAvailabilityModel": {
        "type": "object",
        "properties": {
          "dateRange": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "timeRange": {
            "type": "boolean"
          },
          "daysAvailable": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductModelAvailabilityDay"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ProductUserPriceModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "pointsPrice": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "purchaseOptions": {
            "$ref": "#/components/schemas/PurchaseOptionType"
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductUserPriceModelCreate": {
        "type": "object",
        "properties": {
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "pointsPrice": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "purchaseOptions": {
            "$ref": "#/components/schemas/PurchaseOptionType"
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductUserPriceModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "pointsPrice": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "purchaseOptions": {
            "$ref": "#/components/schemas/PurchaseOptionType"
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PurchaseOptionType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "RefundOptions": {
        "type": "object",
        "properties": {
          "refundMethodId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "macAddress": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "startCash": {
            "maximum": 1000000000000,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "idleTimeout": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RegisterModelCreate": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "macAddress": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "startCash": {
            "maximum": 1000000000000,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "idleTimeout": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegisterModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "macAddress": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "startCash": {
            "maximum": 1000000000000,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "idleTimeout": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterTransactionModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/RegisterTransactionType"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterTransactionModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegisterTransactionModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterTransactionType": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ReservationModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "duration": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "contactPhone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "contactEmail": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "pin": {
            "maxLength": 6,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ReservationStatus"
          },
          "hosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationModelHost"
            },
            "nullable": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationModelUser"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReservationModelCreate": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "duration": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "contactPhone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "contactEmail": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "pin": {
            "maxLength": 6,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ReservationStatus"
          },
          "hosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationModelHost"
            },
            "nullable": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationModelUser"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReservationModelHost": {
        "type": "object",
        "properties": {
          "hostId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ReservationModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReservationModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "duration": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "contactPhone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "contactEmail": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "pin": {
            "maxLength": 6,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ReservationStatus"
          },
          "hosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationModelHost"
            },
            "nullable": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationModelUser"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReservationModelUser": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ReservationStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "RunMode": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "ScriptTypes": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "Sex": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ShiftCountModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "shiftId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int32"
          },
          "startCash": {
            "type": "number",
            "format": "double"
          },
          "sales": {
            "type": "number",
            "format": "double"
          },
          "deposits": {
            "type": "number",
            "format": "double"
          },
          "payIns": {
            "type": "number",
            "format": "double"
          },
          "withdrawals": {
            "type": "number",
            "format": "double"
          },
          "payOuts": {
            "type": "number",
            "format": "double"
          },
          "refunds": {
            "type": "number",
            "format": "double"
          },
          "voids": {
            "type": "number",
            "format": "double"
          },
          "expected": {
            "type": "number",
            "format": "double"
          },
          "actual": {
            "type": "number",
            "format": "double"
          },
          "difference": {
            "type": "number",
            "format": "double"
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShiftCountModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShiftCountModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShiftEndCountModel": {
        "type": "object",
        "properties": {
          "paymentMethodId": {
            "type": "integer",
            "format": "int32"
          },
          "actual": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ShiftEndModel": {
        "type": "object",
        "properties": {
          "counts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShiftEndCountModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShiftExpectedModel": {
        "type": "object",
        "properties": {
          "exepected": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShiftExpectedTransactionModel"
            },
            "nullable": true
          },
          "expectedTotal": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ShiftExpectedTransactionModel": {
        "type": "object",
        "properties": {
          "paymentMethodId": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ShiftModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "operatorId": {
            "type": "integer",
            "format": "int32"
          },
          "registerId": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "isEnding": {
            "type": "boolean"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "startCash": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ShiftModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShiftModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShiftOptions": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ShiftOptionsModel": {
        "type": "object",
        "properties": {
          "options": {
            "$ref": "#/components/schemas/ShiftOptions"
          }
        },
        "additionalProperties": false
      },
      "ShiftStartModel": {
        "type": "object",
        "properties": {
          "registerId": {
            "type": "integer",
            "format": "int32"
          },
          "startCash": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "StockTransactionCreateModel": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/StockTransactionType"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "StockTransactionModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/StockTransactionType"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "onHand": {
            "type": "number",
            "format": "double"
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StockTransactionModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockTransactionModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StockTransactionType": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "StoreOptionAllowedValueMetadata": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StoreOptionMetadata": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "valueTypeName": {
            "type": "string",
            "nullable": true
          },
          "valuePropertyName": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "allowedValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreOptionAllowedValueMetadata"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StoreOptionReadValue": {
        "type": "object",
        "properties": {
          "existed": {
            "type": "boolean"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StoreOptionsPair": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/StoreOptionMetadata"
          },
          "value": {
            "$ref": "#/components/schemas/StoreOptionReadValue"
          }
        },
        "additionalProperties": false
      },
      "StoreOptionsReadPack": {
        "type": "object",
        "properties": {
          "optionsType": {
            "type": "string",
            "nullable": true
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "section": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreOptionsPair"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StoreOptionsWritePack": {
        "type": "object",
        "properties": {
          "optionsType": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaskType": {
        "enum": [
          0,
          1,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "TaxModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "value": {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "TaxModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "value": {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "TaxModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaxModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "value": {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "TimePointAwardOptionType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "TimeSalePresetModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TimeSalePresetModelCreate": {
        "type": "object",
        "properties": {
          "value": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TimeSalePresetModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeSalePresetModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TimeSalePresetModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TokenType": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "UpdateResult": {
        "type": "object",
        "additionalProperties": false
      },
      "UsageType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "UserAgreementAcceptState": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "UserAgreementModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "agreement": {
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "isRejectable": {
            "type": "boolean"
          },
          "ignoreState": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserAgreementModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "agreement": {
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "isRejectable": {
            "type": "boolean"
          },
          "ignoreState": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserAgreementModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserAgreementModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserAgreementModelState": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userAgreementId": {
            "type": "integer",
            "format": "int32"
          },
          "acceptState": {
            "$ref": "#/components/schemas/UserAgreementAcceptState"
          }
        },
        "additionalProperties": false
      },
      "UserAgreementModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "agreement": {
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "isRejectable": {
            "type": "boolean"
          },
          "ignoreState": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserAttributeModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "attributeId": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserAttributeModelCreate": {
        "type": "object",
        "properties": {
          "attributeId": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserAttributeModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "attributeId": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserGroupDisallowedHostGroupModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "hostGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isDisallowed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserGroupDisallowedHostGroupModelCreate": {
        "type": "object",
        "properties": {
          "hostGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isDisallowed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserGroupDisallowedHostGroupModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "hostGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isDisallowed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserGroupModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "billingProfileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "requiredUserInfo": {
            "$ref": "#/components/schemas/UserModelRequiredInfo"
          },
          "overrideApplicationGroup": {
            "type": "boolean"
          },
          "applicationGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "overrideSecurityProfile": {
            "type": "boolean"
          },
          "securityProfileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "overrideAgeRating": {
            "type": "boolean"
          },
          "isAgeRatingEnabled": {
            "type": "boolean"
          },
          "enablePersonalStorage": {
            "type": "boolean"
          },
          "hideLogoutButton": {
            "type": "boolean"
          },
          "disallowLoginFromClient": {
            "type": "boolean"
          },
          "guestUse": {
            "type": "boolean"
          },
          "guestUseOnly": {
            "type": "boolean"
          },
          "disallowLoginFromManager": {
            "type": "boolean"
          },
          "isNegativeBalanceAllowed": {
            "type": "boolean"
          },
          "creditLimit": {
            "type": "number",
            "format": "double"
          },
          "pointsAwardOptions": {
            "$ref": "#/components/schemas/TimePointAwardOptionType"
          },
          "pointsMoneyRatio": {
            "type": "number",
            "format": "double"
          },
          "pointsTimeRatio": {
            "type": "integer",
            "format": "int32"
          },
          "pointsAward": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "disableTimeOffer": {
            "type": "boolean"
          },
          "disableFixedTime": {
            "type": "boolean"
          },
          "disableDeposit": {
            "type": "boolean"
          },
          "isWaitingLinePriorityEnabled": {
            "type": "boolean"
          },
          "waitingLinePriority": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserGroupModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "billingProfileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "requiredUserInfo": {
            "$ref": "#/components/schemas/UserModelRequiredInfo"
          },
          "overrideApplicationGroup": {
            "type": "boolean"
          },
          "applicationGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "overrideSecurityProfile": {
            "type": "boolean"
          },
          "securityProfileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "overrideAgeRating": {
            "type": "boolean"
          },
          "isAgeRatingEnabled": {
            "type": "boolean"
          },
          "enablePersonalStorage": {
            "type": "boolean"
          },
          "hideLogoutButton": {
            "type": "boolean"
          },
          "disallowLoginFromClient": {
            "type": "boolean"
          },
          "guestUse": {
            "type": "boolean"
          },
          "guestUseOnly": {
            "type": "boolean"
          },
          "disallowLoginFromManager": {
            "type": "boolean"
          },
          "isNegativeBalanceAllowed": {
            "type": "boolean"
          },
          "creditLimit": {
            "type": "number",
            "format": "double"
          },
          "pointsAwardOptions": {
            "$ref": "#/components/schemas/TimePointAwardOptionType"
          },
          "pointsMoneyRatio": {
            "type": "number",
            "format": "double"
          },
          "pointsTimeRatio": {
            "type": "integer",
            "format": "int32"
          },
          "pointsAward": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "disableTimeOffer": {
            "type": "boolean"
          },
          "disableFixedTime": {
            "type": "boolean"
          },
          "disableDeposit": {
            "type": "boolean"
          },
          "isWaitingLinePriorityEnabled": {
            "type": "boolean"
          },
          "waitingLinePriority": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserGroupModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserGroupModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserGroupModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "billingProfileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "requiredUserInfo": {
            "$ref": "#/components/schemas/UserModelRequiredInfo"
          },
          "overrideApplicationGroup": {
            "type": "boolean"
          },
          "applicationGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "overrideSecurityProfile": {
            "type": "boolean"
          },
          "securityProfileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "overrideAgeRating": {
            "type": "boolean"
          },
          "isAgeRatingEnabled": {
            "type": "boolean"
          },
          "enablePersonalStorage": {
            "type": "boolean"
          },
          "hideLogoutButton": {
            "type": "boolean"
          },
          "disallowLoginFromClient": {
            "type": "boolean"
          },
          "guestUse": {
            "type": "boolean"
          },
          "guestUseOnly": {
            "type": "boolean"
          },
          "disallowLoginFromManager": {
            "type": "boolean"
          },
          "isNegativeBalanceAllowed": {
            "type": "boolean"
          },
          "creditLimit": {
            "type": "number",
            "format": "double"
          },
          "pointsAwardOptions": {
            "$ref": "#/components/schemas/TimePointAwardOptionType"
          },
          "pointsMoneyRatio": {
            "type": "number",
            "format": "double"
          },
          "pointsTimeRatio": {
            "type": "integer",
            "format": "int32"
          },
          "pointsAward": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "disableTimeOffer": {
            "type": "boolean"
          },
          "disableFixedTime": {
            "type": "boolean"
          },
          "disableDeposit": {
            "type": "boolean"
          },
          "isWaitingLinePriorityEnabled": {
            "type": "boolean"
          },
          "waitingLinePriority": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "isGuest": {
            "type": "boolean"
          },
          "username": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isNegativeBalanceAllowed": {
            "type": "boolean",
            "nullable": true
          },
          "isPersonalInfoRequested": {
            "type": "boolean"
          },
          "enableDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "disabledDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "firstName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "address": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "country": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "sex": {
            "$ref": "#/components/schemas/Sex"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "smartCardUid": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "identification": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserModelCreate": {
        "type": "object",
        "properties": {
          "password": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "username": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isNegativeBalanceAllowed": {
            "type": "boolean",
            "nullable": true
          },
          "isPersonalInfoRequested": {
            "type": "boolean"
          },
          "enableDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "disabledDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "firstName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "address": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "country": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "sex": {
            "$ref": "#/components/schemas/Sex"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "smartCardUid": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "identification": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserModelPicture": {
        "type": "object",
        "properties": {
          "picture": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserModelRequiredInfo": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "boolean"
          },
          "lastName": {
            "type": "boolean"
          },
          "birthDate": {
            "type": "boolean"
          },
          "address": {
            "type": "boolean"
          },
          "city": {
            "type": "boolean"
          },
          "postCode": {
            "type": "boolean"
          },
          "state": {
            "type": "boolean"
          },
          "country": {
            "type": "boolean"
          },
          "email": {
            "type": "boolean"
          },
          "phone": {
            "type": "boolean"
          },
          "mobile": {
            "type": "boolean"
          },
          "sex": {
            "type": "boolean"
          },
          "password": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "password": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "username": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isNegativeBalanceAllowed": {
            "type": "boolean",
            "nullable": true
          },
          "isPersonalInfoRequested": {
            "type": "boolean"
          },
          "enableDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "disabledDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "firstName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "address": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "country": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "sex": {
            "$ref": "#/components/schemas/Sex"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "smartCardUid": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "identification": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserNoteModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "text": {
            "maxLength": 65535,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "severity": {
            "$ref": "#/components/schemas/NoteSeverity"
          }
        },
        "additionalProperties": false
      },
      "UserNoteModelCreate": {
        "type": "object",
        "properties": {
          "text": {
            "maxLength": 65535,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "severity": {
            "$ref": "#/components/schemas/NoteSeverity"
          }
        },
        "additionalProperties": false
      },
      "UserNoteModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserNoteModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserNoteModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "text": {
            "maxLength": 65535,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "severity": {
            "$ref": "#/components/schemas/NoteSeverity"
          }
        },
        "additionalProperties": false
      },
      "UserRecoverMethodGetResultCode": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "UserRecoveryMethod": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "UserRecoveryMethodGetResultModel": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/UserRecoverMethodGetResultCode"
          },
          "recoveryMethod": {
            "$ref": "#/components/schemas/UserRecoveryMethod"
          }
        },
        "additionalProperties": false
      },
      "UserUsageRateModel": {
        "type": "object",
        "properties": {
          "remainingMinutes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "billRateId": {
            "type": "integer",
            "format": "int32"
          },
          "inCredit": {
            "type": "boolean"
          },
          "hourlyRate": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "UserUsageTimeFixedModel": {
        "type": "object",
        "properties": {
          "remainingMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceLineId": {
            "type": "integer",
            "format": "int32"
          },
          "purchaseTime": {
            "type": "string",
            "format": "date-time"
          },
          "totalMinutes": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserUsageTimeLevelModel": {
        "type": "object",
        "properties": {
          "rate": {
            "$ref": "#/components/schemas/UserUsageRateModel"
          },
          "timeOffer": {
            "$ref": "#/components/schemas/UserUsageTimeOfferModel"
          },
          "timeFixed": {
            "$ref": "#/components/schemas/UserUsageTimeFixedModel"
          },
          "usageType": {
            "$ref": "#/components/schemas/UsageType"
          },
          "usableMinutes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "activationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "activationOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserUsageTimeOfferModel": {
        "type": "object",
        "properties": {
          "remainingMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "expirationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoiceLineId": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "purchaseTime": {
            "type": "string",
            "format": "date-time"
          },
          "firstUsageTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VariableModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "availableInServer": {
            "type": "boolean"
          },
          "availableInClient": {
            "type": "boolean"
          },
          "availableInManager": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "VariableModelCreate": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "availableInServer": {
            "type": "boolean"
          },
          "availableInClient": {
            "type": "boolean"
          },
          "availableInManager": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "VariableModelPagedList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VariableModel"
            },
            "nullable": true
          },
          "nextCursor": {
            "type": "String",
            "nullable": true
          },
          "prevCursor": {
            "type": "String",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VariableModelUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "availableInServer": {
            "type": "boolean"
          },
          "availableInClient": {
            "type": "boolean"
          },
          "availableInManager": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "VerificationCompleteResultCode": {
        "enum": [
          0,
          1,
          101,
          102,
          103,
          104,
          105,
          201,
          202,
          301,
          401
        ],
        "type": "integer",
        "format": "int32"
      },
      "VerificationStartResultCode": {
        "enum": [
          0,
          1,
          402,
          403,
          405,
          501,
          502
        ],
        "type": "integer",
        "format": "int32"
      },
      "VerificationStartResultModelEmail": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/VerificationStartResultCode"
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "codeLength": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VerificationStartResultModelMobilePhone": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/VerificationStartResultCode"
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "codeLength": {
            "type": "integer",
            "format": "int32"
          },
          "mobilePhone": {
            "type": "string",
            "nullable": true
          },
          "deliveryMethod": {
            "$ref": "#/components/schemas/ConfirmationCodeDeliveryMethod"
          }
        },
        "additionalProperties": false
      },
      "WebApiErrorBase": {
        "type": "object",
        "additionalProperties": false
      },
      "WebApiErrorResponse": {
        "type": "object",
        "properties": {
          "httpStatusCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "isError": {
            "type": "boolean"
          },
          "errorCodeType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "errorCodeTypeReadable": {
            "type": "string",
            "nullable": true
          },
          "errorCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "errorCodeReadable": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApiErrorBase"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  },
  "tags": [
    {
      "name": "AssistanceRequest",
      "description": "Assistance request user api set."
    },
    {
      "name": "Auth",
      "description": "User authentication controller."
    },
    {
      "name": "Verifications",
      "description": "Verification api set."
    },
    {
      "name": "ApplicationCategories",
      "description": "Application categories api set."
    },
    {
      "name": "ApplicationDeployments",
      "description": "Application deployments api set."
    },
    {
      "name": "ApplicationEnterprises",
      "description": "Application enterprises api set."
    },
    {
      "name": "ApplicationExecutables",
      "description": "Application executables api set."
    },
    {
      "name": "ApplicationGroups",
      "description": "Application groups api set."
    },
    {
      "name": "ApplicationLicenses",
      "description": "Application executable licenses api set."
    },
    {
      "name": "ApplicationPersonalFiles",
      "description": "Application personal files api set."
    },
    {
      "name": "Applications",
      "description": "Applications api set."
    },
    {
      "name": "ApplicationTasks",
      "description": "Application executable tasks api set."
    },
    {
      "name": "Assets",
      "description": "Assets api set."
    },
    {
      "name": "AssetTransactions",
      "description": "Asset transactions api set."
    },
    {
      "name": "AssetTypes",
      "description": "Asset types api set."
    },
    {
      "name": "AssistanceRequestType",
      "description": "Assistance request type api set."
    },
    {
      "name": "Attributes",
      "description": "Attributes api set."
    },
    {
      "name": "BillingProfiles",
      "description": "Billing profiles api set."
    },
    {
      "name": "Companion",
      "description": "Companion controller."
    },
    {
      "name": "DepositTransactions",
      "description": "Deposit transactions api set."
    },
    {
      "name": "Devices",
      "description": "Devices api set."
    },
    {
      "name": "Events",
      "description": "Long polling event controller."
    },
    {
      "name": "HostGroups",
      "description": "Host group api set."
    },
    {
      "name": "HostIcons",
      "description": "Host icons api set."
    },
    {
      "name": "HostLayoutGroups",
      "description": "Host layout group api set."
    },
    {
      "name": "Hosts",
      "description": "Host api set."
    },
    {
      "name": "InvoicePayments",
      "description": "Invoice payments api set."
    },
    {
      "name": "Invoices",
      "description": "Invoices api set."
    },
    {
      "name": "Log",
      "description": "Log api set."
    },
    {
      "name": "MonetaryUnits",
      "description": "Monetary units api set."
    },
    {
      "name": "Operators",
      "description": "Operators api set."
    },
    {
      "name": "Orders",
      "description": "Orders api set."
    },
    {
      "name": "PaymentIntent",
      "description": "Payment intent controller."
    },
    {
      "name": "PaymentMethods",
      "description": "Payment methods api set."
    },
    {
      "name": "PaymentProviders",
      "description": "Payment provider controller."
    },
    {
      "name": "PointsTransactions",
      "description": "Points transaction api set."
    },
    {
      "name": "ProductGroups",
      "description": "Product groups api set."
    },
    {
      "name": "Products",
      "description": "Products API set."
    },
    {
      "name": "ProductsStock",
      "description": "Products stock api set."
    },
    {
      "name": "Recovery",
      "description": "Recovery controller."
    },
    {
      "name": "Registers",
      "description": "Registers api set."
    },
    {
      "name": "RegisterTransactions",
      "description": "Register transactions api set."
    },
    {
      "name": "Reservations",
      "description": "Reservations api set."
    },
    {
      "name": "SalePresets",
      "description": "Sale presets api set."
    },
    {
      "name": "Shift",
      "description": "Shift api set."
    },
    {
      "name": "ShiftCount",
      "description": "Shift count api set."
    },
    {
      "name": "SmsProviders",
      "description": "SMS provider controller."
    },
    {
      "name": "StockTransactions",
      "description": "Stock transactions api set."
    },
    {
      "name": "StoreOptions",
      "description": "Store options controller."
    },
    {
      "name": "Taxes",
      "description": "Taxes api set."
    },
    {
      "name": "Tokens",
      "description": "Tokens controller."
    },
    {
      "name": "UserAgreements",
      "description": "User agreements api set."
    },
    {
      "name": "UserGroups",
      "description": "User group api set."
    },
    {
      "name": "Users",
      "description": "Users api set."
    },
    {
      "name": "Variables",
      "description": "Variables api set."
    }
  ]
}